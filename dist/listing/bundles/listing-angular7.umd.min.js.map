{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","color","mode","value","bufferValue","previewFlug","selectsearch","onLiblistingChange","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","subscriptions","subscriptioncount","tableFooterColumns","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","currentautocompleteitem","filterautoval","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","unshift","hidemultipleselectbutton","data_list","createData","selection","SelectionModel","setTimeout","sl","textsearch","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","onSubmit","errormg","markAsTouched","dateSearch","condition","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toString","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","paging","results","action","limitdata","sortdata","clear","addautosearchdata","remove","splice","autocompletechangedetected","item","next","autoselval","filterval","values","name","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","n","status","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","isAllSelected","selected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","entries","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","formGroup","createForm","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","patchValue","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","fieldval","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","after","checkchange","onFormFieldChange","fromval","dependent","vc","condval","initialize","formBuilder","group","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","reset","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    // console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  } @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push('Actions');\n    }\n\n    this.displayedColumns = displayedcols;\n    this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');        /*adds select column in table by unshift function*/\n    }\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log('s', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            // console.log('t', this.search_settingsval.textsearch);\n          }\n        }\n      }\n\n    }, 1000);\n\n\n  }\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n\n\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    // console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any) {\n\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n      } else {\n        if (val == 1) {\n          this.limitcondval.pagecount--;\n          this.limitcondval.skip -= this.limitcondval.limit;\n        }\n        if (val == -1) {\n          this.limitcondval.pagecount++;\n          this.limitcondval.skip += this.limitcondval.limit;\n        }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  autosearchfunction(value: any, data: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput,'asi');\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    this.autosearch[value].push(data);\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n  textsearchfunction(value: any) {\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos',autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...',conditionobj,this.end_date);\n    // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n    // return;\n    this.date_search_source_countval = 0;\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.results.res != null && result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New Search of data loaded' }\n        });\n      } else {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No such search record found !!' }\n        });\n\n      }\n\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.date_search_source_countval = (result.count);\n      if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) { }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[0];\n                  }, 300);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[0];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[0]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    // console.log('manage control',field,type);\n    if (type == 'remove') {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          // console.log('removed',field['name'], 'c', y);\n        }\n      }\n    }\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n        this.loading = true;\n        const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n        const source: any = {};\n        source.data = this.formGroup.value;\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n\n        this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value });\n\n      }\n    } else {\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}