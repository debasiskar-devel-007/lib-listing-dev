{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","allSearchCond","searchbuttonval","searchBarFlag","color","mode","value","bufferValue","previewFlug","selectsearch","initiateSearch","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","SelectionModel","sl","textsearch","search","ats","k","name","datesearch","start_date","Date","$gte","format","toString","end_date","$lte","CustomButtonListen","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","autoSearchVal","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","SearchBarToggle","flag","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","action","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","label","condition","textSearch","unix","getTime","$regex","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","paging","maxpagecount","Number","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","values","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","msg","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","checkedlist","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","p","objk","entries","autoFocus","maxHeight","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","customlistenbuttons","formGroup","createForm","CustomFlagFields","onFormFieldChange","fieldval","fromval","customButtonVal","customfield","CustomFlagFieldsRemove","GeneratePassword","PasswordVal","makeid","patchValue","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","Math","floor","random","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","imagefields","singleImgFormData","multiple","filearray","deletefile","trackByFn","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","apideleteurl","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","resetformdata","reset","checkchange","dependent","vc","condval","initialize","this_2","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","chooseimg","querySelectorAll","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n  public allSearchCond: any = [];\n  public searchbuttonval: any = [];\n  public searchBarFlag: boolean = false;\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n  public initiateSearch: boolean = false;\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n  // search buttons \n  // @Input()\n  // set searchbuttons(val: any) {\n  //   this.searchbuttonval = val\n  //   console.log(this.searchbuttonval, 'customButtonFlagVal')\n  // }\n\n\n  stateGroups: string[];\n\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n\n\n\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            // this.selectSearch(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0])\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // selectSearch_condition\n            this.initiateSearch = true;\n            this.selectSearch_condition[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log(this.initiateSearch, 'initiateSearch select')\n            // console.log(this.search_settingsval, 'ss+++++=====++++', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n\n            // console.log(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0],'????? new selectSearch_condition',this.selectSearch_condition)\n\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            this.initiateSearch = true;\n            // console.log(this.initiateSearch, 'initiateSearch text')\n          }\n        }\n      }\n\n\n      if (this.search_settingsval.search != null) {\n        for (let ats in this.search_settingsval.search) {\n          if (this.search_settingsval.search[ats].value != null && this.search_settingsval.search[ats].value.length > 0) {\n            this.initiateSearch = true;\n\n            if (this.autosearch[this.search_settingsval.search[ats].field] == null) {\n              this.autosearch[this.search_settingsval.search[ats].field] = [];\n            }\n\n            for (let k in this.search_settingsval.search[ats].value) {\n              // console.log(this.search_settingsval.search[ats].value,'>>=======')\n              this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value[k].val, name: this.search_settingsval.search[ats].value[k].name });\n            }\n          }\n        }\n      }\n\n\n      // dateSearch_condition\n      if (this.search_settingsval.datesearch != null && this.search_settingsval.datesearch[0].value != null) {\n\n        this.start_date = moment(new Date(this.search_settingsval.datesearch[0].value.$gte)).format(\"YYYY-DD-MM\").toString();\n        this.end_date = moment(new Date(this.search_settingsval.datesearch[0].value.$lte)).format(\"YYYY-DD-MM\").toString();\n        this.dateSearch_condition[this.search_settingsval.datesearch[0].field] = this.search_settingsval.datesearch[0].value;\n\n      }\n      // console.log(this.search_settingsval, 'search_settingsval', this.dateSearch_condition)\n\n\n      if (this.initiateSearch == true) {\n        this.allSearch();\n      }\n    }, 1000);\n  }\n\n  // Custom Filter new\n  CustomButtonListen(val: any) {\n    // allSearchCond\n    // console.log(this.search_settingsval.search, 'this.allSearchCond')\n\n    this.onLiblistingButtonChange.emit(\n      {\n        limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, searchdata: this.search_settingsval, buttondata: val, allSearchCond: this.allSearchCond, autoSearchVal: this.autosearch\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n  }\n\n  // Search Bar Toggle\n  SearchBarToggle(flag) {\n    switch (flag) {\n      case true:\n        this.searchBarFlag = false;\n        break;\n      case false:\n        this.searchBarFlag = true;\n        break;\n    }\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n\n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n    // console.log(value, 'value', type, 'type', statusval, 'statusval')\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    // console.log(this.limitcondval, 'lim val');\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      this.limitcondval.limit = 100;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'You can see maximum 100 records at once !' }\n      });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    // this.oldlimitrange.push({\n    //   skip: this.limitcondval.skip,\n    //   limit: this.limitcondval.limit,\n    //   pagecount: this.limitcondval.pagecount\n    // });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval, results: this.result.results.res });\n\n        // if (this.libdataval.footersettings != null) {\n        //   this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n        // }\n\n\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n\n\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n\n\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput, 'asi', data, value, item);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n\n    // console.log(this.autosearch, 'autosearch 1130')\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      // console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    // console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n    this.allSearchCond = [];\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n\n\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 3000,\n          data: { errormessage: result.msg }\n        });\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        // console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            // console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n\n\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n\n\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      // console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    // console.log(field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos qq++', autosearch,this.autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n\n    // console.log(this.selectSearch_condition, 'selectSearch_condition')\n\n    this.allSearchCond = conditionobj;\n\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n    this.initiateSearch = false;\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = '';\n\n  public customlistenbuttons: any = {};\n\n  @Input()\n  set custombuttons(val: any) {\n    this.customlistenbuttons = val;\n    // console.log(this.customlistenbuttons,'customlistenbuttons form')\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n  public singleImgFormData:any=[];\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n\n  // CustomFlagFields\n  CustomFlagFields(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'add' });\n  }\n\n  CustomFlagFieldsRemove(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'remove' });\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    passwordFieldData = val.value;\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     passwordFieldData = this.formdataval.fields[g].value;\n    //     // console.log(passwordFieldData, 'PasswordVal', this.formdataval.fields[g])\n    //   }\n    // }\n    // console.log(passwordFieldData, '??')\n\n    if (passwordFieldData != null && passwordFieldData != '') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n\n  previewGeneratePassword(val) {\n\n    if (val.value != null && val.value != '') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n\n\n          if( this.formdataval.fields[g] !=null && this.formdataval.fields[g].imagefields != null && this.formdataval.fields[g].imagefields.length > 0){\n            this.singleImgFormData=this.formdataval.fields[g].imagefields;\n            // for(let i in this.formdataval.fields[g].imagefields){\n            //   this.singleImgFormData.push({name:this.formdataval.fields[g].imagefields[i].name,value:this.formdataval.fields[g].imagefields[i].value})\n            // }\n          }\n\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  uploadfile(val: any) {\n    console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // if(val.imagefields.length > 0){\n          //   file.imagefields = val.imagefields\n          // }\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    console.log(val, 'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n\n  }\n\n\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n\n                this.filearray[this.formdataval.fields[n].name][fa].imagefields = this.formdataval.fields[n].imagefields;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  chooseimg(vals: any, fields: any) {\n    console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n\n\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n\n\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            tfile.singleImgFormData = this.singleImgFormData;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n\n            console.log(tfile,'tfile>>',this.singleImgFormData,'singleImgFormData')\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n\n\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n\n\n        //for multiple email add\n        // if(this.formdataval.fields[m].type == 'email'){\n        //   if(this.formGroup.controls[x].value == true){\n        //     console.log(this.formdataval.fields[m],'==this.formdataval.fields[m]++',this.formGroup.controls[x].value,'??',tempformval,'>>>',b[0])\n        //     // for(let i  in tempformval){\n        //     //   if(tempformval[i] == this.formdataval.fields[m].name.match('/email/g')){\n        //     //     console.log(tempformval[i],'tempformval[i]')\n        //     //   }\n        //     // }\n        //   }\n        // }\n\n\n\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }Z\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n      // if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n      this.loading = true;\n      const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n      const source: any = {};\n      source.data = this.formGroup.value;\n\n      this.onFormFieldChange.emit({ field: 'fromsubmitdata', fieldval: 'success', formdataval: this.formdataval, source: source, loading: this.loading });\n\n      // this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n      //   let result: any = {};\n      //   result = res;\n      //   if (result.status == 'success') {\n      //     this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n      //     this.formGroup.reset();\n      //     this._snackBar.openFromComponent(SnackbarComponent, {\n      //       duration: 6000,\n      //       data: { errormessage: this.formdataval.successmessage }\n      //     });\n      //     // console.log(result, 'red', this.formdataval.redirectpath);\n      //     if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n      //       this.router.navigate([this.formdataval.redirectpath]);\n      //     } else {\n      //       this.loading = false;\n      //     }\n      //   }\n      //   if (result.status == 'error') {\n      //     this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n      //     this._snackBar.openFromComponent(SnackbarComponent, {\n      //       duration: 6000,\n      //       data: result\n      //     });\n      //     this.loading = false;\n      //   }\n\n      // }, error => {\n      //   // console.log('Oooops!');\n      //   this._snackBar.openFromComponent(SnackbarComponent, {\n      //     duration: 6000,\n      //     data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      //   });\n      //   this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n      //   this.loading = false; //disable loader \n      // });\n      // }\n      // else {\n\n      //   this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value, loading: this.loading });\n      // }\n    }\n    else {\n      this.onFormFieldChange.emit({ field: 'fromsubmitdataerror', fieldval: 'validationerror', fromval: this.formGroup.value, loading: this.loading });\n\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}