{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secret","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","allSearchCond","searchbuttonval","searchBarFlag","searchBarToolTip","searchBarFlagVal","color","mode","value","bufferValue","previewFlug","selectsearch","initiateSearch","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","buttonSearchData","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","setTimeout","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","SelectionModel","expandedElement","sl","textsearch","search","ats","k","name","datesearch","$lte","start_date","Date","$gte","format","toString","end_date","buttonsearch","ind","parseInt","values","CustomButtonListen","action","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","autoSearchVal","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","SearchBarToggle","flag","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","label","condition","textSearch","unix","getTime","$regex","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","paging","maxpagecount","Number","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","msg","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","window","clickurl","checkedlist","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","p","objk","entries","autoFocus","maxHeight","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","bt","count","gettypeof","openBottomSheetForSearch","ModalForButtomSearch","disableClose","searchFlag","j","selectedData","clearButtonSearchChips","i_1","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","animations","trigger","state","minHeight","transition","animate","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","chooseChipItem","searchByItem","bnottoRef","reset","searchVal","allButtonData","searchByKeyword","loading_flag","apiService","slice","matAutosearchData","errmsg","matChipData","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","customlistenbuttons","externalDataVal","formGroup","createForm","CustomFlagFields","onFormFieldChange","fieldval","fromval","customButtonVal","customfield","CustomFlagFieldsRemove","GeneratePassword","PasswordVal","makeid","patchValue","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","Math","floor","random","externalDataFunction","fieldVal","externalDataEditFunction","ival","valind","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","reader","FileReader","onload","imageUrl","aspectratio","croppedImage","toFixed","readAsDataURL","loaded","filearray","deletefile","imagefields","trackByFn","trackByFnMultiple","trackByFnMulti","keyupVal","fi","fname","sfname","ev","flds","checkValue","uploadfile","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","apideleteurl","deletesinglefile","deletesinglefilefrommultiple","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","resetformdata","checkchange","dependent","vc","condval","initialize","this_2","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","chooseimg","querySelectorAll","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","imgfields","valid","apiUrl","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","singleimageCropped","ci","base64","multipleimageCropped","fldval","imageLoaded","cropperReady","loadImageFailed","singleImgFormData","imgValue","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads';\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,\n    private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secret')) {\n      this.secretkey = this.cookieService.get('secret');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) { this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch(link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secret = this.secretkey;\n    source.token = token;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  \n  postSearch1(link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = { source, id: data._id };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, ids: data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data: { ids: data, val } };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\ndeclare var $: any;\n\nimport * as momentImported from 'moment';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\n\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n  public allSearchCond: any = [];\n  public searchbuttonval: any = [];\n  public searchBarFlag: boolean = false;\n  public searchBarToolTip: any = 'Open Search Bar';\n  public searchBarFlagVal: boolean = false;\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n  public initiateSearch: boolean = false;\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    // console.log('search_settingsval++++++', this.search_settingsval)\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    // console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n    // searchBarFlag\n\n    // console.log(libdataval.searchBarFlagVal)\n\n    if (libdataval.searchBarFlagVal != null && libdataval.searchBarFlagVal != '') {\n      setTimeout(() => {\n        this.searchBarFlagVal = libdataval.searchBarFlagVal;\n      }, 1000);\n    } else {\n      this.searchBarFlag = true;\n    }\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    // console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n  // search buttons \n  // @Input()\n  // set searchbuttons(val: any) {\n  //   this.searchbuttonval = val\n  //   console.log(this.searchbuttonval, 'customButtonFlagVal')\n  // }\n\n  expandedElement:any;\n\n\n\n  stateGroups: string[];\n\n  stateGroup: Observable<string[]>;\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  public buttonSearchData: any = [];\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n\n\n\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    \n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    this.expandedElement=this.dataSource;\n\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null && this.search_settingsval.selectsearch[sl].value != '') {\n            // this.selectSearch(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0])\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // selectSearch_condition\n            this.initiateSearch = true;\n            this.selectSearch_condition[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log(this.initiateSearch, 'initiateSearch select')\n            // console.log(this.search_settingsval, 'ss+++++=====++++', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n\n            // console.log(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0],'????? new selectSearch_condition',this.selectSearch_condition)\n\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null && this.search_settingsval.textsearch[sl].value != '') {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            this.initiateSearch = true;\n            // console.log(this.initiateSearch, 'initiateSearch text')\n          }\n        }\n      }\n\n\n      if (this.search_settingsval.search != null) {\n        for (let ats in this.search_settingsval.search) {\n          if (this.search_settingsval.search[ats].value != null && this.search_settingsval.search[ats].value != '' && this.search_settingsval.search[ats].value.length > 0) {\n            this.initiateSearch = true;\n\n            if (this.autosearch[this.search_settingsval.search[ats].field] == null) {\n              this.autosearch[this.search_settingsval.search[ats].field] = [];\n            }\n\n            for (let k in this.search_settingsval.search[ats].value) {\n              // console.log(this.search_settingsval.search[ats].value,'>>=======')\n              this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value[k].val, name: this.search_settingsval.search[ats].value[k].name });\n            }\n          }\n        }\n      }\n\n\n      // dateSearch_condition\n      if (this.search_settingsval.datesearch != null && this.search_settingsval.datesearch[0].value != null && this.search_settingsval.datesearch[0].value != '') {\n        this.initiateSearch = true;\n\n        this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte - 86399000;\n\n        this.start_date = moment(new Date(this.search_settingsval.datesearch[0].value.$gte)).format(\"YYYY-MM-DD\").toString();\n        this.end_date = moment(new Date(this.search_settingsval.datesearch[0].value.$lte)).format(\"YYYY-MM-DD\").toString();\n\n        this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte + 86399000;\n\n        this.dateSearch_condition[this.search_settingsval.datesearch[0].field] = this.search_settingsval.datesearch[0].value;\n      }\n      // console.log(this.search_settingsval, 'search_settingsval', this.dateSearch_condition)\n\n\n\n      if (this.search_settingsval.buttonsearch != null) {\n        // console.log(this.search_settingsval.buttonsearch, 'this.search_settingsval.buttonsearch')\n        for (let i in this.search_settingsval.buttonsearch) {\n          let ind: any = 0;\n          ind = parseInt(i);\n          if (this.search_settingsval.buttonsearch[i].values != null && this.search_settingsval.buttonsearch[i].values != '') {\n            this.initiateSearch = true;\n            this.buttonSearchData.push({ field: this.search_settingsval.buttonsearch[i].field, key: ind, value: this.search_settingsval.buttonsearch[i].values })\n          }\n        }\n      }\n\n      if (this.initiateSearch == true) {\n        this.allSearch();\n      }\n    }, 1000);\n  }\n\n\n\n\n  // Custom Filter new\n  CustomButtonListen(val: any) {\n    // allSearchCond\n    // console.log(this.search_settingsval.search, 'this.allSearchCond')\n\n    this.onLiblistingButtonChange.emit(\n      {\n        action: 'customlistenbutton', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, searchdata: this.search_settingsval, buttondata: val, allSearchCond: this.allSearchCond, autoSearchVal: this.autosearch, buttonSearchData: this.buttonSearchData\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n  }\n\n  // Search Bar Toggle\n  SearchBarToggle(flag) {\n    this.onLiblistingButtonChange.emit(\n      {\n        action: 'searchbar', flag:flag\n      }\n    )\n    switch (flag) {\n      case true:\n        this.searchBarFlag = false;\n        this.searchBarToolTip = 'Open Search Bar';\n        break;\n      case false:\n        this.searchBarFlag = true;\n        this.searchBarToolTip = 'Close Search Bar';\n        break;\n    }\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n\n\n\n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n\n\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n          $lte: new Date(this.end_date).getTime() + 86399000,\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime() + 86399000\n        };\n      }\n\n      // console.log(this.dateSearch_condition.created_datetime.$gte,'after + 86399000',this.dateSearch_condition.created_datetime.$lte)\n      // var dt=this.dateSearch_condition.created_datetime.$lte - 86399000;\n      // console.log(this.dateSearch_condition.created_datetime.$gte,'after - 86399000',dt )\n      // console.log(this.dateSearch_condition, 'dateSearch_condition++');\n\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n    // console.log(value, 'value', type, 'type', statusval, 'statusval')\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    // console.log(this.limitcondval, 'lim val');\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      this.limitcondval.limit = 100;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'You can see maximum 100 records at once !' }\n      });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    // this.oldlimitrange.push({\n    //   skip: this.limitcondval.skip,\n    //   limit: this.limitcondval.limit,\n    //   pagecount: this.limitcondval.pagecount\n    // });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval, results: this.result.results.res });\n\n        // if (this.libdataval.footersettings != null) {\n        //   this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n        // }\n\n\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n\n\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n\n\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput, 'asi', data, value, item);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n\n    // console.log(this.autosearch, 'autosearch 1130')\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      // console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    // console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n    this.allSearchCond = [];\n    this.buttonSearchData = [];\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n\n\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 3000,\n          data: { errormessage: result.msg }\n        });\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        // console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            // console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n\n\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n\n\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      // console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n\n\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n\n\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    // console.log(field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos qq++', autosearch,this.autosearch);\n\n\n    // button Search Data\n\n    const buttonsearch: any = {};\n    for (let bs in this.buttonSearchData) {\n      for (const k in this.buttonSearchData[bs].value) {\n        const bt: any = {};\n        bt[this.buttonSearchData[bs].field] = this.buttonSearchData[bs].value[k].val.toString().toLowerCase();\n        if (buttonsearch.$or == null) { buttonsearch.$or = []; }\n        // console.log(bt,'bt',bs,'bs')\n        buttonsearch.$or.push(bt);\n      }\n    }\n    // console.log(this.buttonSearchData, 'buttonsearch')\n\n\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, buttonsearch, this.selectSearch_condition, this.libdataval.basecondition);\n\n    // console.log(this.selectSearch_condition, 'selectSearch_condition')\n\n    this.allSearchCond = conditionobj;\n\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n    this.initiateSearch = false;\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n  // open Bottom Sheet For Search\n  openBottomSheetForSearch(data: any, index) {\n    var count = 1;\n    // console.log(data, 'openBottomSheetForSearch', index)\n    const bs = this.dialog.open(ModalForButtomSearch, { panelClass: 'button-search-modal', data: { items: data } });\n    bs.disableClose = true;\n    bs.afterClosed().subscribe(result => {\n      // console.log(result, 'result++++==== data', data)\n      if (result != null && result.flag == 'yes') {\n        count = 1;\n        var searchFlag = 0;\n\n        // console.log(result, 'result++++====??', index)\n        // console.log(this.buttonSearchData, 'buttonSearchData 1')\n\n        if (this.buttonSearchData.length > 0) {\n          searchFlag = 1;\n          for (let i in this.buttonSearchData) {\n            if (this.buttonSearchData[i].field == result.items.field) {\n              count = 2;\n              searchFlag = 1;\n\n              // console.log('true +++ count', count)\n              for (let j in result.selectedData) {\n                this.buttonSearchData[i].value.push(result.selectedData[j]);\n              }\n              if (searchFlag == 1) {\n                // console.log(searchFlag, 'searchFlag 2')\n                this.allSearch();\n              }\n              return;\n            } else {\n              count = 0\n            }\n          }\n          // console.log(count, 'count else check')\n\n          // console.log(this.buttonSearchData, 'buttonSearchData 2')\n\n          if (count == 0) {\n            this.buttonSearchData.push({ value: result.selectedData, key: index, field: result.items.field });\n            searchFlag = 1;\n          }\n        } else {\n          this.buttonSearchData.push({ value: result.selectedData, key: index, field: result.items.field });\n          searchFlag = 1;\n        }\n\n        // console.log(searchFlag, 'searchFlag 1')\n\n        if (searchFlag == 1) {\n          // console.log(searchFlag, 'searchFlag 2')\n          this.allSearch();\n        }\n\n\n      }\n    })\n  }\n\n\n  // clear Button Search Chips  data\n  clearButtonSearchChips(bs, i, item, j) {\n    // console.log(bs, i, item, j, 'bs,i,item,j');\n    this.buttonSearchData[i].value.splice(j, 1);\n    // console.log(this.buttonSearchData, 'buttonSearchData splice')\n\n    // this.search_settingsval.buttonsearch[bs.key].values\n    for (let i in this.search_settingsval.buttonsearch) {\n      if (this.search_settingsval.buttonsearch[i].field == bs.field) {\n        // console.log('', this.search_settingsval.buttonsearch[i])\n        this.search_settingsval.buttonsearch[i].value.push(item);\n      }\n    }\n\n    // console.log(this.search_settingsval.buttonsearch,'this.search_settingsval.buttonsearch')\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n\n\n// button-search-Modal\n@Component({\n  selector: 'button-search-modal',\n  templateUrl: 'button-search-modal.html',\n})\nexport class ModalForButtomSearch {\n\n  public buttonSearchData: any = {};\n  public selectedData: any = [];\n  public searchVal: any = '';\n  public allButtonData: any = [];\n  public loading_flag: boolean = false;\n  public errmsg: any = '';\n  public matChipData: any = []\n    ;\n  public matAutosearchData: any = [];\n\n\n\n  constructor(private bnottoRef: MatDialogRef<ModalForButtomSearch>, @Inject(MAT_DIALOG_DATA) public data: any, public apiService: ApiService) {\n    // console.log(\"bottom-sheet-search\", data);\n    this.buttonSearchData = {};\n    this.buttonSearchData = data;\n    this.allButtonData = data.items.value;\n  }\n\n  chooseChipItem(data, i) {\n    // console.log(data, '??data')\n    this.selectedData.push(data);\n    this.buttonSearchData.items.value.splice(i, 1);\n  }\n\n  // submit \n  searchByItem() {\n    // console.log(this.selectedData)\n    this.data.flag = 'yes';\n    this.data.selectedData = this.selectedData;\n    // this.searchVal = '';\n    // this.buttonSearchData.items.value = [];\n    this.bnottoRef.close(this.data);\n  }\n\n  remove(val, i) {\n    this.selectedData.splice(i, 1);\n    this.buttonSearchData.items.value.push(val);\n  }\n\n  reset() {\n    this.searchVal = '';\n    this.buttonSearchData.items.value = [];\n    this.buttonSearchData.items.value = this.allButtonData;\n\n  }\n\n  searchByKeyword(value) {\n\n    if (this.searchVal != null && this.searchVal != '') {\n      this.loading_flag = true;\n      let link: any = this.buttonSearchData.items.serversearchdata.url + this.buttonSearchData.items.serversearchdata.endpoint;\n      let data: any = {\n        \"search_str\": value,\n        \"limit\": 50\n      }\n\n      this.apiService.postSearch1(link, data).subscribe(res => {\n        // console.log(data)\n        let result: any = res;\n\n        if (result.status == 'success') {\n          // this.buttonSearchData.items.value = [];\n\n          this.loading_flag = false;\n\n          result = result.res.slice(0, 50);\n          // this.buttonSearchData.items.value = result;\n          // console.log(result, 'result', this.loading_flag)\n          this.matAutosearchData = result;\n        }\n      })\n    } else {\n      this.errmsg = \"Please Enter Keywords\";\n    }\n  }\n\n  close() {\n    this.data.flag = 'no';\n    this.bnottoRef.close(this.data);\n\n  }\n\n\n}\n\n\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = '';\n\n  public externalDataVal: any = [];\n\n  public customlistenbuttons: any = {};\n\n  @Input()\n  set custombuttons(val: any) {\n    this.customlistenbuttons = val;\n    // console.log(this.customlistenbuttons,'customlistenbuttons form')\n  }\n\n\n  @Input()\n  set externaldatavalue(value: any) {\n    this.externalDataVal = value;\n    console.log(this.externalDataVal, 'this.externalDataVal')\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n  public singleImgFormData: any = [];\n\n  public imgValue: string = '';\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = \"\";\n  croppedImage: any = \"\";\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n\n  // CustomFlagFields\n  CustomFlagFields(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'add' });\n  }\n\n  CustomFlagFieldsRemove(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'remove' });\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    // console.log(val,'++pass',this.formGroup.value)\n\n    // console.log(this.formGroup.controls[val.name].value,'++???',this.formGroup.controls[val.value])\n\n\n    var passwordFieldData: any = '';\n\n    if (this.formGroup.controls[val.name].value != null && typeof (this.formGroup.controls[val.name].value) != 'undefined' && this.formGroup.controls[val.name].value != '') {\n      passwordFieldData = this.formGroup.controls[val.name].value;\n    } else {\n      passwordFieldData = '';\n    }\n\n\n    // console.log(typeof(this.formGroup.controls[val.name].value),'??',this.formGroup.controls[val.name].value)\n\n\n    if (passwordFieldData != null && passwordFieldData != '' && typeof (passwordFieldData) != 'undefined') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate or Enter Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n  previewGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    if (this.formGroup.controls[val.name].value != null && typeof (this.formGroup.controls[val.name].value) != 'undefined' && this.formGroup.controls[val.name].value != '') {\n      passwordFieldData = this.formGroup.controls[val.name].value;\n    } else {\n      passwordFieldData = '';\n    }\n\n    if (passwordFieldData != null && passwordFieldData != '' && typeof (passwordFieldData) != 'undefined') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate or Enter Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n\n\n  // external Data Function\n  externalDataFunction(value, index) {\n    // this.externalDataVal=[];\n    this.onFormFieldChange.emit({ action: 'externaldata', flag: 'add', fieldVal: value, index: index, externalDataVal: this.externalDataVal });\n    // console.log(value, this.externalDataVal, index, '++')\n  }\n\n  externalDataEditFunction(flag, field, ival, i) {\n\n    // console.log(flag, field, ival, i, 'exter ++++')\n\n    if (flag == 'edit') {\n      this.onFormFieldChange.emit({ action: 'externaldata', flag: 'edit', fieldVal: field, index: ival, valind: i, externalDataVal: this.externalDataVal });\n    }\n\n    if (flag == 'remove') {\n      field.value.splice(i, 1);\n    }\n\n\n  }\n\n\n\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n\n\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      console.log(files, 'files', e.target.id);\n      console.log('farr', this.filearray);\n      console.log('files++', file);\n\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n\n          // console.log(this.singleImgFormData,'singleImgFormData')\n\n          console.log('file details', this.formdataval.fields[g], g);\n\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n\n            console.log(files[i], 'files[i]=======single')\n\n            //image preview base/64\n            if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n              //Show image preview\n              let reader = new FileReader();\n              reader.onload = (event: any) => {\n                this.formdataval.fields[g].imageUrl = event.target.result;\n\n                if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].aspectratio.length > 0) {\n                  for (let c in this.formdataval.fields[g].aspectratio) {\n                    this.formdataval.fields[g].croppedImage = [];\n                    this.formdataval.fields[g].aspectratio[c] = Number(this.formdataval.fields[g].aspectratio[c]).toFixed(2);\n                  }\n                }\n                // console.log(this.formdataval.fields[g], 'imageUrl+++++')\n              };\n              reader.readAsDataURL(files[i]);\n            }\n\n            this.formdataval.fields[g].loaded = 0;\n\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n              // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++==')\n\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n\n            console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++ >M')\n\n            console.log(files[i], 'files[i]======= multiple')\n\n            if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n              //Show image preview\n              let reader = new FileReader();\n              reader.onload = (event: any) => {\n                files[i].imageUrl = event.target.result;\n                if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].aspectratio.length > 0) {\n                  console.log(this.formdataval.fields[g].aspectratio, 'ratio+=====>')\n                  files[i].croppedImage = [];\n                  files[i].aspectratio = this.formdataval.fields[g].aspectratio;\n\n                  for (let c in files[i].aspectratio) {\n                    if (files[i].aspectratio != null && files[i].aspectratio[c] != null && typeof(files[i].aspectratio[c]) != 'undefined') {\n                      console.log(files[i].aspectratio[c],'files[i].aspectratio[c]')\n                      files[i].aspectratio[c] = Number(files[i].aspectratio[c]).toFixed(2);\n                    }\n                  }\n                  console.log(files[i], 'files[i]==>')\n                }\n                console.log(this.formdataval.fields[g], 'imageUrl+++++')\n              };\n              reader.readAsDataURL(files[i]);\n            }\n\n            files[i].loaded = 0;\n\n\n            if (this.formdataval.fields[g] != null && this.formdataval.fields[g].imagefields != null && this.formdataval.fields[g].imagefields.length > 0) {\n\n              files[i].imagefields = this.formdataval.fields[g].imagefields;\n\n            }\n\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n          }\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h)\n  // }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  trackByFnMultiple(index) {\n    return index;\n  }\n\n\n  trackByFnMulti(index) {\n    return index;\n  }\n\n  keyupVal(val, item, fi, ind, data, fname, sfname, ev) {\n    // console.log('this.filearray[fname][fi].flds[ind] in kyupval ', this.filearray[fname][fi].flds[ind]);\n    // console.log(val[fi].imagefields, 'keyupVal', 's', item, fi, ind, data, '---', this.filearray, ',,', fname, sfname, ev.target.value);\n    this.filearray[fname][fi].imagefields[ind]['value'] = ev.target.value;\n    // if (this.filearray[fname][fi].flds == null) {\n    //   this.filearray[fname][fi].flds == [];\n    //   this.filearray[fname][fi].flds[ind] = [];\n    // }\n    if (this.filearray[fname][fi].flds == null || this.filearray[fname][fi].flds[ind] == null) {\n      // console.log('111111111111111111111111111111');\n      if (this.filearray[fname][fi].flds == null) this.filearray[fname][fi].flds = [];\n      this.filearray[fname][fi].flds[ind] = [];\n    }\n    // console.log('this.filearray[fname][fi].flds[ind] before', this.filearray[fname][fi].flds[ind]);\n    this.filearray[fname][fi].flds[ind] = { key: ev.target.name, value: ev.target.value };\n    // console.log('this.filearray[fname][fi].flds[ind] after', this.filearray[fname][fi].flds[ind]);\n    // console.log(sfname, 'sfname', ind, ev.target.value);\n    // console.log('this.filearray');\n    // console.log(this.filearray);\n    // console.log('ddd', fi, ind);\n    // console.log(this.filearray[fname][fi]);\n  }\n\n\n  checkValue(val, item, fi, ind, data, fname, sfname) {\n    // console.log(val, '++')\n\n    // console.log(val[fi].imagefields, 'keyupVal', 's', item, fi, ind, data, '---', this.filearray, ',,', fname, sfname);\n\n    if (this.filearray[fname][fi].flds == null || this.filearray[fname][fi].flds[ind] == null) {\n      // console.log('111111111111111111111111111111');\n      if (this.filearray[fname][fi].flds == null) this.filearray[fname][fi].flds = [];\n      this.filearray[fname][fi].flds[ind] = [];\n    }\n\n    if (this.filearray[fname][fi].flds != null && this.filearray[fname][fi].flds[ind] != null && this.filearray[fname][fi].flds[ind].key != null && this.filearray[fname][fi].flds[ind].key == sfname) {\n      // console.log('2222222222222222222222222 if');\n\n      switch (this.filearray[fname][fi].flds[ind].value) {\n\n        case true:\n          this.filearray[fname][fi].flds[ind].value = false;\n          break;\n        case false:\n          this.filearray[fname][fi].flds[ind].value = true;\n          break;\n      }\n    } else {\n      // console.log('33333333333333333333 else');\n\n      this.filearray[fname][fi].flds[ind] = { key: sfname, value: true };\n    }\n\n    // console.log('this.filearray[fname][fi].flds[ind] before', this.filearray[fname][fi].flds[ind]);\n    // console.log('this.filearray[fname][fi].flds[ind] after', this.filearray[fname][fi].flds[ind]);\n    // console.log('this.filearray');\n    // console.log(this.filearray);\n    // console.log('ddd', fi, ind);\n    // console.log(this.filearray[fname][fi]);\n  }\n\n\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          val.loaded = null;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // if(val.imagefields.length > 0){\n          //   file.imagefields = val.imagefields\n          // }\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n\n\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n\n\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n\n\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val, 'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.loaded = null;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n\n\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    console.log('val', val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this.filearray[val.name].uploaded = 2;\n\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        val.value = {};\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  deletesinglefile(val: any, flag: any) {\n    console.log(val, 'val+++ delete', flag)\n    if (flag == 'image/png' || flag == 'image/jpg' || flag == 'image/jpeg') {\n      this.filearray[val.name] = null;\n      val.imageUrl = null;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Deleted !!' }\n      });\n    } else {\n      this.filearray[val.name] = null;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Deleted !!' }\n      });\n    }\n  }\n\n\n  deletesinglefilefrommultiple(val: any, field: any = '', index: any) {\n    console.log(val, field, index, '????+++++')\n    const file: any = this.filearray[val.name][index];\n    if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Deleted !!' }\n    });\n  }\n\n\n\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    file.uploaded = 2;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n\n\n  managefromcontrol(field: any, type: any) {\n    // console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          // console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      // console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            // console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n\n  }\n\n\n  checkchange(field: any, index: any) {\n    // console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n\n\n                // this.filearray[this.formdataval.fields[n].name][fa].imagefields = this.formdataval.fields[n].imagefields;\n              }\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n\n            }\n          }\n\n          // console.log(this.filearray, 'filearray')\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  chooseimg(vals: any, fields: any) {\n    // console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n\n\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n\n            console.log(this.filearray[this.formdataval.fields[m].name], '>>?? file submit')\n            console.log(this.formdataval.fields[m], '>>?? file submit ss')\n\n\n            const tfile: any = {};\n\n            if (this.formdataval.fields[m].aspectratio != null && this.formdataval.fields[m].aspectratio.length > 0) {\n              tfile.aspectratio = this.formdataval.fields[m].aspectratio;\n              tfile.croppedImage = this.formdataval.fields[m].croppedImage;\n            }\n\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n\n            tfile.imagefields = this.formdataval.fields[m].imagefields;\n\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n\n            console.log(tfile, 'tfile>>',)\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              console.log(this.filearray[this.formdataval.fields[m].name][g], 'this.filearray[this.formdataval.fields[m].name][g]')\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n\n              if (this.filearray[this.formdataval.fields[m].name][g].aspectratio != null && this.filearray[this.formdataval.fields[m].name][g].aspectratio.length > 0) {\n                tfile.aspectratio = this.filearray[this.formdataval.fields[m].name][g].aspectratio;\n                tfile.croppedImage = this.filearray[this.formdataval.fields[m].name][g].croppedImage;\n              }\n\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n\n              console.log(tfile, 'tfile++')\n\n              // tfile.imagefields = this.formdataval.fields[m].imagefields; flds\n\n              if (this.formdataval.fields[m].imagefields != null && this.formdataval.fields[m].imagefields.length > 0) {\n\n                // console.log(this.filearray[this.formdataval.fields[m].name][g].flds, 'flds ')\n\n                // console.log(this.filearray[this.formdataval.fields[m].name][g].imagefields, 'imagefields')\n\n                if (this.filearray[this.formdataval.fields[m].name][g].flds != null && this.filearray[this.formdataval.fields[m].name][g].flds.length > 0) {\n\n                  tfile.imgfields = this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  tfile.flds = this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  // for (let img in this.filearray[this.formdataval.fields[m].name][g].imagefields) {\n                  //   for (let fl in this.filearray[this.formdataval.fields[m].name][g].flds) {\n                  //     if (this.filearray[this.formdataval.fields[m].name][g].flds[fl].key == this.filearray[this.formdataval.fields[m].name][g].imagefields[img].name) {\n                  //       console.log('imagefields', this.filearray[this.formdataval.fields[m].name][g].imagefields[img])\n                  //       this.filearray[this.formdataval.fields[m].name][g].imagefields[img].val = this.filearray[this.formdataval.fields[m].name][g].flds[fl].value\n                  //     }\n                  //   }\n                  // }\n\n                  // tfile.imgfields = this.formdataval.fields[m].imagefields;\n\n                  // tfile.imgfil=this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  // console.log('tfile++++>', tfile)\n\n                }\n              }\n\n\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n\n\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n\n\n        //for multiple email add\n        // if(this.formdataval.fields[m].type == 'email'){\n        //   if(this.formGroup.controls[x].value == true){\n        //     console.log(this.formdataval.fields[m],'==this.formdataval.fields[m]++',this.formGroup.controls[x].value,'??',tempformval,'>>>',b[0])\n        //     // for(let i  in tempformval){\n        //     //   if(tempformval[i] == this.formdataval.fields[m].name.match('/email/g')){\n        //     //     console.log(tempformval[i],'tempformval[i]')\n        //     //   }\n        //     // }\n        //   }\n        // }\n\n\n\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n\n    if (this.formGroup.valid) {\n      // if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n      this.loading = true;\n      const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n      const source: any = {};\n      source.data = this.formGroup.value;\n\n      if (this.formdataval.secret != null && this.formdataval.jwttoken != null) {\n        source.secret = this.formdataval.secret;\n        source.jwttoken = this.formdataval.jwttoken;\n      }\n\n      if (this.formdataval.endpoint != null && this.formdataval.endpoint != '') {\n\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n            this.loading = false;\n          }\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n        this.loading = false\n        this.onFormFieldChange.emit({\n          field: 'fromsubmit', fieldval: 'success', formdataval: this.formdataval, source: source, loading: this.loading,\n          fromval: this.formGroup.value\n        });\n      }\n    }\n    else {\n      this.onFormFieldChange.emit({ field: 'fromsubmiterror', fieldval: 'validationerror', fromval: this.formGroup.value, loading: this.loading });\n\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n  }\n\n  singleimageCropped(event: ImageCroppedEvent, field, ival, ci) {\n    console.log(event, 'event+++64', this.formdataval.fields[ival], field, ci)\n    this.formdataval.fields[ival].croppedImage[ci] = event.base64\n    // this.croppedImage = event.base64;\n    console.log(this.formdataval.fields[ival].croppedImage[ci], 'this.croppedImage===>>')\n  }\n\n  multipleimageCropped(event: ImageCroppedEvent, files, ival, ci, fi, fldval) {\n    console.log(event, 'event+++64', this.formdataval.fields[ival], files, ival, ci, '++++++++++++++++', fi, fldval)\n    fldval[fi].croppedImage[ci] = event.base64;\n    // this.croppedImage = event.base64;\n    console.log(files, 'this.croppedImage===>>')\n  }\n\n  imageLoaded() {\n    // show cropper\n  }\n\n  cropperReady() {\n    // cropper ready\n  }\n\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent, ModalForButtomSearch} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';x\n// import { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe,ModalForButtomSearch],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent,ModalForButtomSearch],\n})\nexport class ListingModule {\n}\n"]}