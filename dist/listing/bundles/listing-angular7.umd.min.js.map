{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","color","mode","value","bufferValue","previewFlug","selectsearch","onLiblistingChange","searchstrsarr","oldlimitrange","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","selection","SelectionModel","sl","textsearch","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","onSubmit","errormg","markAsTouched","dateSearch","item","label","condition","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toString","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","name","paging","maxpagecount","Number","action","limitdata","sortdata","clear","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","values","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","checkedlist","seldata","selected","selecteddata","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","entries","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","formGroup","createForm","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","patchValue","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","fieldval","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","checkchange","onFormFieldChange","fromval","dependent","vc","condval","initialize","formBuilder","group","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","reset","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"47DAAA,IAAAA,oCAECC,GAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAIZ,SAAAH,qBC8aAI,EAAAC,UAAAC,eAAA,SAAeC,EAA4BC,EAAiBC,EAAkBC,GAE5E,GAA0B,oBAAtBH,EAAaI,KAA4B,KACrCC,EAAqB,CACzBD,KAAM,YACNE,IAAK,uDACLC,OAAQ,OACRC,KAAM,CAAEC,KAAMN,IAEhBO,KAAKC,YAAYC,KAAKP,QACjB,GAA0B,iBAAtBL,EAAaI,MAAwD,oBAAtBJ,EAAaa,KACnC,IAA9Bb,EAAaa,KAAKC,WACpBJ,KAAKK,MAAQ,GACbL,KAAKK,MAAMC,KAAKhB,EAAaa,MAC7BI,QAAQC,IAAI,uBACZD,QAAQC,IAAIR,KAAKK,OACjBL,KAAKS,SAAWT,KAAKK,MAAMK,OAC3BV,KAAKW,aAAeX,KAAKK,MAAM,GAAGO,SAASd,KAAKe,iBAE7C,GAA0B,cAAtBvB,EAAaI,MAAqD,oBAAtBJ,EAAaa,KAAsB,KAClFW,EAAQd,KAAKK,MAAMU,UAAS,SAACZ,GAAQ,MAA6B,oBAAtBb,EAAaa,MAAwBA,EAAKa,KAAO1B,EAAaa,KAAKa,KACrHhB,KAAKK,MAAMS,GAASxB,EAAaa,KACjCH,KAAKS,SAAWT,KAAKK,MAAMK,OACN,MAAjBV,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGO,WACzCZ,KAAKW,aAAeX,KAAKK,MAAM,GAAGO,SAASd,KAAKe,YAElDN,QAAQC,IAAI,gCACZD,QAAQC,IAAIR,KAAKK,WACc,YAAtBf,EAAaI,KACtBM,KAAKK,MAAQL,KAAKK,MAAMY,OAAM,SAAEd,GAAqB,OAAAA,IAASb,EAAaa,OAC5C,aAAtBb,EAAaI,KACtBM,KAAKkB,UAAW,EACe,YAAtB5B,EAAaI,KACtBM,KAAKkB,UAAW,EACe,SAAtB5B,EAAaI,OACtBM,KAAKkB,UAAW,GAuBlB,GArBAX,QAAQC,IAAI,SACZD,QAAQC,IAAIR,KAAKK,OACI,MAAjBL,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGO,WACR,MAA7BZ,KAAKY,SAASrB,KAAsBS,KAAKY,SAASrB,GAAc,GACpES,KAAKmB,YAAa,EAClBZ,QAAQC,IAAI,2BACZD,QAAQC,IAAIR,KAAKK,MAAM,GAAGO,SAASd,KAAKe,YACxCb,KAAKY,SAASrB,GAAeS,KAAKK,MAAM,GAAGO,SAASd,KAAe,WAClC,KAA7BE,KAAKY,SAASrB,KAChBS,KAAKY,SAASrB,GAAc,KAC5BS,KAAKmB,WAAa,MAEpBZ,QAAQC,IAAI,kCACZD,QAAQC,IAAIhB,IAEK,UAAfA,IAEqC,MAAnCQ,KAAKoB,eAAe7B,KAAuBS,KAAKoB,eAAe7B,GAAc,IACjFS,KAAKoB,eAAe7B,GAAc,GACJ,MAA1BS,KAAKK,MAAM,GAAGD,UAAoBJ,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAM,GAAGD,WAExE,YAAfZ,IACFe,QAAQC,IAAI,0BAEZD,QAAQC,IAAIR,KAAKK,MAAMK,QACvBH,QAAQC,IAAIR,KAAKK,OACsB,MAAnCL,KAAKoB,eAAe7B,KAAuBS,KAAKoB,eAAe7B,GAAc,IAExD,GAArBS,KAAKK,MAAMK,SACTV,KAAKK,MAAM,IAAgC,MAA1BL,KAAKK,MAAM,GAAGD,UAAyD,MAArCJ,KAAKK,MAAM,GAAGD,SAASiB,aAC5ErB,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAM,GAAGD,UACnDJ,KAAKK,MAAQ,GACbL,KAAKsB,YAAc,IAEA,MAAjBtB,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGD,UAAyD,MAArCJ,KAAKK,MAAM,GAAGD,SAASiB,aACpFrB,KAAKsB,YAAc,mCAGC,EAApBtB,KAAKK,MAAMK,QAAY,CAEzB,IAAK,IAAMa,KADXhB,QAAQC,IAAI,kCACIR,KAAKK,MACW,MAA1BL,KAAKK,MAAMkB,GAAGnB,UAAyD,MAArCJ,KAAKK,MAAMkB,GAAGnB,SAASiB,YAC3DrB,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAMkB,GAAGnB,UAGvDJ,KAAKK,MAAQ,GAIjBE,QAAQC,IAAI,uBACZD,QAAQC,IAAIR,KAAKoB,gBACjBb,QAAQC,IAAIR,KAAKsB,cAMnBnC,EAAAC,UAAAoC,eAAA,aAcArC,EAAAC,UAAAqC,YAAA,WAOE,OALAlB,QAAQC,IAAI,YAGGR,KAAK0B,MAAMC,IAAI,sDAAsDC,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOtG3C,EAAAC,UAAA2C,YAAA,SAAYC,OAEJC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAe,MAYnB,OATA9B,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI,IAGGR,KAAK0B,MAAMY,KAAK,GAAKN,EAASO,OAAQ,GAAIN,GAAaL,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAKxF3C,EAAAC,UAAAoD,QAAA,SAAQR,OAEAC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAe,MAmBnB,OAhBA9B,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI,IAGGR,KAAK0B,MAAMY,KAAU,WAAYN,EAAUC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMtF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOjB3C,EAAAC,UAAAyD,SAAA,SAASb,EAAelC,OAChBmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAevC,EAAKgD,SAgBxB,OAbAvC,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACGjC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAGjB3C,EAAAC,UAAA8D,qBAAA,SAAqBlB,EAAelC,OAC5BmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,sBAcrB,OAXA7B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA+D,UAAA,SAAUnB,EAAelC,OACjBmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,sBAcrB,OAXA7B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOjB3C,EAAAC,UAAAgE,WAAA,SAAYC,EAAMP,EAAOP,OACjBN,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAgBnB,OATAP,EAAOe,UAAYtD,KAAKsD,UACTtD,KAAK0B,MAAMY,KAAKe,EAAMd,EAAQN,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMzE,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAGjB3C,EAAAC,UAAAmE,YAAA,SAAaF,EAAMd,GAkBjB,OAhBW,IAAIJ,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeE,EAAOO,QAG1BvC,QAAQC,IAAI,WACZD,QAAQC,IAAI,QACZD,QAAQC,IAAI6C,GACGrD,KAAK0B,MAAMY,KAAKe,EAAMd,GAAQX,KAAKa,UAAAA,WAAU,SAAEC,GAM5D,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAQjB3C,EAAAC,UAAAoE,QAAA,SAAQxB,EAAelC,EAAMkB,OACrBiB,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAe,MAOnB,OAJA9B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAM+B,IAAIzD,KAAK+C,eAAef,GAAY,IAAMhB,EAAIgC,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAK7H3C,EAAAC,UAAAsE,YAAA,SAAY1B,EAAelC,EAAMgD,EAAOP,OAYlCoB,EAXE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAmBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEvB,GAAIlB,EAAK8D,MACpBN,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAU2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAM9E,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAAyE,aAAA,SAAa7B,EAAelC,EAAMgD,EAAOP,OAgBnCoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEzC,KAAIA,IACfwD,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAU2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAM9E,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA0E,aAAA,SAAa9B,EAAelC,EAAMgD,EAAOP,OAWnCoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEwB,IAAKjE,IAChBwD,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAW,OAAQ2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMvF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA4E,iBAAA,SAAiBhC,EAAelC,EAAMmE,EAAKnB,EAAOP,OAW5CoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEzC,KAAM,CAACiE,IAAKjE,EAAMmE,IAAGA,KAChCX,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAW,OAAQ2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMvF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAMT3C,EAAAC,UAAA2D,eAAR,SAAuBf,GACrB,MAAO,GAAKA,uBApcfhD,GAAAA,sDANQkF,KAAAA,kBAAAA,KAAAA,kBAEAC,iBAAAA,wDAYNC,GAAAA,UAASnF,KAAA,CAAC,iBA+bbE,GAxaE,SAAAA,EAAoBuC,EACA2C,EACAC,GAFAtE,KAAA0B,MAAAA,EACA1B,KAAAqE,UAAAA,EACArE,KAAAsE,cAAAA,EA/BbtE,KAAAuE,0BAAiC,8DAgBjCvE,KAAAY,SAAgB,GAEhBZ,KAAAsB,YAAmB,GACnBtB,KAAAsD,UAAiB,KAExBtD,KAAAoB,eAAsB,GAapBpB,KAAKwE,QAAU,CAAEC,YAAa,GAAIC,WAAY,IAC9C1E,KAAKK,MAAQ,GACbL,KAAKC,YAAc,IAAI0E,GAAAA,aACvB3E,KAAK4E,cAAgBA,YAAAA,cACjB5E,KAAKsE,cAAcO,MAAM,eAC3B7E,KAAKsD,UAAYtD,KAAKsE,cAAc3C,IAAI,kBCvZxCmD,OAASC,2CA0Qb,SAAAC,iBAAmBC,EAAgCC,EAC1CC,EACAC,EACCC,EACAC,EACAC,EACD7D,EACA8D,EACCC,EACAC,GATV,IAAAC,EAAA3F,KAAmBA,KAAAiF,YAAAA,EAAgCjF,KAAAkF,OAAAA,EAC1ClF,KAAAmF,YAAAA,EACAnF,KAAAoF,GAAAA,EACCpF,KAAAqF,OAAAA,EACArF,KAAAsF,SAAAA,EACAtF,KAAAuF,UAAAA,EACDvF,KAAA0B,MAAAA,EACA1B,KAAAwF,UAAAA,EACCxF,KAAAyF,UAAAA,EACAzF,KAAA0F,YAAAA,EAxQV1F,KAAA4F,UAAY,IAAIC,MAAAA,YAYhB7F,KAAA8F,SAAmB,EAkBnB9F,KAAA+F,QAAe,GACf/F,KAAAgG,gBAAuB,GACvBhG,KAAAiG,qBAA4B,GAC5BjG,KAAAkG,QAAe,GACflG,KAAAmG,QAAe,GACfnG,KAAAoG,UAAiB,EACjBpG,KAAAqG,WAAkB,GAEXrG,KAAAsG,WAAkB,GAClBtG,KAAAuG,aAAoB,GAEpBvG,KAAAwG,OAAc,GACdxG,KAAAyG,YAAmB,GACnBzG,KAAA0G,IAAU,EACV1G,KAAA2G,KAAW,EACX3G,KAAA4G,MAAY,EACZ5G,KAAA6G,KAAW,EACX7G,KAAA8G,gBAAsB,EAC7B9G,KAAA+G,UAAiB,KAKjB/G,KAAAgH,MAAsB,UACtBhH,KAAAiH,KAAY,gBACZjH,KAAAkH,MAAQ,GACRlH,KAAAmH,YAAc,GAGdnH,KAAAoH,aAAmB,EACnBpH,KAAAqH,aAAoB,GACVrH,KAAAsH,mBAAqB,IAAI3C,GAAAA,aACnC3E,KAAAuH,cAAqB,GACrBvH,KAAAwH,cAAqB,GAgKrBxH,KAAAyH,YAAwBzH,KAAK0H,cAG7B1H,KAAA2H,iBAA6B,GAC7B3H,KAAA4H,YAAwB,GACxB5H,KAAA6H,uBAAmC,GACnC7H,KAAA8H,UAAiB,GAEjB9H,KAAA+H,qBAA4B,GAC5B/H,KAAAgI,uBAA8B,GAC9BhI,KAAAiI,qBAA4B,GAC5BjI,KAAAkI,qBAA4B,GAG5BlI,KAAAmI,SAAe,EACRnI,KAAAoI,UAAiB,GAExBpI,KAAAqI,WAAa,IAAIC,SAAAA,mBAOjBtI,KAAAuI,aAAe,IAAIC,KAAAA,QACnBxI,KAAAyI,mBAAqB,IAAID,KAAAA,QACzBxI,KAAA0I,YAAc,IAAIF,KAAAA,QAClBxI,KAAA2I,cAAgC,GAChC3I,KAAA4I,kBAAoB,EACpB5I,KAAA6I,mBAA+B,GAe7B7I,KAAKqF,OAAOyD,OAAOC,UAAS,SAAEC,GAC5B,QAAQ,GACN,KAAKA,aAAiBC,OAAAA,gBACpBtD,EAAKwC,SAAU,EACf,MAEF,KAAKa,aAAiBE,OAAAA,cACtB,KAAKF,aAAiBG,OAAAA,iBACtB,KAAKH,aAAiBI,OAAAA,gBACpBzD,EAAKwC,SAAU,KASrBnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKuI,aACjD3G,KACCyH,UAAAA,aAAa,MACdN,UAAS,WAGRpD,EAAK2D,cAAc3D,EAAK4D,2BAG5BvJ,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKyI,mBACjD7G,KACCyH,UAAAA,aAAa,MAGdN,UAAS,WAGR,GAAgE,MAA5DpD,EAAKK,gBAAgBL,EAAK4D,wBAAwBC,QAA8E,IAA5D7D,EAAKK,gBAAgBL,EAAK4D,wBAAwBC,OAAc,KAKlIjH,EAFEc,EAAOsC,EAAK8D,UAAY,GAAK9D,EAAK4D,wBAAwBG,iBAAiB1H,SAIjFO,EAAS,CACPoH,WAAYhE,EAAKK,gBAAgBL,EAAK4D,wBAAwBC,OAC9DI,KAAM,CACJJ,MAAO7D,EAAKc,YAAY+C,MACxB9J,KAAMiG,EAAKc,YAAY/G,OAO3BiG,EAAKkE,4BAA8B,EACnClE,EAAKwC,SAAU,EACfxC,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAY7B,WAAWC,EAAMsC,EAAKmE,YAAavH,GAAQwG,UAAS,SAACjH,OAC/G0E,EAEJb,EAAKwC,SAAU,EAID,OAFd3B,EAAS1E,IAE+B,MAAlB0E,EAAOuD,SAAyC,MAAtBvD,EAAOuD,QAAQjI,MAAa6D,EAAKG,SAAWU,EAAOuD,QAAQjI,IAAIpB,QAC7F,MAAd8F,EAAO1E,KAAmC,EAApB0E,EAAO1E,IAAIpB,QAEnCiF,EAAKM,qBAAuBO,EAAO1E,IACnC6D,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,kCAGxBxE,EAAKM,qBAAuB,GAE5BN,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,qCAK1BxE,EAAKwC,SAAU,OA4nD3B,OAr5DEiC,OAAAC,eACIrF,iBAAA5F,UAAA,kBAAe,KADnB,SACoBkL,GAClBtK,KAAKuK,mBAAqBD,mCAW5BF,OAAAC,eACIrF,iBAAA5F,UAAA,8BAA2B,KAD/B,SACgCoL,GAC9BxK,KAAKyK,+BAAiCD,mCAExCJ,OAAAC,eACIrF,iBAAA5F,UAAA,YAAS,KADb,SACcmH,GACZvG,KAAKuG,aAAeA,EACpBvG,KAAKwH,cAAclH,KAAKiG,oCAG1B6D,OAAAC,eACIrF,iBAAA5F,UAAA,2BAAwB,KAD5B,SAC6ByK,GAC3B7J,KAAK6J,4BAA8BA,EACK,GAApC7J,KAAK6J,8BAAoC7J,KAAKuG,aAAamE,UAAY,oCAI7EN,OAAAC,eACIrF,iBAAA5F,UAAA,YAAS,KADb,SACcuL,GACZ3K,KAAK4K,aAAeD,mCAGtBP,OAAAC,eACIrF,iBAAA5F,UAAA,eAAY,KADhB,SACiByL,GACf7K,KAAK8K,gBAAkBD,mCAGzBT,OAAAC,eACIrF,iBAAA5F,UAAA,qBAAkB,KADtB,SACuB2L,GACrB/K,KAAKgL,sBAAwBD,mCAE/BX,OAAAC,eACIrF,iBAAA5F,UAAA,WAAQ,KADZ,SACaqH,GACXzG,KAAKyG,YAAcA,mCAIrB2D,OAAAC,eACIrF,iBAAA5F,UAAA,uBAAoB,KADxB,SACyB6L,GACvBjL,KAAKkL,wBAA0BD,mCAEjCb,OAAAC,eACIrF,iBAAA5F,UAAA,MAAG,KADP,SACQQ,GACNI,KAAKmL,OAASvL,mCAEhBwK,OAAAC,eACIrF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBgM,GACjBpL,KAAKqL,kBAAoBD,mCAE3BhB,OAAAC,eACIrF,iBAAA5F,UAAA,WAAQ,KADZ,SACakM,GACXtL,KAAKuL,aAAeD,mCAEtBlB,OAAAC,eACIrF,iBAAA5F,UAAA,aAAU,KADd,SACeoM,GACbxL,KAAK0H,cAAgB8D,mCAEvBpB,OAAAC,eACIrF,iBAAA5F,UAAA,UAAO,KADX,SACYkH,GACVtG,KAAKsG,WAAa,GAClBtG,KAAKsG,WAAaA,mCAIpB8D,OAAAC,eACIrF,iBAAA5F,UAAA,aAAU,KADd,SACeqM,GACbzL,KAAK0L,cAAgB,GACrB1L,KAAK0L,cAAgBD,mCAEvBrB,OAAAC,eACIrF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBuM,GACjB3L,KAAK2L,kBAAoBA,mCAG3BvB,OAAAC,eACIrF,iBAAA5F,UAAA,OAAI,KADR,SACSwM,GACP5L,KAAK6L,QAAUD,mCAEjBxB,OAAAC,eACIrF,iBAAA5F,UAAA,kBAAe,KADnB,SACoB0M,GAClB9L,KAAK+L,mBAAqBD,mCAE5B1B,OAAAC,eACIrF,iBAAA5F,UAAA,oBAAiB,KADrB,SACsB4M,GACpBhM,KAAKiM,qBAAuBD,mCAG9B5B,OAAAC,eACIrF,iBAAA5F,UAAA,aAAU,KADd,SACe8M,GACblM,KAAKmM,cAAgBD,mCAGvB9B,OAAAC,eACIrF,iBAAA5F,UAAA,sBAAmB,KADvB,SACwBgN,GACtBpM,KAAKqM,uBAAyBD,mCAGhChC,OAAAC,eACIrF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBkN,GACjBtM,KAAKsM,kBAAoBA,mCAG3BlC,OAAAC,eACIrF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBmN,GACjBvM,KAAKwM,kBAAoBD,mCAE3BnC,OAAAC,eACIrF,iBAAA5F,UAAA,SAAM,KADV,SACWqN,GACTzM,KAAKyJ,UAAYgD,mCACjBrC,OAAAC,eACErF,iBAAA5F,UAAA,cAAW,KADb,SACcsN,GACd1M,KAAK8G,eAAiB4F,mCAGxBtC,OAAAC,eACIrF,iBAAA5F,UAAA,WAAQ,KADZ,SACauN,GACa3M,KAAK8J,YAAb,MAAZ6C,EAAuCA,EAAsC,oCAInFvC,OAAAC,eACIrF,iBAAA5F,UAAA,YAAS,KADb,SACcwN,GACZ5M,KAAK6M,aAAeD,mCAGtBxC,OAAAC,eACIrF,iBAAA5F,UAAA,aAAU,KADd,SACe0N,GACb9M,KAAK+M,cAAgBD,mCAGvB1C,OAAAC,eACIrF,iBAAA5F,UAAA,YAAS,KADb,SACc4N,GACZhN,KAAKiN,aAAeD,mCAKtB5C,OAAAC,eACIrF,iBAAA5F,UAAA,mBAAgB,KADpB,SACqB8N,GACnBlN,KAAKoH,aAAc,mCA2JrBpC,iBAAA5F,UAAA+N,YAAA,SAAYC,GAGV,IAAK,IAAMC,KAAKD,EAEL,eAALC,GAE8B,MAA5BD,EAAQC,GAAGC,eACbtN,KAAKuN,aAObvI,iBAAA5F,UAAAoO,UAAA,SAAUvJ,GAERjE,KAAKyN,OAAOC,SAASzJ,GAAK0J,mBAE5B3I,iBAAA5F,UAAAwO,SAAA,WAAA,IAAAjI,MAAA3F,KA2BEA,KAAK6N,WAAa7N,KAAK4F,UAAUkI,aAC9BlM,KACCmM,UAAAA,UAAU,IACVlM,UAAAA,IAAG,SAACqF,GAAS,OAAAvB,MAAKqI,QAAQ9G,MAW9BlH,KAAKiO,EAAIjO,KAAK0L,kBACRuC,EAAIjO,KAAKiO,EACXjO,KAAK0L,gBAAe1L,KAAK8F,SAAW9F,KAAK0L,cAAchL,YAEvDwN,KAAO,GACLC,KAAOF,EAAE,GACfC,KAAO9D,OAAO+D,KAAKA,MAInB,QAFMC,YAAc,GACdC,YAAc,GACXC,EAAI,EAAGA,EAAIJ,KAAKxN,OAAQ4N,IAC/BF,YAAY9N,KAAK4N,KAAKI,GAAGC,QAAQ,MAAO,MACxCF,YAAY/N,KAAK4N,KAAKI,IAMxBtO,KAAK+F,QAAU,GAEf,yBAASuI,OACDE,GAAK,OAAOJ,YAAYE,GACxBG,GAAK,CAAEC,UAAW,GAAGN,YAAYE,GAAMK,OAAQ,GAAGN,YAAYC,GAAMM,KAAI,SAAGC,KAAQ,OAAAC,KAAKN,KAAKO,UAAWV,YAAY3N,QAI1H,IAAK,IAAMa,KAAKyN,OAAK3C,uBACf9K,GAAKkN,GAAGE,SAAUF,GAAGE,OAASK,OAAK3C,uBAAuB9K,KAGrB,GAAvCyN,OAAKnD,QAAQoD,QAAQR,GAAGC,YAC1BM,OAAKjJ,QAAQzF,KAAKmO,iBAXbH,EAAI,EAAGA,EAAIF,YAAY1N,OAAQ4N,YAA/BA,OAcLY,cAAgB,GACpBlP,KAAKoG,UAAY,EACjB+I,WAAU,WACRxJ,MAAKS,UAAY,GAChB,KAEH8I,cAAgBlP,KAAK+F,QAAQlE,IAAG,SAACoM,GAAK,OAAAA,EAAES,YACF,MAAlC1O,KAAKsG,WAAW8I,eAClBpP,KAAK6I,mBAAqB7I,KAAKsG,WAAW8I,eAAevN,IAAG,SAACoM,GAAK,OAAAA,EAAEoB,MAEjErP,KAAK6I,mBAAqB,OAE3ByG,WAAkB,GAKtB,GAHuB,MAAnBtP,KAAKsG,YAAsD,MAAhCtG,KAAKsG,WAAWiJ,eAC7CD,WAAatP,KAAKsG,WAAWiJ,cAEb,MAAdD,YAA0C,EAApBA,WAAW5O,OAAY,KAC3C8O,QAAkB,GACtB,IAAK,IAAMnC,KAAKiC,WACd,GAA6C,GAAzCJ,cAAcO,SAASH,WAAWjC,IAAc,CAClD,IAAK,IAAM9L,KAAKvB,KAAKqM,uBACf9K,GAAK+N,WAAWjC,KAAMmC,QAAUxP,KAAKqM,uBAAuB9K,IAElEvB,KAAK+F,QAAQzF,KAAK,CAAEoO,UAAWY,WAAWjC,GAAIsB,OAAQa,QAASZ,KAAM,OAGzEM,cAAgBI,WAKgB,MAA9BtP,KAAKsG,WAAWoJ,YAAoD,GAA9B1P,KAAKsG,WAAWoJ,aACxDR,cAAc5O,KAAsC,MAAjCN,KAAKsG,WAAWqJ,cAAwB,UAAY3P,KAAKsG,WAAWqJ,eACvF3P,KAAK+F,QAAQzF,KAAK,CAAEoO,UAA4C,MAAjC1O,KAAKsG,WAAWqJ,cAAwB,UAAY3P,KAAKsG,WAAWqJ,cAAehB,OAAQ,UAAWC,KAAM,QAE1G,MAA/B5O,KAAKsG,WAAWsJ,aAAsD,GAA/B5P,KAAKsG,WAAWsJ,cACzDV,cAAcW,QAAQ,KACtB7P,KAAK+F,QAAQzF,KAAK,CAAEoO,UAAW,IAAKC,OAAQ,IAAKC,KAAM,QAIzD5O,KAAK2H,iBAAmB,GACxB3H,KAAK2H,iBAAmBuH,cAEwB,GAA5ClP,KAAKsG,WAAWwJ,2BAClB9P,KAAK2H,iBAAiBkI,QAAQ,UAC9B7P,KAAK+F,QAAQzF,KAAK,CAAEoO,UAAW,SAAUC,OAAQ,SAAUC,KAAM,YAE/DmB,WAAa,GACbC,YAAc,GAElB,IAAK,IAAIC,KADTjQ,KAAK+F,QAAQmK,UACClQ,KAAK+F,SACqC,GAAlDgK,WAAWd,QAAQjP,KAAK+F,QAAQkK,GAAGvB,YACrCsB,YAAY1P,KAAKN,KAAK+F,QAAQkK,IAChCF,WAAWzP,KAAKN,KAAK+F,QAAQkK,GAAGvB,WAGlC1O,KAAK+F,QAAUiK,YAMfhQ,KAAK2H,iBAAmBwI,MAAMC,KAAK,IAAIC,IAAIrQ,KAAK2H,mBAGhD,QADM2I,UAAY,GACThC,EAAI,EAAGA,EAAItO,KAAKiO,EAAEvN,OAAQ4N,IACjCgC,UAAUhQ,KAAKN,KAAKuQ,WAAWtC,EAAEK,KAEnCtO,KAAKkG,QAAUoK,UACftQ,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmB,IACzCtI,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmBgI,WACzCtQ,KAAKwQ,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAM1CtB,WAAU,WAIR,GAA4C,MAAxCxJ,MAAK4E,mBAAmBlD,aAE1B,IAAK,IAAMqJ,KAAM/K,MAAK4E,mBAAmBlD,aACe,MAAlD1B,MAAK4E,mBAAmBlD,aAAaqJ,GAAIxJ,QAC3CvB,MAAK0B,aAAa1B,MAAK4E,mBAAmBlD,aAAaqJ,GAAIlH,OACzD7D,MAAK4E,mBAAmBlD,aAAaqJ,GAAIxJ,OAMjD,GAA0C,MAAtCvB,MAAK4E,mBAAmBoG,WAE1B,IAAK,IAAMD,KAAM/K,MAAK4E,mBAAmBoG,WACa,MAAhDhL,MAAK4E,mBAAmBoG,WAAWD,GAAIxJ,QACzCvB,MAAKQ,QAAQR,MAAK4E,mBAAmBoG,WAAWD,GAAIlH,OAClD7D,MAAK4E,mBAAmBoG,WAAWD,GAAIxJ,QAM9C,MAKLlC,iBAAA5F,UAAAwR,eAAA,SAAeC,GAEK7Q,KAAKkF,OAAO4L,KAAKC,UAAW,CAE5CC,WAAY,CAAC,kBAAmB,iCAChCC,OAAQ,OACRnR,KAAM,CAAEoR,QAASL,MAIrB7L,iBAAA5F,UAAA+R,mBAAA,aAGAnM,iBAAA5F,UAAAgS,gBAAA,WAAA,IAAAzL,EAAA3F,KAGEmP,WAAU,WACR,GAAuB,MAAnBxJ,EAAKW,YAAiE,MAA3CX,EAAKW,WAAW+K,wBAC7C,IAAK,IAAMC,KAAK3L,EAAKW,WAAW+K,wBAAyB,KAEjDE,EAAO5L,EAAK6L,KAAK7L,EAAKD,YAAY+L,cAAcC,cAAc,IAAM/L,EAAKW,WAAW+K,wBAAwBC,GAAGjC,KAAM,MAC/G,MAARkC,GAAcA,EAAKI,UAAUC,IAAIjM,EAAKW,WAAW+K,wBAAwBC,GAAGrN,OAMnF,MAKLe,iBAAA5F,UAAAoS,KAAA,SAAKK,EAAIC,GAGP,IAFAA,EAAUA,EAAQC,cAEXF,GAAMA,EAAGG,YAEd,IADAH,EAAKA,EAAGG,YACDF,SAAWD,EAAGC,QAAQC,eAAiBD,EAC5C,OAAOD,EAQX,OAAO,MAET7M,iBAAA5F,UAAA6S,sBAAA,aAKAjN,iBAAA5F,UAAA8S,YAAA,WAEElS,KAAK2I,cAAcwJ,QAAO,SAACC,GAAK,OAAAA,EAAEC,iBAGpCrN,iBAAA5F,UAAAkT,SAAA,eACMrE,EACJjO,KAAKuS,QAAU,GACFvS,KAAKyN,OAAOvG,MACzB,IAAK+G,KAAKjO,KAAKyN,OAAOC,SACpB1N,KAAKyN,OAAOC,SAASO,GAAGuE,iBAG5BxN,iBAAA5F,UAAAqT,WAAA,SAAWxO,EAAUyO,GACnB1S,KAAKuH,cAAcjH,KAAK,CAAE2D,IAAKjE,KAAKmG,QAAQlC,GAAM0O,MAAOD,EAAKC,MAAOtD,IAAKpL,IAM7DjE,KAAKyJ,UAAiBzJ,KAAK2L,kBAC1B3L,KAAKyJ,UAAiBzJ,KAAK2L,sBAErCiH,EACEC,EAAkB,GAIxB,GAHAD,EAAY,GACZ5S,KAAKuG,aAAamE,UAAY,EAC9B1K,KAAKuG,aAAaqF,KAAO,EACW,MAAhC9G,OAAO9E,KAAK8S,UAAUC,QAAoD,MAAlCjO,OAAO9E,KAAKgT,YAAYD,OA8GlExS,QAAQC,IAAI,aA9Gd,CAuBE,IAAK,IAAM8N,KAnBXtO,KAAK+H,qBAAuB,GAC5B/H,KAAK+H,qBAAuB6K,EAEP,MAAjB5S,KAAK8S,UAAuC,MAAnB9S,KAAKgT,aAChCJ,EAAU3O,GAAO,CACfgP,KAAM,IAAIC,KAAKlT,KAAK8S,UAAUK,UAC9BC,KAAM,IAAIF,KAAKlT,KAAKgT,YAAYG,YAGb,MAAnBnT,KAAKgT,YAAwC,MAAjBhT,KAAK8S,UAA4C,GAAxB9S,KAAK8S,SAASpS,SACrEkS,EAAU3O,GAAO,CACfmP,KAAM,IAAIF,KAAKlT,KAAKgT,YAAYG,YAGf,MAAjBnT,KAAK8S,UAAwC,MAAnB9S,KAAKgT,YAAgD,GAA1BhT,KAAKgT,WAAWtS,SACvEkS,EAAU3O,GAAO,CACfgP,KAAM,IAAIC,KAAKlT,KAAK8S,UAAUK,YAGlBnT,KAAKmG,QAEI,MAAnBnG,KAAKmG,QAAQmI,IAAiC,IAAnBtO,KAAKmG,QAAQmI,KAC1CuE,EAAWvE,GAAK,CAAE+E,OAAQrT,KAAKmG,QAAQmI,GAAGgF,WAAWvB,oBAInD1L,EAAkB,GAExB,IAAK,IAAM9E,KAAKvB,KAAKqG,WACnB,IAAK,IAAMkN,KAAKvT,KAAKqG,WAAW9E,GAAI,KAC5BiS,EAAU,GAChBA,EAAGjS,GAAKvB,KAAKqG,WAAW9E,GAAGgS,GAAGtP,IAAIqP,WAAWvB,cACvB,MAAlB1L,EAAWoN,MAAepN,EAAWoN,IAAM,IAC/CpN,EAAWoN,IAAInT,KAAKkT,OAIlBE,EAAetJ,OAAOuJ,OAAO,GAAId,EAAY7S,KAAK+H,qBAAsB1B,EAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWsN,gBAC9H,CACPhB,UAAW,CACTiB,MAAO7T,KAAKuG,aAAasN,MACzBjI,KAAM,GAERhC,KAAM,CACJJ,MAAOxJ,KAAKyG,YAAY+C,MACxB9J,KAAMM,KAAKyG,YAAY/G,MAEzBoU,gBAAiBJ,MAiEvB1O,iBAAA5F,UAAA2U,aAAA,SAAa7M,EAAYxH,EAAWsU,GAMlChU,KAAKuH,cAAc7H,EAAK8J,OAAM,CAAMvF,IAAK+P,EAAUC,KAAMtB,MAAOjT,EAAKiT,MAAOtD,IAAK3P,EAAK8J,OAElE,MAAhBxJ,KAAKmG,SAA0C,MAAvBnG,KAAKmG,QAAQe,IACjClH,KAAKmG,QAAQe,GAAOoM,WAAWvB,cAmB1B/R,KAAKyJ,UAAiBzJ,KAAKkL,yBAG5B,IACFxL,EAAK8J,OAAStC,EAExBlH,KAAKgI,uBAAuBtI,EAAK8J,OAAStC,MAEpCwM,EAAetJ,OAAOuJ,OAAO,GAAI3T,KAAKkI,qBAAsBlI,KAAK+H,qBAAsB/H,KAAKiI,qBAAsBjI,KAAKgI,wBAEnHhI,KAAKgL,uBAmBjBhG,iBAAA5F,UAAA8U,OAAA,SAAOjQ,GAAP,IAAA0B,EAAA3F,KAEMmU,EAAuBC,OAAOpU,KAAK6J,4BAA+B7J,KAAKuG,aAAkB,OAY7F,GAXA4N,IAAgB,EAChB5T,QAAQC,IAAI,qBAAsBR,KAAKwH,cAAexH,KAAKuG,aAAcvG,KAAK6J,4BAA6BsK,GAC3GnU,KAAKwH,cAAclH,KAAK,CACtBsL,KAAM5L,KAAKuG,aAAaqF,KACxBiI,MAAO7T,KAAKuG,aAAasN,MACzBnJ,UAAW1K,KAAKuG,aAAamE,YAEpB,GAAPzG,IACFjE,KAAKuG,aAAaqF,KAAQ5L,KAAKuG,aAAsB,UAAIvG,KAAKuG,aAAasN,MAC3E7T,KAAKuG,aAAamE,gBAER,GAARzG,GAAajE,KAAKuG,aAAaqF,KAAO5L,KAAKuG,aAAasN,OAA5D,EAGY,GAAR5P,GAAajE,KAAKuG,aAAaqF,MAAQ5L,KAAKuG,aAAasN,QAE3D7T,KAAKuG,aAAaqF,MAAQ5L,KAAKuG,aAAamE,UAAY,GAAK1K,KAAKuG,aAAasN,MAC/E7T,KAAKuG,aAAamE,aAEV,EAANzG,IACiC,GAA/BjE,KAAKuG,aAAamE,UAAkB1K,KAAKuG,aAAaqF,KAAO,EAAY5L,KAAKuG,aAAaqF,MAAQ5L,KAAKuG,aAAamE,UAAY,GAAK1K,KAAKuG,aAAasN,OAG1J7T,KAAKuG,aAAamE,UAAayJ,EAAe,IAChDnU,KAAKuG,aAAamE,UAAYyJ,EAAe,EAC7CnU,KAAKuG,aAAaqF,MAAQ5L,KAAKuG,aAAamE,UAAY,GAAK1K,KAAKuG,aAAasN,WAI3EhB,EAAkB,GAGxB,IAAK,IAAMvE,KAAKtO,KAAKmG,QAC6B,MAA5CnG,KAAKmG,QAAQmI,GAAGgF,WAAWvB,eAAqE,IAA5C/R,KAAKmG,QAAQmI,GAAGgF,WAAWvB,gBACjFc,EAAWvE,GAAK,CAAE+E,OAAQrT,KAAKmG,QAAQmI,GAAGgF,WAAWvB,oBAInD2B,EAAetJ,OAAOuJ,OAAO,GAAId,EAAY7S,KAAK+H,qBAAsB/H,KAAKqG,WAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWsN,eACtIrR,EAAS,CACbqQ,UAAW,CACTiB,MAAO7T,KAAKuG,aAAasN,MACzBjI,KAAM5L,KAAKuG,aAAaqF,MAE1BhC,KAAM,CACJJ,MAAOxJ,KAAKyG,YAAY+C,MACxB9J,KAAMM,KAAKyG,YAAY/G,MAEzBoU,gBAAiBJ,GAGbrQ,EAAOrD,KAAKyJ,UAAY,GAAKzJ,KAAK2L,kBAQxC3L,KAAKmI,SAAU,EACfnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAK8J,YAAavH,GAAQwG,UAAS,SAACjH,GACnH6D,EAAKa,OAAS1E,EAEiB,MAA3B6D,EAAKa,OAAOuD,QAAQjI,KAAgD,EAAjC6D,EAAKa,OAAOuD,QAAQjI,IAAIpB,QAC7DiF,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,SAAUC,UAAW3O,EAAKY,aAAcuN,gBAAiBJ,EAAca,SAAU5O,EAAKc,cAC7Hd,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKa,OAAOuD,QAAQjI,KAC7D6D,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,+BA2BxBxE,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,oCAG1BxE,EAAKwC,SAAU,IAKjBnI,KAAKwQ,UAAUgE,UAGjBxP,iBAAA5F,UAAAqV,kBAAA,SAAkBxQ,KAIlBe,iBAAA5F,UAAAsV,OAAA,SAAOzQ,EAAUqK,EAAQ9E,GAEO,MAA1BxJ,KAAKqG,WAAWmD,IAAkBxJ,KAAKqG,WAAWmD,GAAOmL,OAAOrG,EAAG,IAEzEtJ,iBAAA5F,UAAAwV,2BAAA,SAA2BlC,GACzB1S,KAAKuJ,wBAA0BmJ,EAC/B1S,KAAKiG,qBAAuB,GAEyB,MAAjDjG,KAAKuJ,wBAAwBG,iBAC/B1J,KAAKuI,aAAasM,OAGlB7U,KAAKyI,mBAAmBoM,QAI5B7P,iBAAA5F,UAAAkK,cAAA,SAAcxJ,OAENgV,EAAa9U,KAAKgG,gBAAgBlG,EAAK0J,OAE7C,GADAxJ,KAAKiG,qBAAuB,GACY,MAApCjG,KAAKgG,gBAAgBlG,EAAK0J,QAAsD,IAApCxJ,KAAKgG,gBAAgBlG,EAAK0J,OAAc,KAChFuL,EAAYjV,EAAKkV,OAAO/T,OAAM,SAAWqQ,GAE7C,OAAOA,EAAE2C,KAAKX,WAAWvB,cAActC,SAASqF,EAAW/C,iBAE7D/R,KAAKiG,qBAAuB8O,IAGhC/P,iBAAA5F,UAAA6V,cAAA,SAAchR,GACIiR,SAASxD,cAAc,sBAAwBzN,EAAIuF,OAChEtC,MAAQ,IAEblC,iBAAA5F,UAAA+V,mBAAA,SAAmBjO,EAAYpH,EAAW4S,GAGxC1S,KAAKuH,cAAcjH,KAAK,CAAE2D,IAAKjE,KAAKgG,gBAAgBkB,GAAQyL,MAAOD,EAAKC,MAAOtD,IAAKnI,IACtD,MAA1BlH,KAAKqG,WAAWa,KAClBlH,KAAKqG,WAAWa,GAAS,IAE3BlH,KAAKqG,WAAWa,GAAO5G,KAAKR,GAE5BE,KAAKgG,gBAAgBkB,GAAS,KAC9BlH,KAAKiG,qBAAuB,GACZiP,SAASxD,cAAc,sBAAwBxK,GAC5DA,MAAQ,IAyBblC,iBAAA5F,UAAAgW,mBAAA,SAAmBlO,EAAYwL,GAC7B,GAA2B,IAAvB1S,KAAKmG,QAAQe,GAAc,KACvBpG,EAAQd,KAAKuH,cAAc0H,QAAQjP,KAAKuH,cAAcL,IAC5D3G,QAAQC,IAAIM,EAAO,gBACZd,KAAKuH,cAAcL,QAK1BlH,KAAKuH,cAAcL,GAAM,CAAMjD,IAAKjE,KAAKmG,QAAQe,GAAQyL,MAAOD,EAAKC,MAAOtD,IAAKnI,GAEtElH,KAAKyJ,UAAiBzJ,KAAKkL,4BAElC0H,EAAiB,GACnB3O,EAAM,GACU,MAAhBjE,KAAKmG,SAA0C,MAAvBnG,KAAKmG,QAAQe,KACvCjD,EAAMjE,KAAKmG,QAAQe,GAAOoM,WAAWvB,eAGZ,MAAvB/R,KAAKmG,QAAQe,IAA+C,EAA7BlH,KAAKmG,QAAQe,GAAOxG,QAAc,CAAE+S,IAAK,CAACzT,KAAKmG,QAAQe,GAAOoM,WAAWvB,cAAe/R,KAAKmG,QAAQe,GAAOmO,kBAAoBzC,EAAU1L,EAAQ,UAAYjD,GACjMjE,KAAKkI,qBAAuB,GAC5BlI,KAAKkI,qBAAuB0K,MAEtBc,EAAetJ,OAAOuJ,OAAO,GAAI3T,KAAKkI,qBAAsBlI,KAAK+H,qBAAsB/H,KAAKiI,qBAAsBjI,KAAKgI,wBAEnHhI,KAAKgL,uBAsBjBhG,iBAAA5F,UAAAkW,YAAA,WACEtV,KAAKqG,WAAa,GAClBrG,KAAKmG,QAAU,GACfnG,KAAKqH,aAAe,GACpBrH,KAAKgT,WAAa,KAClBhT,KAAKuG,aAAaqF,KAAO,EACzB5L,KAAK8S,SAAW,KAChB9S,KAAKgI,uBAAyB,GAC9BhI,KAAK+H,qBAAuB,GAC5B/H,KAAKuN,aAEPvI,iBAAA5F,UAAAmW,eAAA,SAAetR,GAMb,GALAjE,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmBtI,KAAKkG,SAC9ClG,KAAKwQ,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAIlB,MAApBxM,EAAIuR,cAAwBvR,EAAIuR,aAAa9U,OAASV,KAAKkG,QAAQxF,OACnDV,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,eAChClR,KAAM,CAAE4V,QAAS,yBAA0BC,gBAAgB,UAG3C3V,KAAKkF,OAAO4L,KAAK2E,cAAe,CAEhDzE,WAAY,CAAC,kBAAmB,eAChClR,KAAM,CAAE4V,QAAS,aAAcC,gBAAgB,MAQ7C3Q,iBAAA5F,UAAA4O,QAAR,SAAgB9G,OACR0O,EAAc1O,EAAMoM,WAAWvB,cAErC,OAAO/R,KAAK0H,cAAczG,OAAM,SAAC4U,GAAU,OAAAA,EAAOvC,WAAWvB,cAActC,SAASmG,MAGtF5Q,iBAAA5F,UAAA0W,UAAA,SAAU7R,GAGR,IAAK,IAAM1C,KAAKvB,KAAK6M,aACnB,GAAI7M,KAAK6M,aAAatL,GAAG0C,KAAOA,EAC9B,OAAOjE,KAAK6M,aAAatL,GAAG0S,KAIhC,MAAO,OAETjP,iBAAA5F,UAAA2W,QAAA,SAAQ9R,GACgC,MAAlCA,EAAI+R,4BAA0E,MAApC/R,EAAIgS,+BAEhDjW,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,GAEyB,MAAlC5C,EAAI+R,4BAA0E,MAApC/R,EAAIgS,+BAChDjW,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,GAEyB,MAAlC5C,EAAI+R,4BAA0E,MAApC/R,EAAIgS,+BAChDjW,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,IAGf7B,iBAAA5F,UAAA8W,QAAA,SAAQjS,GAGK,MAAPA,IACFjE,KAAK2G,KAAM,EACX3G,KAAK4G,MAAO,GAEH,MAAP3C,IACFjE,KAAK2G,KAAM,EACX3G,KAAK4G,MAAO,IAMhB5B,iBAAA5F,UAAA+W,SAAA,SAAStH,EAAU5K,OAEXmS,EAAUnS,EAAM,GAAK4K,EACrBwH,EAASnB,SAASoB,cAAc,YACtCD,EAAOE,MAAMC,SAAW,QACxBH,EAAOE,MAAME,KAAO,IACpBJ,EAAOE,MAAMG,IAAM,IACnBL,EAAOE,MAAMI,QAAU,IACvBN,EAAOnP,MAAQkP,EACflB,SAAS0B,KAAKC,YAAYR,GAC1BA,EAAOS,QACPT,EAAOU,SACP7B,SAAS8B,YAAY,QACrB9B,SAAS0B,KAAKK,YAAYZ,IAG5BrR,iBAAA5F,UAAA8X,iBAAA,SAAiBjT,GACfjE,KAAKqF,OAAO8R,SAAS,CAAClT,EAAImT,SAE5BpS,iBAAA5F,UAAAiY,0BAAA,SAA0BpT,EAAUnE,OAC5BwX,EAAa,GAEnB,IAAK,IAAMjK,KADXiK,EAAMhX,KAAK2D,EAAImT,OACCnT,EAAIsT,MAClBD,EAAMhX,KAAKR,EAAKmE,EAAIsT,MAAMlK,KAG5BrN,KAAKqF,OAAO8R,SAASG,IAEvBtS,iBAAA5F,UAAAoY,gCAAA,SAAgCvT,EAAUnE,OAElC2X,EAAU,GAMhB,IAAK,IAAMpK,KAHY,MAAnBpJ,EAAIqR,aAA0C,GAAnBrR,EAAIqR,aACjCtV,KAAKuN,YAEStJ,EAAIyT,WAAY,KACxBC,EAAU,GAmBhB,GAlBAA,EAAQrX,KAAK2D,EAAIyT,WAAWrK,IACH,SAArBpJ,EAAIyT,WAAWrK,IAAsC,SAArBpJ,EAAIyT,WAAWrK,KAElB,MAA3BvN,EAAKmE,EAAIyT,WAAWrK,KAAmD,iBAA5BvN,EAAKmE,EAAIyT,WAAWrK,KAElC,MAA3BvN,EAAKmE,EAAIyT,WAAWrK,KAAevN,EAAKmE,EAAIyT,WAAWrK,IAAIiG,WAAW7D,SAAS,UAEjFkI,EAAQrX,KAAKN,KAAKwF,UAAUoS,wBAAwB9X,EAAKmE,EAAIyT,WAAWrK,MAO1EsK,EAAQrX,KAAKR,EAAKmE,EAAIyT,WAAWrK,MAGZ,SAArBpJ,EAAIyT,WAAWrK,IAAiBsK,EAAQrX,KAAK,2BAA6BR,EAAKmE,EAAIyT,WAAWrK,IAAM,YAC/E,SAArBpJ,EAAIyT,WAAWrK,GACjB,GAA+B,MAA3BvN,EAAKmE,EAAIyT,WAAWrK,KAA0C,IAA3BvN,EAAKmE,EAAIyT,WAAWrK,IAAW,KAChEwK,EAAiB,kEAAoE/X,EAAKmE,EAAIyT,WAAWrK,IAAM,+HACnHwK,EAAW7X,KAAKwF,UAAUoS,wBAAwBC,GAClDF,EAAQrX,KAAKuX,QAGbF,EAAQrX,KAAK,OAKjBmX,EAAQnX,KAAKqX,OAGX7V,EAAW2V,EAEf,GAA2C,MAAvCzX,KAAKsG,WAAWwR,qBAA4E,EAA7C9X,KAAKsG,WAAWwR,oBAAoBpX,OAAY,KAC3FqX,EAAe,GACrB,IAAK,IAAMxW,KAAKO,EAAK,CACnB,IAAK,IAAMkW,KAAKhY,KAAKsG,WAAWwR,oBAE1B9X,KAAKsG,WAAWwR,oBAAoBE,GAAG3I,KAAOvN,EAAIP,GAAG,KAEvDwW,EAAQxW,GAAK,CAACvB,KAAKsG,WAAWwR,oBAAoBE,GAAG/T,IAAKnC,EAAIP,GAAG,GAAIO,EAAIP,GAAG,KAG9D,MAAdwW,EAAQxW,KAAcwW,EAAQxW,GAAKO,EAAIP,IAI7CO,EAAMiW,EAKe,MAAnB9T,EAAIqR,aAA0C,GAAnBrR,EAAIqR,aACjCtV,KAAKuN,YAEPzL,EAAI4T,QAAUzR,EAAIgU,cACAjY,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,0BAA2B,mBACxClR,KAAM,CAAE6V,gBAAgB,EAAO7V,KAAMgC,MAGzCkD,iBAAA5F,UAAA8Y,8BAAA,SAA8BjU,EAAUnE,GAAxC,IAAA6F,EAAA3F,KAEEA,KAAKmI,SAAU,MACT9E,EAAYrD,KAAKyJ,UAAYxF,EAAIjC,SACjCO,EAAc,GAEpB,GADAA,EAAO0B,EAAIsT,OAASzX,EAAK8D,IACH,MAAlBK,EAAIkU,WACN,IAAK,IAAMlI,KAAKhM,EAAIkU,WAClB5V,EAAO0B,EAAIkU,WAAWlI,IAAMnQ,EAAKmE,EAAIkU,WAAWlI,IAIpDjQ,KAAK+G,UAAYjH,EAAK8D,IACtB5D,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAK8J,YAAavH,GAAQwG,UAAS,SAACjH,OAC/G0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEsW,OAAqB,KAG1BL,EAAe,GACnBpS,EAAKoB,UAAY,KACjBpB,EAAKwC,SAAU,EAEb4P,EADmB,MAAjBvR,EAAO1E,IAAI,GACH0E,EAAO1E,IAAI,GAEX0E,EAAO1E,QAEbuW,EAAiB,GAEvB,GADA9X,QAAQC,IAAI,aAAcuX,GACJ,MAAlB9T,EAAIyT,WAAoB,CAC1B,IAAK,IAAMY,KAAMrU,EAAIyT,WACnBnX,QAAQC,IAAI,iBAAkByD,EAAIyT,WAAWY,IAI7CD,EAAUpU,EAAIyT,WAAWY,IAAOP,EAAQ9T,EAAIyT,WAAWY,IAGzDP,EAAUM,MAKRZ,EAAU,GAGd,IAAK,IAAMpK,KAAK0K,EAAS,KACjBJ,EAAU,GAWhB,GAVAA,EAAQrX,KAAK+M,GACJ,SAALA,GAAqB,SAALA,IACA,MAAd0K,EAAQ1K,IAAqC,iBAAf0K,EAAQ1K,IAEpC0K,EAAQ1K,GAAGiG,WAAW7D,SAAS,UACjCkI,EAAQrX,KAAKqF,EAAKH,UAAUoS,wBAAwBG,EAAQ1K,KAEvDsK,EAAQrX,KAAKyX,EAAQ1K,KAEvB,SAALA,GAAgBsK,EAAQrX,KAAK,2BAA6ByX,EAAQ1K,GAAK,YAClE,SAALA,EAAc,KACZwK,EAAiB,kEAAoEE,EAAQ1K,GAAK,+HACtGwK,EAAWlS,EAAKH,UAAUoS,wBAAwBC,GAClDF,EAAQrX,KAAKuX,GAGfJ,EAAQnX,KAAKqX,GAGf,GAA2C,MAAvChS,EAAKW,WAAWwR,qBAA4E,EAA7CnS,EAAKW,WAAWwR,oBAAoBpX,OAAY,KAC3F6X,EAAe,GACrB,IAAK,IAAMhX,KAAKkW,EAAS,CACvB,IAAK,IAAMO,KAAKrS,EAAKW,WAAWwR,oBAE1BnS,EAAKW,WAAWwR,oBAAoBE,GAAG3I,KAAOoI,EAAQlW,GAAG,KAE3DgX,EAAQhX,GAAK,CAACoE,EAAKW,WAAWwR,oBAAoBE,GAAG/T,IAAKwT,EAAQlW,GAAG,GAAIkW,EAAQlW,GAAG,KAGtE,MAAdgX,EAAQhX,KAAcgX,EAAQhX,GAAKkW,EAAQlW,IAIjDkW,EAAUc,EAOW,MAAnBtU,EAAIqR,aAA0C,GAAnBrR,EAAIqR,aACjC3P,EAAK4H,YAEPkK,EAAiB,QAAIxT,EAAIgU,cACPtS,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,kBAAmB,YAChClR,KAAM,CAAE6V,gBAAgB,EAAO7V,KAAM2X,KAGpB,SAAjBjR,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,uCAExBxE,EAAKwC,SAAU,KAKnBnD,iBAAA5F,UAAAoZ,qBAAA,SAAqBvU,EAAUnE,OAEzB2Y,EAAa,GACbC,EAAgB,GAEpB,GADAA,EAAWzU,EAAIZ,KACM,MAAjBY,EAAI0U,UACN,IAAK,IAAMtL,KAAKpJ,EAAIsT,MAClBkB,EAAQxU,EAAIsT,MAAMlK,GAAGuL,EAAI,IAAMC,UAAU/Y,EAAKmE,EAAIsT,MAAMlK,GAAGgC,MAExC,GAAfyJ,SAASzL,KAAWqL,EAAWA,EAAW,IAAMD,GACjC,GAAfK,SAASzL,KAAWqL,EAAWA,EAAW,IAAMD,GAIxD,GAAqB,MAAjBxU,EAAI0U,WAAsC,WAAjB1U,EAAI0U,UAC/B,IAAK,IAAMtL,KAAKpJ,EAAIsT,MAIlBmB,EAAWA,EAAW,IAAMG,UAAU/Y,EAAKmE,EAAIsT,MAAMlK,KAKzD8B,WAAU,aAGP,IAEH4J,OAAOjI,KAAK4H,EAAU,WAExB1T,iBAAA5F,UAAA4Z,SAAA,SAAS/U,EAAUrE,OACXyD,EAAOzD,EAAM,GAAKqE,EAAIL,IAAW5D,KAAKuL,aAC5CwN,OAAOjI,KAAKzN,EAAM,WAKpB2B,iBAAA5F,UAAA6Z,YAAA,WAAA,IAAAtT,EAAA3F,KAEEmP,WAAU,eACF+J,EAAevT,EAAK6K,UAAU2I,SAAStX,IAAG,SAACoM,GAAK,OAAAA,EAAErK,MACxDrD,QAAQC,IAAI,cAAemF,EAAK0C,WAAWvI,KAAKY,OAAQiF,EAAK6K,UAAU2I,SAASzY,OAAQiF,EAAK6K,UAAU2I,SAAUD,GACjHvT,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,0BAA2BC,UAAW3O,EAAKY,aAAcgO,SAAU5O,EAAKc,YAAa2S,aAAczT,EAAK6K,UAAU2I,YACxJ,MAILnU,iBAAA5F,UAAAia,cAAA,WAEE,GAAsB,MAAlBrZ,KAAKwQ,WAAqBxQ,KAAKwQ,UAAUuG,OAI3C,OAFoB/W,KAAKwQ,UAAU2I,SAASzY,SAC5BV,KAAKqI,WAAWvI,KAAKY,QAMzCsE,iBAAA5F,UAAAka,aAAA,WAAA,IAAA3T,EAAA3F,KACEA,KAAKqZ,gBACHrZ,KAAKwQ,UAAUgE,QACfxU,KAAKqI,WAAWvI,KAAKqS,QAAO,SAACtD,GAAO,OAAAlJ,EAAK6K,UAAUuG,OAAOlI,KAC5D7O,KAAKiZ,eAIPjU,iBAAA5F,UAAAma,cAAA,SAAc1K,GACZ,OAAKA,GAGK7O,KAAKwQ,UAAUgJ,WAAW3K,GAAO,WAAa,UAAQ,SAAQA,EAAI2H,SAAW,IAF3ExW,KAAKqZ,gBAAkB,SAAW,YAAU,QAM1DrU,iBAAA5F,UAAAmR,WAAA,SAAWkJ,OACH3Z,EAAO,GAIb,OAHAsK,OAAO+D,KAAKsL,GAAOtH,QAAO,SAAW9C,GACnCvP,EAAKuP,EAAId,QAAQ,MAAO,MAAQkL,EAAMpK,KAEjCvP,GAGTkF,iBAAA5F,UAAAsa,YAAA,SAAY9D,GACV5V,KAAKqI,WAAWpH,OAAS2U,EAAY+D,OAAOrG,WAAWvB,cAEnD/R,KAAKqI,WAAWuR,WAClB5Z,KAAKqI,WAAWuR,UAAUC,aAkB9B7U,iBAAA5F,UAAA0a,UAAA,SAAUC,EAAUlL,GAWlB,MAAO,IAGT7J,iBAAA5F,UAAA4a,WAAA,SAAWC,GAESja,KAAKkF,OAAO4L,KAAKoJ,YAAa,CAC9ClJ,WAAY,CAAC,sCAAuC,eACpDC,OAAQ,OACRnR,KAAM,CAAEqa,YAAaF,MAGzBjV,iBAAA5F,UAAAgb,UAAA,SAAUnW,GAAV,IAAA0B,EAAA3F,KACEA,KAAKmI,SAAU,EACfnI,KAAK+G,UAAY9C,EAAIL,IACrB5D,KAAKiF,YAAY7B,WAAWpD,KAAKyJ,UAAYzJ,KAAKsG,WAAW+T,MAAMC,aAActa,KAAK8J,YAAa,CAAE9I,GAAIiD,EAAIL,MAAOmF,UAAS,SAACjH,OACxH0E,EACJA,EAAS1E,EAET6D,EAAKwC,SAAU,EACfxC,EAAKoB,UAAY,KAMCpB,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,kBAAmB,eAChClR,KAAM,CACJ6V,gBAAgB,EAChB0E,OAAO,EAAM5N,OAAQ9G,EAAK8D,UAC1B8Q,SAAU5U,EAAKW,WAAW+T,MAAOG,QAASvW,EAC1C6F,YAAanE,EAAKmE,YAClB2Q,SAAUjU,EAAO1E,IACjB2D,UAAWE,EAAKF,aAGViV,cAAc3R,UAAS,SAACvC,GAChCb,EAAK4H,iBAMXvI,iBAAA5F,UAAAub,SAAA,SAASC,OACH9a,EACJA,EAAO8a,MACDC,EAAa,GAEnB,IAAK,IAAMxL,KAAOvP,EAEhB,GAAIA,EAAKgb,eAAezL,KACI,kBAAdvP,EAAKuP,KACE,GAAbvP,EAAKuP,KAAgBvP,EAAKuP,GAAO,OACpB,GAAbvP,EAAKuP,KAAiBvP,EAAKuP,GAAO,OAE7B,SAAPA,IACFvP,EAAKuP,EAAM,KAAO,2BAA6BvP,EAAKuP,GAAO,UAIjDvP,EAAKuP,GAKS,iBAAdvP,EAAKuP,IAAmB,KAC5B0L,EAAgB,GACtB,IAAK,IAAMC,KAAKlb,EAAKuP,GACnB,IAAK,IAAM4L,KAAKjb,KAAK+L,mBAqBnB,GApBI/L,KAAK+L,mBAAmBkP,GAAG5L,KAAOA,GAA2C,SAApCrP,KAAK+L,mBAAmBkP,GAAG/T,OAOtE6T,EAASza,KAAK,2BAA6BR,EAAKuP,GAAK2L,GAAK,UAKxDhb,KAAK+L,mBAAmBkP,GAAG5L,KAAOA,GAA2C,SAApCrP,KAAK+L,mBAAmBkP,GAAG/T,OAEtE6T,EAASza,KAAK,SAAWR,EAAKuP,GAAK2L,GAAK,gBAMtChb,KAAK+L,mBAAmBkP,GAAG5L,KAAOA,GAEP,iBAAjBvP,EAAKuP,GAAK2L,GACpB,IAAK,IAAME,KAAQpb,EAAKuP,GAAK2L,GAC3BD,EAASza,KAAK,SAAW4a,EAAO,MAAQpb,EAAKuP,GAAK2L,GAAGE,GAAQ,gBAUvEpb,EAAKuP,EAAM,KAAO0L,EAKxB,IAAK,IAAM9K,KAAKnQ,EACC,MAAXA,EAAKmQ,IAAyB,IAAXnQ,EAAKmQ,KAC1B4K,EAAM5K,GAAKnQ,EAAKmQ,IAIpB,IAAK,IAAM5C,KAAKrN,KAAKiM,4BAEZ4O,EAAM7a,KAAKiM,qBAAqBoB,QAErCvL,EAAMsI,OAAO+Q,QAAQN,GAEzB,GAA2C,MAAvC7a,KAAKsG,WAAWwR,qBAA4E,EAA7C9X,KAAKsG,WAAWwR,oBAAoBpX,OAAY,KAC3FqX,EAAe,GACrB,IAAK,IAAMxW,KAAKO,EAAK,CACnB,IAAK,IAAMkW,KAAKhY,KAAKsG,WAAWwR,oBAE1B9X,KAAKsG,WAAWwR,oBAAoBE,GAAG3I,KAAOvN,EAAIP,GAAG,KAEvDwW,EAAQxW,GAAK,CAACvB,KAAKsG,WAAWwR,oBAAoBE,GAAG/T,IAAKnC,EAAIP,GAAG,GAAIO,EAAIP,GAAG,KAG9D,MAAdwW,EAAQxW,KAAcwW,EAAQxW,GAAKO,EAAIP,IAI7CO,EAAMiW,EAGU/X,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,kBAAmB,eAChClR,KAAM,CAAE6V,gBAAgB,EAAO7V,KAAMgC,MAIzCkD,iBAAA5F,UAAAgc,aAAA,SAAatb,GAAb,IAAA6F,EAAA3F,KACQqb,EAAKrb,KAAKmF,YAAY2L,KAAKwK,YAAa,CAAEtK,WAAY,qBAAsBlR,KAAM,CAAEyb,MAAOvb,KAAK6M,gBAEtG7M,KAAK2I,cAAc3I,KAAK4I,qBAAuByS,EAAGG,iBAAiBzS,UAAS,SAACvC,GAC7D,MAAVA,IACF1G,EAAKsY,OAAS5R,EAAOvC,IACrBnE,EAAKkB,GAAKlB,EAAK8D,IACf+B,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYpB,aAAa8B,EAAK8D,UAAY9D,EAAKW,WAAWiG,eAAgBzM,EAAM6F,EAAKmE,YAAanE,EAAKwG,eAAepD,UAAS,SAACjH,OAC9K0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEsW,OAAqB,CAC9B,IAAK,IAAMJ,KAAKrS,EAAKO,QAEfP,EAAKO,QAAQ8R,GAAGpU,KAAO9D,EAAK8D,MAC9B+B,EAAKO,QAAQ8R,GAAGI,OAAStY,EAAKsY,QAGlCzS,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK6K,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAC1C9K,EAAK0C,WAAWuR,UAAYjU,EAAKiU,UACjCjU,EAAK0C,WAAWuB,KAAOjE,EAAKiE,KAE5BjE,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,eAAgBC,UAAW3O,EAAKY,aAAcgO,SAAU5O,EAAKc,cAElFd,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChClR,KAAM,CAAE4V,QAAS,gCAAiCC,gBAAgB,KAIjD,SAAjBnP,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,6CAUhCnF,iBAAA5F,UAAAqc,oBAAA,SAAoB5M,EAAUhE,GAE5B7K,KAAKsH,mBAAmBpH,KAAK,CAC3BmU,OAAQ,oBAAqBC,UAAWtU,KAAKuG,aAAcgO,SAAUvU,KAAKyG,YAAaiV,kBAAmB,CACxG5b,KAAM+O,EAAK8M,QAAS9Q,MAI1B7F,iBAAA5F,UAAAwc,iBAAA,SAAiB9b,OAIX+b,EAAiB7b,KAAK8K,gBAAgBlL,IAC1C,IAAK,IAAM2B,KAAKvB,KAAK8K,gBAAgBgR,OACnCD,EAAYA,EAAY,IAAM/b,EAAKE,KAAK8K,gBAAgBgR,OAAOva,IAEjEsa,EAAY7b,KAAKwF,UAAUuW,+BAA+BF,GAExC7b,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,oBACZlR,KAAM,CAAE6V,gBAAgB,EAAO7V,KAAM,CAAC,CAAEA,KAAIA,EAAEkc,WAAYH,QAQ9D7W,iBAAA5F,UAAA6c,qBAAA,WAAA,IAGMjE,EAHNrS,EAAA3F,KAEQ+D,EAAW,GAEjB,IAAKiU,KAAKhY,KAAKwQ,UAAU2I,SAEvBpV,EAAIzD,KAAKN,KAAKwQ,UAAU2I,SAASnB,GAAGpU,SAIhCyX,EAAKrb,KAAKmF,YAAY2L,KAAKwK,YAAa,CAAExb,KAAM,CAAEyb,MAAOvb,KAAK6M,gBAEpE7M,KAAK2I,cAAc3I,KAAK4I,qBAAuByS,EAAGG,iBAAiBzS,UAAS,SAACvC,GAE3E,GAAc,MAAVA,EAAgB,KAGZ0V,EAAiB1V,EAAOvC,IAC9B0B,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYjB,iBAAiB2B,EAAK8D,UAAY9D,EAAKW,WAAW6V,mBAAoBpY,EAAKyC,EAAOvC,IAAK0B,EAAKmE,YAAanE,EAAKwG,eAAepD,UAAS,SAACjH,GAGrM,GAAqB,WADZA,EACEsW,OAAqB,CAC9B,IAAK,IAAMgE,KAAKzW,EAAKO,SAEqB,EAApCnC,EAAIkL,QAAQtJ,EAAKO,QAAQkW,GAAGxY,OAC9B+B,EAAKO,QAAQkW,GAAGhE,OAAS8D,GAG7BvW,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK6K,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAC1C9K,EAAK0C,WAAWuR,UAAYjU,EAAKiU,UACjCjU,EAAK0C,WAAWuB,KAAOjE,EAAKiE,KAG5BjE,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,uBAAwBC,UAAW3O,EAAKY,aAAcgO,SAAU5O,EAAKc,cAE1Fd,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,eAChClR,KAAM,CAAE4V,QAAS,gCAAiCC,gBAAgB,OAKvE,SAAEhT,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,6CAShCnF,iBAAA5F,UAAAid,eAAA,WAAA,IAOMrE,EAPNrS,EAAA3F,KAEQsc,EAAYtc,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,mBAChClR,KAAM,CAAE4V,QAAS,2DAEb3R,EAAW,GAEjB,IAAKiU,KAAKhY,KAAKwQ,UAAU2I,SAEvBpV,EAAIzD,KAAKN,KAAKwQ,UAAU2I,SAASnB,GAAGpU,KAGtC0Y,EAAU5B,cAAc3R,UAAS,SAACvC,GAElB,OAAVA,IACFb,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYnB,aAAa6B,EAAK8D,UAAY9D,EAAKW,WAAWiW,mBAAoBxY,EAAK4B,EAAKmE,YAAanE,EAAKwG,eAAepD,UAAS,SAACjH,OACjL0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEsW,OAAqB,gBACnBoE,GACT7W,EAAKO,QAAUP,EAAKO,QAAQjF,OAAM,SAACiF,GAAW,OAAAA,EAAQtC,KAAOG,EAAIyY,MADnE,IAAK,IAAMA,KAAKzY,IAALyY,GAGX7W,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK6K,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAC1C9K,EAAK0C,WAAWuR,UAAYjU,EAAKiU,UACjCjU,EAAK0C,WAAWuB,KAAOjE,EAAKiE,KAC5BjE,EAAK4H,YACL5H,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,iBAAkBC,UAAW3O,EAAKY,aAAcgO,SAAU5O,EAAKc,cAEpFd,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,mBAChClR,KAAM,CAAE4V,QAAS,qCAAsCC,gBAAgB,KAItD,SAAjBnP,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,6CAQhCnF,iBAAA5F,UAAAqd,WAAA,SAAW3c,GAAX,IAAA6F,EAAA3F,KAUoBA,KAAKkF,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChCC,OAAQ,OACRnR,KAAM,CAAE4V,QAAS,2CAGTgF,cAAc3R,UAAS,SAACvC,GAClB,OAAVA,IACFb,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYvB,YAAYiC,EAAK8D,UAAY9D,EAAK2G,kBAAmBxM,EAAM6F,EAAKmE,YAAanE,EAAKwG,eAAepD,UAAS,SAACjH,OACrK0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEsW,OAAqB,CAC9BzS,EAAKO,QAAUP,EAAKO,QAAQjF,OAAM,SAACiF,GAAW,OAAAA,EAAQtC,KAAO9D,EAAK8D,MAClE+B,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK6K,UAAY,IAAIC,YAAAA,gBAAe,EAAM,IAC1C9K,EAAK0C,WAAWuR,UAAYjU,EAAKiU,UACjCjU,EAAK0C,WAAWuB,KAAOjE,EAAKiE,KAC5BjE,EAAK4H,YACL5H,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,SAAUC,UAAW3O,EAAKY,aAAcgO,SAAU5O,EAAKc,cAC5Ed,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChClR,KAAM,CAAE4V,QAAS,kCAAmCC,gBAAgB,KAGnD,SAAjBnP,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,6CAUhCnF,iBAAA5F,UAAAsd,SAAA,SAAS5c,GACPE,KAAKqF,OAAO8R,SAAS,CAACnX,KAAKiN,aAAcnN,EAAK8D,OAIhDoB,iBAAA5F,UAAAud,UAAA,SAAUnT,EAAY9J,GACpBM,KAAKyG,YAAY+C,MAAQA,EACzBxJ,KAAKyG,YAAY/G,KAAOA,EACxBM,KAAKuN,aAGPvI,iBAAA5F,UAAAmO,UAAA,WAAA,IAKMhL,EALNoD,EAAA3F,KAGQqD,EAAOrD,KAAKyJ,UAAY,GAAKzJ,KAAK2L,kBAClCiR,EAAQ5c,KAAKyJ,UAAY,GAAKzJ,KAAK2L,kBAAoB,SAGvDkH,EAAkB,GAMxB,IAAK,IAAMvE,KAAKtO,KAAKmG,QAEI,MAAnBnG,KAAKmG,QAAQmI,IAA0D,IAA5CtO,KAAKmG,QAAQmI,GAAGgF,WAAWvB,gBACxDc,EAAWvE,GAAK,CAAE+E,OAAQrT,KAAKmG,QAAQmI,GAAGgF,WAAWvB,oBAInD1L,EAAkB,GAExB,IAAK,IAAM9E,KAAKvB,KAAKqG,WACnB,IAAK,IAAMkN,KAAKvT,KAAKqG,WAAW9E,GAAI,KAC5BiS,EAAU,GAChBA,EAAGjS,GAAKvB,KAAKqG,WAAW9E,GAAGgS,GAAGtP,IAAIqP,WAAWvB,cAEvB,MAAlB1L,EAAWoN,MAAepN,EAAWoN,IAAM,IAC/CpN,EAAWoN,IAAInT,KAAKkT,GAKxBxT,KAAKuG,aAAamE,UAAY,EAC9B1K,KAAKuG,aAAaqF,KAAO,EACzB5L,KAAKwH,cAAgBxH,KAAKuG,iBAEtBmN,EACJA,EAAetJ,OAAOuJ,OAAO,GAAId,EAAY7S,KAAK+H,qBAAsB1B,EAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWsN,eACjIrR,EAAS,CACPqQ,UAAW,CACTiB,MAAO7T,KAAKuG,aAAasN,MACzBjI,KAAM,GAERhC,KAAM,CACJJ,MAAOxJ,KAAKyG,YAAY+C,MACxB9J,KAAMM,KAAKyG,YAAY/G,MAEzBoU,gBAAiBJ,GAIftJ,OAAO+D,KAAKuF,GAAchT,OAAS,EACrCV,KAAKyF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,sCAOxBnK,KAAK6J,4BAA8B,EACnC7J,KAAKmI,SAAU,EACfnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAK8J,YAAavH,GAAQwG,UAAS,SAACjH,OAC/G0E,EAEsB,OAD1BA,EAAS1E,GACEiI,QAAQjI,KAA2C,EAA5B0E,EAAOuD,QAAQjI,IAAIpB,QACnDiF,EAAK2B,mBAAmBpH,KAAK,CAAEmU,OAAQ,SAAUC,UAAW3O,EAAKY,aAAcuN,gBAAiBJ,EAAca,SAAU5O,EAAKc,cAC7Hd,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB9B,EAAOuD,QAAQjI,KACxD6D,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,gCAIxBxE,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,oCAK1BxE,EAAKwC,SAAU,IAKjBnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWwZ,EAAO5c,KAAK8J,YAAavH,GAAQwG,UAAS,SAACjH,OAChH0E,EACJA,EAAS1E,EACT6D,EAAKkE,4BAA+BrD,EAAY,MAC5B,GAAhBA,EAAOqW,MAAclX,EAAKS,UAAY,EAAYT,EAAKS,UAAY,MAS7EpB,iBAAA5F,UAAA0d,UAAA,SAAU7Y,GACR,cAAO,GAOTe,iBAAA5F,UAAA2d,gBAAA,SAAgBC,GAAhB,IAAArX,EAAA3F,KAGQF,EAAY,CAAEyC,OAAQ,sBAAuBqQ,UAAW,CAAEqK,gBAAiBD,EAAWpZ,KAAOd,MAAO9C,KAAK8J,aAE/G9J,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAYpC,SAJnD,wDAIkE/C,GAAMiJ,UAAS,SAAC3I,OACvF8c,EAAc9c,EAEFuF,EAAKT,OAAO4L,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,cAChCC,OAAQ,OACRnR,KAAM,CAAEqd,SAAS,EAAMhD,YAAa+C,2CAt9D3CE,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,cACVC,SAAA,8ukCArBOne,kBACAoe,SAAAA,iBACAC,SAAAA,sBACAC,MAAAA,mBACmEC,OAAAA,cAX1EC,GAAAA,gCAGAC,GAAAA,wBAWO1Z,KAAAA,kBACA2Z,gBAAAA,oBAIoBC,SAAAA,mBAhBwDC,GAAAA,yEA2FlFC,GAAAA,gCAKAC,GAAAA,2CAaAA,GAAAA,yBAIAA,GAAAA,wCAMAA,GAAAA,yBAOAA,GAAAA,4BAKAA,GAAAA,kCAKAA,GAAAA,wBAIAA,GAAAA,oCAMAA,GAAAA,mBAIAA,GAAAA,8BAIAA,GAAAA,wBAIAA,GAAAA,0BAIAA,GAAAA,uBAIAA,GAAAA,0BAOAA,GAAAA,8BAKAA,GAAAA,oBAKAA,GAAAA,+BAIAA,GAAAA,iCAIAA,GAAAA,0BAKAA,GAAAA,mCAKAA,GAAAA,8BAKAA,GAAAA,8BAKAA,GAAAA,sBAIAA,GAAAA,2BAGEA,GAAAA,wBAKFA,GAAAA,yBAMAA,GAAAA,0BAKAA,GAAAA,yBAKAA,GAAAA,gCAOAA,GAAAA,oBA0BA7Z,GAAAA,UAASnF,KAAA,CAACif,SAAAA,4BACV9Z,GAAAA,UAASnF,KAAA,CAACkf,SAAAA,iBAouDbnZ,mCAqBEyQ,GAAArW,UAAAgf,UAAA,WACEpe,KAAKsc,UAAU+B,SAEjB5I,GAAArW,UAAAkf,WAAA,SAAWxd,GAAX,IAAA6E,EAAA3F,KAGQuC,EAAc,CAElBvB,GAAIhB,KAAKF,KAAK0a,QAAQ5W,IACtB9C,MAAKA,GAIPd,KAAKF,KAAKye,SAAWzd,EACrBd,KAAKiF,YAAY7B,WAAWpD,KAAKF,KAAK2M,OAASzM,KAAKF,KAAKya,SAASiE,eAAgBxe,KAAKF,KAAKgK,YAAavH,GAAQwG,UAAS,SAACjH,GAIpG,WAFZA,EAEEsW,SAGTzS,EAAK7F,KAAK2a,SAAS9F,OAAO7T,EAAO,GACjC6E,EAAK7F,KAAKye,SAAW,SAS3B9I,GAAArW,UAAAqf,SAAA,WAAA,IAAA9Y,EAAA3F,KAEE,GAA0B,MAAtBA,KAAKF,KAAK4e,UAA0C,IAAtB1e,KAAKF,KAAK4e,SAAgB,KACpDnc,EAAc,CAElBvB,GAAIhB,KAAKF,KAAK0a,QAAQ5W,IACtB+a,KAAM3e,KAAKF,KAAK4e,SAChBE,KAAM5e,KAAKF,KAAKya,SAASqE,MAE3B5e,KAAKF,KAAKqI,SAAU,EACpBnI,KAAKiF,YAAY7B,WAAWpD,KAAKF,KAAK2M,OAASzM,KAAKF,KAAKya,SAASsE,YAAa7e,KAAKF,KAAKgK,YAAavH,GAAQwG,UAAS,SAACjH,GAIjG,WAFZA,EAEEsW,SACiB,MAAtBzS,EAAK7F,KAAK2a,WAAoB9U,EAAK7F,KAAK2a,SAAW,IACvD9U,EAAK7F,KAAK2a,SAAS5K,QAAQ,CAAEjM,IAAK+B,EAAK7F,KAAK0a,QAAQ5W,IAAKyW,MAAO,CAAEyE,OAAQnZ,EAAK7F,KAAKya,SAASqE,KAAMD,KAAMhZ,EAAK7F,KAAK4e,SAAUE,KAAMjZ,EAAK7F,KAAKya,SAASwE,oBAAqBC,aAAc9L,KAAK+L,SAC9LtZ,EAAK7F,KAAK4e,SAAW,GACrB/Y,EAAK7F,KAAKqI,QAAU,aASxBnI,KAAKF,KAAK2F,UAAUuE,kBAAkBC,kBAAmB,CACvDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,+BAK5BsL,GAAArW,UAAA0d,UAAA,SAAU7Y,GACR,cAAO,GAETwR,GAAArW,UAAA8f,YAAA,SAAYrD,EAAgB/b,EAAW0a,GACrC,IAAK,IAAMjZ,KAAKzB,EACd+b,EAAYA,EAAY,IAAMrB,EAAQ1a,EAAKyB,IAG7C,OAAOvB,KAAKwF,UAAUuW,+BAA+BF,yBA3FxDuB,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,gBACVC,SAAA,+xPAt/DOne,kBACWggB,SAAAA,gDA6/DfC,GAAAA,OAAMngB,KAAA,CAACogB,SAAAA,0BAt/DHxB,gBAAAA,gBA0kETpI,IAxFE,SAAAA,GACSxQ,EAEAqX,EACyBxc,EAAkB0F,GAH3CxF,KAAAiF,YAAAA,EAEAjF,KAAAsc,UAAAA,EACyBtc,KAAAF,KAAAA,EAAkBE,KAAAwF,UAAAA,EAElDxF,KAAKF,KAAKkH,MAAQ,UAClBhH,KAAKF,KAAKmH,KAAO,gBACjBjH,KAAKF,KAAKwf,YAAc,GACxBtf,KAAKF,KAAKqH,YAAc,oBA6F1BmU,GAAAlc,UAAAmgB,SAAA,SAAStb,GACPjE,KAAKwf,eAAeC,QAAQxb,yBAV/BmZ,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,eACVC,SAAA,yRAvlEuBoC,SAAAA,qDA0lE8CN,GAAAA,OAAMngB,KAAA,CAAC0gB,SAAAA,4BAO9ErE,IAPE,SAAAA,GAAoBkE,EAAsF1f,GAAtFE,KAAAwf,eAAAA,EAAsFxf,KAAAF,KAAAA,EAU5G,IAAAoa,aAYEA,GAAA9a,UAAAgf,UAAA,WACEpe,KAAKsc,UAAU+B,8BAblBjB,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,cACVC,SAAA,iMAvmEkB6B,SAAAA,gDA6mEfC,GAAAA,OAAMngB,KAAA,CAACogB,SAAAA,sBAOZnF,IATE,SAAAA,GACSoC,EACyBxc,GADzBE,KAAAsc,UAAAA,EACyBtc,KAAAF,KAAAA,EAUpC,IAAAiR,WAYEA,GAAA3R,UAAAqf,SAAA,aAIA1N,GAAA3R,UAAAgf,UAAA,WACEpe,KAAKsc,UAAU+B,8BAjBlBjB,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,QACVC,SAAA,mVAznEkB6B,SAAAA,gDAgoEfC,GAAAA,OAAMngB,KAAA,CAACogB,SAAAA,sBAUZtO,IAZE,SAAAA,GACSuL,EACyBxc,GADzBE,KAAAsc,UAAAA,EACyBtc,KAAAF,KAAAA,8CAYnCsd,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,oCACVC,SAAA,+EACS,gHApoE+BsC,SAAAA,kDA6oErCR,GAAAA,OAAMngB,KAAA,CAAC4gB,SAAAA,yBAIZ5V,IANE,SAAAA,GACS6V,EAC4BhgB,GAD5BE,KAAA8f,YAAAA,EAC4B9f,KAAAF,KAAAA,ECvpEvC,IAAAigB,mBAME3V,OAAAC,eACI0V,GAAA3gB,UAAA,WAAQ,KADZ,SACa4gB,GACXhgB,KAAKigB,YAAcD,mCAGrB5V,OAAAC,eACI0V,GAAA3gB,UAAA,uBAAoB,KADxB,SACyB8gB,GACvBlgB,KAAKmgB,wBAA0BD,mCAGjC9V,OAAAC,eACI0V,GAAA3gB,UAAA,mBAAgB,KADpB,SACqBghB,GACnBpgB,KAAKqgB,oBAAsBD,mCAM7BhW,OAAAC,eAAI0V,GAAA3gB,UAAA,OAAI,KAAR,WACE,OAAOY,KAAKsgB,UAAU3e,IAAI,yCAgC5Boe,GAAA3gB,UAAAwO,SAAA,WACE5N,KAAKugB,WAAW,IAKlBR,GAAA3gB,UAAAohB,YAAA,WACsC,MAAhCxgB,KAAKigB,YAAYQ,aACnBzgB,KAAKqF,OAAO8R,SAAS,CAACnX,KAAKigB,YAAYQ,eAG3CV,GAAA3gB,UAAAgS,gBAAA,WAAA,IAAAzL,EAAA3F,KACEmP,WAAU,WAER,IAAK,IAAMuR,KAAK/a,EAAKsa,YAAYnE,OACQ,QAAnCnW,EAAKsa,YAAYnE,OAAO4E,GAAGhhB,OAC7BiG,EAAKgb,WAAWlP,cAAcC,cAAc,QAAU/L,EAAKsa,YAAYnE,OAAO4E,GAAGzM,MAAM2M,iBAAiB,OAAQjb,EAAKkb,WAAWC,KAAKnb,IACrIA,EAAKgb,WAAWlP,cAAcC,cAAc,QAAU/L,EAAKsa,YAAYnE,OAAO4E,GAAGzM,MAAM2M,iBAAiB,YAAajb,EAAKob,OAAOD,KAAKnb,IACtIA,EAAKgb,WAAWlP,cAAcC,cAAc,QAAU/L,EAAKsa,YAAYnE,OAAO4E,GAAGzM,MAAM2M,iBAAiB,WAAYjb,EAAKob,OAAOD,KAAKnb,MAKxI,MAGLoa,GAAA3gB,UAAA4hB,cAAA,SAAc/c,GAAd,IAAA0B,EAAA3F,KAEEmP,WAAU,WAERxJ,EAAKgb,WAAWlP,cAAcC,cAAc,QAAUzN,EAAIgQ,MAAM2M,iBAAiB,OAAQjb,EAAKkb,WAAWC,KAAKnb,IAC9GA,EAAKgb,WAAWlP,cAAcC,cAAc,QAAUzN,EAAIgQ,MAAM2M,iBAAiB,YAAajb,EAAKob,OAAOD,KAAKnb,IAC/GA,EAAKgb,WAAWlP,cAAcC,cAAc,QAAUzN,EAAIgQ,MAAM2M,iBAAiB,eAAgBjb,EAAKob,OAAOD,KAAKnb,KACjH,MAILoa,GAAA3gB,UAAA2hB,OAAA,SAAOzP,GAGL,OADAA,EAAE2P,kBACK,GAETlB,GAAA3gB,UAAAyhB,WAAA,SAAWvP,GAAX,IAAA3L,EAAA3F,KAGekV,SAASgM,eAAe,QAErC5P,EAAE2P,iBAIF,QADM5gB,EADKiR,EAAE6P,aACI9gB,iBACRiO,GAIP,IAAK,IAAMoS,KAHErgB,EAAMiO,GAGHU,EAAKiR,YAAYnE,OAC/B,GAAuC,QAAnC9M,EAAKiR,YAAYnE,OAAO4E,GAAGhhB,MAAkBsP,EAAKiR,YAAYnE,OAAO4E,GAAGzM,MAAQ3C,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,IAE9G,GADAhO,QAAQC,IAAI,eAAgBwO,EAAKiR,YAAYnE,OAAO4E,IACT,MAAvC1R,EAAKiR,YAAYnE,OAAO4E,GAAGW,SAE7B,GAAuD,MAAnDrS,EAAKsS,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,KAC7C,IAAK,IAAM0B,KAAKjB,EAAKiR,YAAYnE,OAC3B9M,EAAKiR,YAAYnE,OAAO7L,GAAGgE,MAAQ3C,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,MACjES,EAAKuS,WAAWvS,EAAKiR,YAAYnE,OAAO7L,GAAI,GAC5Cd,WAAU,WACRxJ,EAAK2b,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,KAAOlO,EAAMiO,IACvD,SAIPU,EAAKsS,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,KAAOlO,EAAMiO,QAGH,MAAnDU,EAAKsS,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,OAC7CS,EAAKsS,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,KAAO,IAEpDS,EAAKsS,UAAUhQ,EAAE8P,OAAOpgB,GAAGuN,QAAQ,OAAQ,KAAKjO,KAAKD,EAAMiO,YAzB1DA,EAAI,EAAGA,EAAIjO,EAAMK,OAAQ4N,MAAzBA,GA8DT,OAAO,GAUTyR,GAAA3gB,UAAAoiB,WAAA,SAAWvd,OAEHwd,EAAS,IAAIC,WACbvhB,EAAYH,KAAKshB,UAAUrd,EAAIgQ,MAErC9T,EAAKwhB,SAAW,EACM3hB,KAAK4hB,aAAa3d,EAAIgQ,MAC/BhQ,EAAIgQ,KAEjBwN,EAAOI,UAAS,SAAIvQ,GAClBwQ,MAAM7d,EAAIwI,OAAQ,CAChB5M,OAAQ,OACRqC,QAAS,CACPE,eAAgB,oBAElBwU,KAAM5T,KAAKC,UAAU,CACnBgR,KAAMhQ,EAAI8d,OAAS5hB,EAAK8T,KAAK+N,MAAM,KAAKC,KAAK,IAC7CviB,KAAMS,EAAKT,KACXK,KAAMkE,EAAIlE,KACVmiB,OAAQje,EAAIie,WAGbC,KAAI,SAAW/hB,GAEd,OAAOA,EAASgiB,SAEjBD,KAAI,SAAWC,GACd,OAAON,MAAMM,EAAKC,UAAW,CAC3BxiB,OAAQ,MACR+W,KAAM,IAAI0L,KAAK,CAACb,EAAOjb,QAAS,CAAE9G,KAAMS,EAAKT,WAGhDyiB,KAAI,WAEHhiB,EAAKwhB,SAAW,EAChBxhB,EAAKiB,eAAiB6C,EAAI8d,OAAS5hB,EAAK8T,KAAK+N,MAAM,KAAKC,KAAK,OASnER,EAAOc,kBAAkBpiB,IAE3B4f,GAAA3gB,UAAAojB,UAAA,SAAUve,GAER,IAAK,IAAMwe,KAAKziB,KAAKshB,UAAUrd,EAAIgQ,MAGS,MAAtCjU,KAAKshB,UAAUrd,EAAIgQ,MAAMwO,GAAGP,QAAgBliB,KAAK0iB,mBAAmBze,EAAKjE,KAAKshB,UAAUrd,EAAIgQ,MAAMwO,GAAIA,IAK9G1C,GAAA3gB,UAAAujB,sBAAA,SAAsB1e,GAAtB,IAAA0B,EAAA3F,KACE,IAAK,IAAMyiB,KAAKziB,KAAKshB,UAAUrd,EAAIgQ,MAEjCjU,KAAK4iB,mBAAmB3e,EAAKjE,KAAKshB,UAAUrd,EAAIgQ,MAAMwO,GAAIA,GAE5DtT,WAAU,WACRxJ,EAAK2b,UAAUrd,EAAIgQ,MAAQ,MAC1B,MAGL8L,GAAA3gB,UAAAsjB,mBAAA,SAAmBze,EAAU4e,EAAQC,OAC7BrB,EAAS,IAAIC,WACbvhB,EAAYH,KAAKshB,UAAUrd,EAAIgQ,MAAM6O,GAIX,MAA5B9iB,KAAK+iB,UAAU9e,EAAIgQ,QAAiBjU,KAAK+iB,UAAU9e,EAAIgQ,MAAQ,GACnEjU,KAAK+iB,UAAU9e,EAAIgQ,QAEnB9T,EAAKwhB,SAAW,EACM3hB,KAAK4hB,aAAa3d,EAAIgQ,MAC/BhQ,EAAIgQ,KAEjBwN,EAAOI,UAAS,SAAIvQ,GAClBwQ,MAAM7d,EAAIwI,OAAQ,CAChB5M,OAAQ,OACRqC,QAAS,CACPE,eAAgB,oBAElBwU,KAAM5T,KAAKC,UAAU,CACnBgR,KAAMhQ,EAAI8d,OAAS5hB,EAAK8T,KAAK+N,MAAM,KAAKC,KAAK,IAC7CviB,KAAMS,EAAKT,KACXK,KAAMkE,EAAIlE,KACVmiB,OAAQje,EAAIie,WAGbC,KAAI,SAAW/hB,GAEd,OAAOA,EAASgiB,SAEjBD,KAAI,SAAWC,GACd,OAAON,MAAMM,EAAKC,UAAW,CAC3BxiB,OAAQ,MACR+W,KAAM,IAAI0L,KAAK,CAACb,EAAOjb,QAAS,CAAE9G,KAAMS,EAAKT,WAGhDyiB,KAAI,WAEHhiB,EAAKwhB,SAAW,EAChBxhB,EAAKiB,eAAiB6C,EAAI8d,OAAS5hB,EAAK8T,KAAK+N,MAAM,KAAKC,KAAK,OAYnER,EAAOc,kBAAkBpiB,IAE3B4f,GAAA3gB,UAAAmiB,WAAA,SAAWtd,EAAU+e,GAArB,IAAArd,EAAA3F,UAAqB,IAAAgjB,IAAAA,EAAA,QAIbzgB,EAAc,GACdpC,EAAYH,KAAKshB,UAAUrd,EAAIgQ,MACrC1R,EAAOpC,KAAO8D,EAAI8d,OAAS5hB,EAAK8T,KAChC1R,EAAOxC,KAAOkE,EAAIlE,KAClBwC,EAAO2f,OAASje,EAAIie,OACpBliB,KAAKiF,YAAY7B,WAAWa,EAAIgf,aAAcjjB,KAAKigB,YAAYtT,SAAUpK,GAAQwG,UAAS,SAACjH,OACrF0E,EAEiB,YADrBA,EAAS1E,GACEsW,QAA+B,IAAR4K,IAEhCrd,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,gBAExBxE,EAAK2b,UAAUrd,EAAIgQ,MAAQ,MAER,SAAjBzN,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,uCAExBxE,EAAKwC,SAAU,KAGnB4X,GAAA3gB,UAAAwjB,mBAAA,SAAmB3e,EAAUuF,EAAiB1I,GAA9C,IAAA6E,EAAA3F,UAA6B,IAAAwJ,IAAAA,EAAA,QACrBjH,EAAc,GACdpC,EAAYH,KAAKshB,UAAUrd,EAAIgQ,MAAMnT,GAC3Cd,KAAK+iB,UAAU9e,EAAIgQ,QACnB1R,EAAOpC,KAAO8D,EAAI8d,OAAS5hB,EAAK8T,KAChC1R,EAAOxC,KAAOkE,EAAIlE,KAClBwC,EAAO2f,OAASje,EAAIie,OACpBliB,KAAKiF,YAAY7B,WAAWa,EAAIgf,aAAcjjB,KAAKigB,YAAYtT,SAAUpK,GAAQwG,UAAS,SAACjH,OACrF0E,EAEiB,YADrBA,EAAS1E,GACEsW,SAETzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,gBAEQ,MAA5BxE,EAAK2b,UAAUrd,EAAIgQ,OAAetO,EAAK2b,UAAUrd,EAAIgQ,MAAMU,OAAO7T,EAAO,IAE1D,SAAjB0F,EAAO4R,QACTzS,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,uCAExBxE,EAAKwC,SAAU,KAKnB4X,GAAA3gB,UAAA+N,YAAA,SAAYC,GAAZ,IAAAzH,EAAA3F,KAGE,IAAK,IAAMqN,KAAKD,EAEL,wBAALC,GACF8B,WAAU,WAER,GAAoC,MAAhCxJ,EAAKwa,wBAAiC,CAMtC,GAFoB,MAAlBxa,EAAK2a,WAA2D,MAAtC3a,EAAKwa,wBAAwB3W,OAAgF,MAA/D7D,EAAK2a,UAAU5S,SAAS/H,EAAKwa,wBAAwB3W,QAC/H7D,EAAK2a,UAAU5S,SAAS/H,EAAKwa,wBAAwB3W,OAAO0Z,WAAWvd,EAAKwa,wBAAwBjZ,OAC1D,MAAtCvB,EAAKwa,wBAAwB3W,OAA6D,MAA5C7D,EAAKwa,wBAAwBgD,aAA4E,iBAA7Cxd,EAAKwa,wBAAmC,YACtJ,IAAK,IAAMiD,KAAWzd,EAAKwa,wBAAwBgD,YAGjD,IAAK,IAAME,KAD6B,MAApC1d,EAAK2a,UAAU5S,SAAS0V,IAAoBzd,EAAK2a,UAAU5S,SAAS0V,GAASF,WAAWvd,EAAKwa,wBAAwBgD,YAAYC,IACxGzd,EAAKsa,YAAYnE,OAAQ,CACpD,GAAInW,EAAKsa,YAAYnE,OAAOuH,GAAgBpP,MAAQmP,GAA2D,gBAAhDzd,EAAKsa,YAAYnE,OAAOuH,GAAgB3jB,MAA+E,MAApDiG,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,UAAwE,GAApD1b,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,SACpO,IAAK,IAAMvM,KAAcnP,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,KAEgE,GAA3H0B,EAAKwa,wBAAwBgD,YAAYC,GAASnU,QAAQtJ,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAAI6Q,GAAYzF,MACpH1J,EAAK2d,qBAAqB3d,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAAI6Q,GAAanP,EAAKsa,YAAYnE,OAAOuH,IAQjH,GAAI1d,EAAKsa,YAAYnE,OAAOuH,GAAgBpP,MAAQmP,GAA2D,gBAAhDzd,EAAKsa,YAAYnE,OAAOuH,GAAgB3jB,OAA+E,MAApDiG,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,UAAwE,GAApD1b,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,UACpO,IAAK,IAAMvM,KAAcnP,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAE3D0B,EAAKwa,wBAAwBgD,YAAYC,IAAazd,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAAI6Q,GAAe,KACnHnP,EAAK2d,qBAAqB3d,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAAI6Q,GAAanP,EAAKsa,YAAYnE,OAAOuH,IAQjH,GAAI1d,EAAKsa,YAAYnE,OAAOuH,GAAgBpP,MAAQmP,GAA2D,YAAhDzd,EAAKsa,YAAYnE,OAAOuH,GAAgB3jB,MAA2E,MAApDiG,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,UAAwE,GAApD1b,EAAKsa,YAAYnE,OAAOuH,GAAgBhC,SAChO,IAAK,IAAMvM,KAAcnP,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,KAGgE,GAA3H0B,EAAKwa,wBAAwBgD,YAAYC,GAASnU,QAAQtJ,EAAKsa,YAAYnE,OAAOuH,GAAgBpf,IAAI6Q,GAAYzF,KAExD,MAAxD1J,EAAK2a,UAAU5S,SAAS0V,EAAU,KAAOtO,IAAuBnP,EAAK2a,UAAU5S,SAAS0V,EAAU,KAAOtO,GAAYoO,YAAW,GAExE,MAAxDvd,EAAK2a,UAAU5S,SAAS0V,EAAU,KAAOtO,IAAuBnP,EAAK2a,UAAU5S,SAAS0V,EAAU,KAAOtO,GAAYoO,YAAW,GAetG,mBAAtCvd,EAAKwa,wBAAwB3W,QAC/B7D,EAAKic,aAAejc,EAAKwa,wBAAwBjZ,OAET,kBAAtCvB,EAAKwa,wBAAwB3W,OAC/B7D,EAAK4d,kBAAkB5d,EAAKwa,wBAAwBjZ,MAAO,OAEnB,qBAAtCvB,EAAKwa,wBAAwB3W,OAC/B7D,EAAK4d,kBAAkB5d,EAAKwa,wBAAwBjZ,MAAO,YAI9D,IAKT6Y,GAAA3gB,UAAAoO,UAAA,SAAUvJ,GAERjE,KAAKsgB,UAAU5S,SAASzJ,GAAK0J,mBAG/BoS,GAAA3gB,UAAAokB,mBAAA,SAAmBvf,EAAUnE,GAC3BE,KAAKwN,UAAUvJ,OAETwf,EAAWzjB,KAAKsgB,UAAU5S,SAASzJ,GAAKiD,MAC9C,GAAgB,IAAZuc,GAA8B,MAAZA,EACpBzjB,KAAK0jB,eAAiB,OACjB,KACC3O,EAAYjV,EAAKmE,IAAIhD,OAAM,SAAWqQ,GAE1C,OAAOA,EAAErN,IAAIwL,SAASgU,KAExBzjB,KAAK0jB,eAAiB,GACtB1jB,KAAK0jB,eAAiB3O,IAK1BgL,GAAA3gB,UAAAukB,mBAAA,SAAmB1f,GACjBjE,KAAK4jB,oBAAsB3f,EAAIgQ,MAGjC8L,GAAA3gB,UAAAykB,iBAAA,SAAiB5f,GACfjE,KAAK8jB,uBAAuB7f,EAAIgQ,MAAQ,MAE1C8L,GAAA3gB,UAAA2kB,mBAAA,SAAmB9f,EAAUnD,GAC3Bd,KAAK8jB,uBAAuB7f,EAAIgQ,MAAMU,OAAO7T,EAAO,GACA,GAAhDd,KAAK8jB,uBAAuB7f,EAAIgQ,MAAMvT,SACxCV,KAAK8jB,uBAAuB7f,EAAIgQ,MAAQ,OAG5C8L,GAAA3gB,UAAAkkB,qBAAA,SAAqBrf,EAAUuF,GAKP,MAAlBA,EAAM6X,SACRrhB,KAAK8jB,uBAAuBta,EAAMyK,MAAQhQ,EAAIoL,KAEC,MAA3CrP,KAAK8jB,uBAAuBta,EAAMyK,QACpCjU,KAAK8jB,uBAAuBta,EAAMyK,MAAQ,IAE5CjU,KAAK8jB,uBAAuBta,EAAMyK,MAAM3T,KAAK2D,EAAIoL,MAGR,MAAvCrP,KAAKsgB,UAAU5S,SAASlE,EAAMyK,QAChCjU,KAAKsgB,UAAU5S,SAASlE,EAAMyK,MAAMiP,WAAW,MAC/CljB,KAAKwN,UAAUhE,EAAMyK,QAIzB8L,GAAA3gB,UAAAmkB,kBAAA,SAAkB/Z,EAAY9J,GAE5B,GADAa,QAAQC,IAAI,iBAAkBgJ,EAAO9J,EAAM8J,EAAM9I,QACrC,UAARhB,GAAkC,MAAd8J,EAAMyK,KAC5B,IAAK,IAAMwO,KAAKziB,KAAKigB,YAAYnE,OAC3B9b,KAAKigB,YAAYnE,OAAO2G,GAAGxO,MAAQzK,EAAMyK,OAC3CjU,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAS2J,GAAI,GAC5CziB,KAAKsgB,UAAU0D,cAAcxa,EAAMyK,MACnC1T,QAAQC,IAAI,UAAWgJ,EAAY,KAAG,IAAKiZ,EAAGjZ,IAKpD,GAAY,UAAR9J,GAAkC,MAAd8J,EAAMyK,MAA+B,EAAfzK,EAAM9I,OAElD,IAAK,IAAM+hB,KADXliB,QAAQC,IAAIgJ,EAAM9I,OAAQ,MACVV,KAAKigB,YAAYnE,OAC/B,IAAK,IAAMmI,KAAKza,EACVxJ,KAAKigB,YAAYnE,OAAO2G,GAAGxO,MAAQzK,EAAMya,KAC3CjkB,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAS2J,GAAI,GAC5CziB,KAAKsgB,UAAU0D,cAAcxa,EAAMya,IACnC1jB,QAAQC,IAAI,yBAA0BgJ,EAAMya,GAAI,OAAQxB,EAAGjZ,IAMnE,GAAY,OAAR9J,EAEF,GAAmB,MAAf8J,EAAM0a,MACR,IAAK,IAAMzB,KAAKziB,KAAKigB,YAAYnE,OAC3B9b,KAAKigB,YAAYnE,OAAO2G,GAAGxO,MAAQzK,EAAM0a,QAC3ClkB,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAS2J,GAAK,EAAG,EAAGjZ,GACnDxJ,KAAKugB,WAAW,SAKpB,GAAsB,iBAAlB,EAEF,IAAK,IAAMlT,KAAK7D,EACd,IAAK,IAAMiZ,KAAKziB,KAAKigB,YAAYnE,OACf,MAAZtS,EAAM6D,IAA+B,MAAjB7D,EAAM6D,GAAG4G,MAAgBjU,KAAKigB,YAAYnE,OAAO2G,GAAGxO,MAAQzK,EAAM6D,GAAG6W,QAC3FlkB,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAS2J,GAAK,EAAG,EAAGjZ,EAAM6D,IACzDrN,KAAKugB,WAAW,KAY9BR,GAAA3gB,UAAA+kB,YAAA,SAAY3a,EAAY1I,GAKtB,GAJAP,QAAQC,IAAIgJ,EAAO,SAAU1I,EAAO,UACO,MAAvCd,KAAKsgB,UAAU5S,SAASlE,EAAMyK,OAChCjU,KAAKokB,kBAAkBlkB,KAAK,CAAEsJ,MAAKA,EAAEia,SAAUzjB,KAAKsgB,UAAU5S,SAASlE,EAAMyK,MAAM/M,MAAOmd,QAASrkB,KAAKsgB,UAAUpZ,QAE7F,MAAnBsC,EAAM8a,WAA8C,EAAzB9a,EAAM8a,UAAU5jB,OAAY,KACrD6jB,EAAU,EACd,IAAK,IAAMtU,KAAKzG,EAAM8a,UAEpB,GAAI9a,EAAM8a,UAAUrU,GAAGuU,QAAQlR,YAActT,KAAKsgB,UAAU5S,SAASlE,EAAMyK,MAAM/M,MAAMoM,WAErFiR,IAGAvkB,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAShY,EAAQgY,SAASyL,IAAM,EAAG/a,EAAM8a,UAAUrU,GAAGzG,OACrFxJ,KAAKugB,WAAW,QAGhB,IAAK,IAAMkC,KAAKziB,KAAKigB,YAAYnE,OAC3B9b,KAAKigB,YAAYnE,OAAO2G,GAAGxO,MAAQzK,EAAM8a,UAAUrU,GAAGzG,MAAMyK,OAC9DjU,KAAKigB,YAAYnE,OAAOnH,OAAOmE,SAAS2J,GAAI,GAC5CziB,KAAKsgB,UAAU0D,cAAcxa,EAAM8a,UAAUrU,GAAGzG,MAAMyK,SAYlE8L,GAAA3gB,UAAAmhB,WAAA,SAAWkE,GAAX,IAAA9e,EAAA3F,KAaE,IAAK,IAAMiQ,UAbF,IAAAwU,IAAAA,EAAA,GASS,GAAdA,IACFzkB,KAAKsgB,UAAYtgB,KAAK0kB,YAAYC,MAAM,KAG1B3kB,KAAKigB,YAAYnE,OAC/B,GAA2D,MAAvD9b,KAAKsgB,UAAU5S,SAAS1N,KAAKigB,YAAYnE,OAAO7L,IAAa,KACzD2U,EAAqB,GACrBC,EAAyB,GAM/B,GALwC,MAApC7kB,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAC7B0d,EAActkB,KAAKN,KAAKigB,YAAYnE,OAAO7L,GAAG/I,OAE9C0d,EAActkB,KAAK,IAEkB,QAAnCN,KAAKigB,YAAYnE,OAAO7L,GAAGvQ,KAG7B,GAFAM,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAQjU,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAElC,MAAvClH,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAO7L,GAAGoR,SAAkB,CAC9F,IAAK,IAAMyD,KAAM9kB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAEE,MAAvDjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAM6Q,KAElD9kB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAM6Q,GAAInD,SAAW,GAIZ,MAAnD3hB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,QAC5CjU,KAAK+iB,UAAU/iB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAQjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAMvT,aAI7C,MAAnDV,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,QAC5CjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,MAAM0N,SAAW,GAKjE,GAAuC,YAAnC3hB,KAAKigB,YAAYnE,OAAO7L,GAAGvQ,MAA6D,MAAvCM,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAO7L,GAAGoR,SAC7H,GAAwC,MAApCrhB,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAAiB0d,EAActkB,KAAK,SACjE,GAAsC,MAAlCN,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAa,KACpC8gB,EAAc,GACpB,IAAK,IAAMxjB,KAAKvB,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAED,MAApCjE,KAAKigB,YAAYnE,OAAO7L,GAAG/I,OAAiBlH,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAAMuI,SAASzP,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAI1C,GAAG8N,KAC1H0V,EAAOzkB,MAAK,GACLykB,EAAOzkB,MAAK,GAGvBskB,EAActkB,KAAKykB,GAMzB,GAA8C,MAA1C/kB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,aAAuE,EAAhDhlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAYtkB,OAC3F,IAAK,IAAM2M,KAAKrN,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAEgB,MAArDhlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGqI,UAC5C1V,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGqI,QAAU,gBAEA,YAAlD1V,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWC,UAEkB,SAAlDnlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CjlB,KAAKsgB,UAAU8E,cAAcplB,KAAKqlB,gBAEkB,gBAAlDrlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CjlB,KAAKsgB,UAAU8E,cAAcplB,KAAKslB,cAEkB,WAAlDtlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWK,QAAQvlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGnG,QAEhC,aAAlDlH,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWM,UAAUxlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGnG,QAElC,OAAlDlH,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWO,IAAIzlB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGnG,QAE5B,OAAlDlH,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWQ,IAAI1lB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGnG,QAE5B,aAAlDlH,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAG4X,MAC5CJ,EAAkBvkB,KAAK4kB,MAAAA,WAAWS,UAAU3lB,KAAKigB,YAAYnE,OAAO7L,GAAG+U,YAAY3X,GAAGnG,QAO5F,GAAuC,YAAnClH,KAAKigB,YAAYnE,OAAO7L,GAAGvQ,MAA6D,MAAvCM,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAO7L,GAAGoR,SAAkB,KAC3IuE,GAAc,EAIlB,IAAK,IAAMC,KAAK7lB,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAEvC2hB,IADsC,MAApC5lB,KAAKigB,YAAYnE,OAAO7L,GAAG/I,QAAiBlH,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAAMuI,SAASzP,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAI4hB,GAAGxW,MAI5HrP,KAAKsgB,UAAUwF,WAAW9lB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,KAAO,KAAO4R,EAAG,IAAIhgB,MAAAA,YAAY+f,EAAQf,SAiBhG7kB,KAAKsgB,UAAUwF,WAAW9lB,KAAKigB,YAAYnE,OAAO7L,GAAGgE,KAAM,IAAIpO,MAAAA,YAAY,CAAEqB,MAAO0d,EAAc,GAAImB,SAAU/lB,KAAKigB,YAAYnE,OAAO7L,GAAG8V,UAAYlB,IAIzJ,GAAuC,gBAAnC7kB,KAAKigB,YAAYnE,OAAO7L,GAAGvQ,MAAiE,MAAvCM,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAO7L,GAAGoR,SACjI,IAAK,IAAM2E,KAAMhmB,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAEF,MAApCjE,KAAKigB,YAAYnE,OAAO7L,GAAG/I,OAA8D,iBAArClH,KAAKigB,YAAYnE,OAAO7L,GAAQ,QAAsG,GAArFjQ,KAAKigB,YAAYnE,OAAO7L,GAAG/I,MAAM+H,QAAQjP,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAI+hB,GAAI3W,MAEnLrP,KAAKsjB,qBAAqBtjB,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAI+hB,GAAKhmB,KAAKigB,YAAYnE,OAAO7L,IAIrD,gBAAnCjQ,KAAKigB,YAAYnE,OAAO7L,GAAGvQ,MAAkE,MAAvCM,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAO7L,GAAGoR,UAG1F,MAApCrhB,KAAKigB,YAAYnE,OAAO7L,GAAG/I,OAE7BlH,KAAKsjB,qBAAqBtjB,KAAKigB,YAAYnE,OAAO7L,GAAGhM,IAAI,GAAIjE,KAAKigB,YAAYnE,OAAO7L,IAc7Fd,WAAU,WAERxJ,EAAKsgB,UAAW,EACqB,MAAjCtgB,EAAKsa,YAAYiG,eACnBvgB,EAAKsa,YAAYiG,cAAe,IAGjC,KAILnG,GAAA3gB,UAAA+mB,kBAAA,WAAA,IAAAxgB,EAAA3F,KACEA,KAAKsgB,UAAU3e,IAAI,YAAYmM,aAAa/E,UAAS,SAClDqd,GACiB,KAAZA,GACFzgB,EAAK2a,UAAU3e,IAAI,QAAQyjB,cAAc,CAACF,MAAAA,WAAWC,SAAUD,MAAAA,WAAWS,UAAU,KACpFhgB,EAAK0gB,WAAa,6CAElB1gB,EAAK2a,UAAU3e,IAAI,QAAQyjB,cAAcF,MAAAA,WAAWC,UAEtDxf,EAAK2a,UAAU3e,IAAI,QAAQ2kB,4BAMjCvG,GAAA3gB,UAAAimB,eAAA,SAAeV,OACP4B,EAAO5B,EAAMjX,SAAS8Y,SAAStf,MAC/Buf,EAAc9B,EAAMjX,SAASgZ,gBAAgBxf,MACnD,OAAmB,MAAfuf,GAAsC,IAAfA,GACzB9B,EAAMjX,SAASgZ,gBAAgBC,UAAU,CAAExB,UAAU,IAC9C,CAAEA,UAAU,IAEjBoB,GAAQE,GACV9B,EAAMjX,SAASgZ,gBAAgBC,UAAU,CAAEC,OAAO,IAC3C,CAAEA,OAAO,SAFlB,GAOF7G,GAAA3gB,UAAAynB,cAAA,SAAcC,OACNC,EAAkBD,EAAQ5f,MAEhC,OADsB,8CACC8f,KAAKD,IAAoBA,EAAmB,CAAEE,cAAc,GAAS,MAE9FlH,GAAA3gB,UAAAkmB,aAAA,SAAaX,GAEX,IAAK,IAAMpjB,KAAKojB,EACd,GAAqB,gBAAjBA,EAAMpjB,GAAG7B,MAAkD,MAAxBilB,EAAMpjB,GAAGyjB,aAAkD,MAA3BL,EAAMpjB,GAAGyjB,YAAY,IAA8C,gBAAhCL,EAAMpjB,GAAGyjB,YAAY,GAAGC,MAAwE,MAA9CjlB,KAAK8jB,uBAAuBa,EAAMpjB,GAAG0S,MAG/L,OADAjU,KAAKsgB,UAAU5S,SAASiX,EAAM1Q,MAAM0S,UAAU,CAAErB,cAAc,IACvD,CAAEA,cAAc,IAsB7BvF,GAAA3gB,UAAA8nB,gBAAA,SAAgBJ,OAERK,EAAK,CAAC,kBACZ,OAAO,IAAIC,KAAAA,WAAU,SAACC,GACpBlY,WAAU,eACF3I,GAAyC,IAA/B2gB,EAAGlY,QAAQ6X,EAAQ5f,OAAiB,CAAEogB,cAAc,GAAS,KAC7ED,EAASxS,KAAKrO,GACd6gB,EAASE,YACR,QAIPxH,GAAA3gB,UAAAooB,SAAA,SAAS1nB,GAEP,OAAOE,KAAKsgB,UAAU3e,IAAI,SAAS8lB,SAAS,YAAc,oBACxDznB,KAAKsgB,UAAU3e,IAAI,SAAS8lB,SAAS,WAAa,2BAChDznB,KAAKsgB,UAAU3e,IAAI,SAAS8lB,SAAS,gBAAkB,sCAAwC,IAGrG1H,GAAA3gB,UAAAsoB,iBAAA,WACE,OAAO1nB,KAAKsgB,UAAU3e,IAAI,YAAY8lB,SAAS,YAAc,qFAC3DznB,KAAKsgB,UAAU3e,IAAI,YAAY8lB,SAAS,gBAAkB,sFAAwF,IAGtJ1H,GAAA3gB,UAAAkT,SAAA,SAAShQ,GAAT,IAAAqD,EAAA3F,KACEA,KAAKsC,KAAOA,MACNqlB,EAAmB,GACzB,IAAK,IAAM1Z,KAAKjO,KAAKsgB,UAAU5S,SAAU,CACvC1N,KAAKsgB,UAAU5S,SAASO,GAAGuE,oBAIrBjR,EAAI0M,EAAE+T,MAAM,MAElB,IAAK,IAAMzO,KAAKvT,KAAKigB,YAAYnE,OAAQ,CAqBvC,GApBuC,QAAnC9b,KAAKigB,YAAYnE,OAAOvI,GAAG7T,MAAyD,MAAvCM,KAAKigB,YAAYnE,OAAOvI,GAAG8N,UAAuE,MAAnDrhB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,OACjF,MAAnDjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,OAA6E,GAA5DjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM0N,YAQvGiG,EAAa,IACbxmB,eAAiBpB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM7S,eACvEwmB,EAAM3T,KAAOjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMA,KAC7D2T,EAAMC,KAAO7nB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM4T,KAC7DD,EAAMloB,KAAOM,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMvU,KAC7DkoB,EAAM7nB,KAAOC,KAAKigB,YAAYnE,OAAOvI,GAAGxT,KACxC6nB,EAAM1F,OAASliB,KAAKigB,YAAYnE,OAAOvI,GAAG2O,OAC1C0F,EAAME,QAAU9nB,KAAKigB,YAAYnE,OAAOvI,GAAGuU,QAC3C9nB,KAAKsgB,UAAU5S,SAAS1N,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMiP,WAAW0E,IAGjC,QAAnC5nB,KAAKigB,YAAYnE,OAAOvI,GAAG7T,MAAyD,MAAvCM,KAAKigB,YAAYnE,OAAOvI,GAAG8N,UAA2D,GAAvCrhB,KAAKigB,YAAYnE,OAAOvI,GAAG8N,SAAkB,KACrI0G,EAAgB,GACtB,IAAK,IAAMrH,KAAK1gB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAO,KASvD2T,EARkD,MAAtD5nB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,IAA6E,GAA/D1gB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,GAAGiB,YAQ7GiG,EAAa,IACbxmB,eAAiBpB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,GAAGtf,eAC1EwmB,EAAM3T,KAAOjU,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,GAAGzM,KAChE2T,EAAMC,KAAO7nB,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,GAAGmH,KAChED,EAAMloB,KAAOM,KAAKshB,UAAUthB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMyM,GAAGhhB,KAChEkoB,EAAM7nB,KAAOC,KAAKigB,YAAYnE,OAAOvI,GAAGxT,KACxC6nB,EAAM1F,OAASliB,KAAKigB,YAAYnE,OAAOvI,GAAG2O,OAC1C0F,EAAME,QAAU9nB,KAAKigB,YAAYnE,OAAOvI,GAAGuU,QAC3CC,EAASznB,KAAKsnB,IAGhB5nB,KAAKsgB,UAAU5S,SAAS1N,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAMiP,WAAW6E,IAkBxE,GAfuC,gBAAnC/nB,KAAKigB,YAAYnE,OAAOvI,GAAG7T,OACM,MAA/BM,KAAK8jB,wBAAkG,MAAhE9jB,KAAK8jB,uBAAuB9jB,KAAKigB,YAAYnE,OAAOvI,GAAGU,OAA2D,MAA1CjU,KAAKigB,YAAYnE,OAAOvI,GAAGyR,YAE5IhlB,KAAKsgB,UAAU5S,SAAS1N,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM0S,UAAU,CAAExB,SAAU,OAI/EnlB,KAAKsgB,UAAU5S,SAAS1N,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM0S,UAAU,CAAExB,UAAU,IAI7ElX,GAAKjO,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAA0B,MAAlB0T,EAAY1Z,KACtD0Z,EAAY1Z,GAAKjO,KAAK8jB,uBAAuB9jB,KAAKigB,YAAYnE,OAAOvI,GAAGU,QAG7D,EAAX1S,EAAEb,QAAca,EAAE,IAAMvB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAQjU,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAQhG,GAAwC,YAAnCjO,KAAKigB,YAAYnE,OAAOvI,GAAG7T,MAA6D,MAAvCM,KAAKigB,YAAYnE,OAAOvI,GAAG8N,UAEzI,GAApCrhB,KAAKsgB,UAAU5S,SAASO,GAAG/G,MAC7B,IAAK,IAAM8T,KAAKhb,KAAKigB,YAAYnE,OAAOvI,GAAGtP,IACrCjE,KAAKigB,YAAYnE,OAAOvI,GAAGtP,IAAI+W,GAAG3L,KAAO9N,EAAE,KACO,MAAhDomB,EAAY3nB,KAAKigB,YAAYnE,OAAOvI,GAAGU,QACzC0T,EAAY3nB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAQ,IAEjD0T,EAAY3nB,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAAM3T,KAAKiB,EAAE,KAOxD0M,GAAKjO,KAAKigB,YAAYnE,OAAOvI,GAAGU,MAA0B,MAAlB0T,EAAY1Z,KACtD0Z,EAAY1Z,GAAKjO,KAAKsgB,UAAU5S,SAASO,GAAG/G,QAUlD,GAAIlH,KAAKsgB,UAAU0H,MAGjB,GAAiC,MAA7BhoB,KAAKigB,YAAYje,UAAoBhC,KAAKigB,YAAYgI,OAAQ,CAChEjoB,KAAKmI,SAAU,MACT9E,EAAYrD,KAAKigB,YAAYgI,OAASjoB,KAAKigB,YAAYje,SACvDO,EAAc,GACpBA,EAAOzC,KAAOE,KAAKsgB,UAAUpZ,MAC7BlH,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAKigB,YAAYtT,SAAUpK,GAAQwG,UAAS,SAACjH,OACzE0E,EAEiB,YADrBA,EAAS1E,GACEsW,SACTzS,EAAKye,kBAAkBlkB,KAAK,CAAEsJ,MAAO,aAAcia,SAAUjd,EAAO4R,OAAQiM,QAAS7d,IACrFb,EAAK2a,UAAU4H,QACfviB,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAcxE,EAAKsa,YAAYkI,kBAGJ,MAAjCxiB,EAAKsa,YAAYmI,cAAyD,IAAjCziB,EAAKsa,YAAYmI,cAAuD,KAAjCziB,EAAKsa,YAAYmI,aACnGziB,EAAKN,OAAO8R,SAAS,CAACxR,EAAKsa,YAAYmI,eAEvCziB,EAAKwC,SAAU,GAGE,SAAjB3B,EAAO4R,SACTzS,EAAKye,kBAAkBlkB,KAAK,CAAEsJ,MAAO,aAAcia,SAAUjd,EAAO4R,OAAQiM,QAAS7d,IACrFb,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM0G,MAKX,SAAE7D,GAEDgD,EAAKF,UAAUuE,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVpK,KAAM,CAAEqK,aAAc,uCAExBxE,EAAKye,kBAAkBlkB,KAAK,CAAEsJ,MAAO,wBAAyBia,SAAU,cAAeY,QAAS1e,EAAK2a,UAAUpZ,QAC/GvB,EAAKwC,SAAU,SAIjBnI,KAAKokB,kBAAkBlkB,KAAK,CAAEsJ,MAAO,aAAcia,SAAU,kBAAmBY,QAASrkB,KAAKsgB,UAAUpZ,aAI1GlH,KAAKqoB,+BAKDtI,GAAA3gB,UAAAipB,4BAAR,eACQC,EAAmCtoB,KAAK2gB,WAAWlP,cAAcC,cACrE,oBAGFqH,OAAOwP,OAAO,CACZ7R,IAAK1W,KAAKwoB,aAAaF,GACvB7R,KAAM,EACNgS,SAAU,YAIN1I,GAAA3gB,UAAAopB,aAAR,SAAqBE,GAEnB,OAAOA,EAAUC,wBAAwBjS,IAAMqC,OAAO6P,QADlC,IAItB7I,GAAA3gB,UAAAypB,gBAAA,SAAgB7f,GACdhJ,KAAK8oB,kBAAoB9f,EACzBzI,QAAQC,IAAI,QAASwI,IAEvB+W,GAAA3gB,UAAA2pB,aAAA,SAAa/f,GACXhJ,KAAKgpB,aAAehgB,EAAMigB,OAC1B1oB,QAAQC,IAAI,oBAAqBwI,IAEnC+W,GAAA3gB,UAAA8pB,YAAA,aAGAnJ,GAAA3gB,UAAA+pB,aAAA,aAGApJ,GAAA3gB,UAAAgqB,gBAAA,kCAtgCDhM,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,eACVC,SAAA,+h/BAZOG,MAAAA,mBAEAte,kBAGoB2e,SAAAA,mBAEpBJ,OAAAA,cAR2DK,GAAAA,iDAiBjEE,GAAAA,oCAKAA,GAAAA,gCAKAA,GAAAA,iCAgCAD,GAAAA,UA09BH+B,IAp/BE,SAAAA,GAAoB2E,EAAiCzf,EAAiCQ,EAAgCJ,EAAwBsb,GAA1H3gB,KAAA0kB,YAAAA,EAAiC1kB,KAAAiF,YAAAA,EAAiCjF,KAAAyF,UAAAA,EAAgCzF,KAAAqF,OAAAA,EAAwBrF,KAAA2gB,WAAAA,EAM9I3gB,KAAAqmB,WAAa,yBACbrmB,KAAAsC,KAAY,GACZtC,KAAAimB,UAAW,EACXjmB,KAAAmI,SAAU,EACVnI,KAAAqgB,qBAAsB,EACtBrgB,KAAAigB,YAAmB,GACnBjgB,KAAAmgB,wBAA+B,GAC/BngB,KAAA0jB,eAAsB,GACtB1jB,KAAA8jB,uBAA8B,GAC9B9jB,KAAAshB,UAAiB,GACjBthB,KAAA+iB,UAAiB,GACjB/iB,KAAA4jB,oBAA2B,GAC3B5jB,KAAA4hB,aAAoB,GAIpB5hB,KAAAgH,MAAsB,UACtBhH,KAAAiH,KAAY,gBACZjH,KAAAkH,MAAQ,GACRlH,KAAAmH,YAAc,GACJnH,KAAAokB,kBAAoB,IAAIzf,GAAAA,aAMlC3E,KAAA8oB,kBAAyB,GACzB9oB,KAAAgpB,aAAoB,gDCdrBK,GAAAA,SAAQpqB,KAAA,CAAC,CACNqqB,QAAS,CACLC,KAAAA,WACAC,QAAAA,iBACAC,MAAAA,eACAC,KAAAA,cACAC,SAAAA,eACAC,SAAAA,sBACAC,SAAAA,eACAC,SAAAA,qBACAC,SAAAA,gBACAC,SAAAA,sBACAC,SAAAA,cACAC,SAAAA,kBACAC,SAAAA,eACAC,SAAAA,iBACAC,SAAAA,oBACAC,SAAAA,gBACAC,SAAAA,iBACAC,SAAAA,mBACAC,SAAAA,kBACAC,SAAAA,cACAC,SAAAA,eACAC,SAAAA,cACAC,SAAAA,cACAC,SAAAA,oBACAC,SAAAA,mBACAC,SAAAA,qBACAC,SAAAA,yBACAC,SAAAA,eACAC,SAAAA,gBACAC,SAAAA,gBACAC,SAAAA,iBACAC,SAAAA,gBACAC,SAAAA,qBACAC,SAAAA,kBACAC,SAAAA,cACAC,SAAAA,eACAC,SAAAA,cACAC,SAAAA,iBACAC,SAAAA,iBACAC,SAAAA,cACAC,OAAAA,aACAC,UAAAA,qBAIyBC,IA/CjC,SAAAA,MCpDA,IAAAC,wBAWE9hB,OAAAC,eACI6hB,GAAA9sB,UAAA,UAAO,KADX,SACY4B,GACVhB,KAAKgB,GAAK,GAAQ,gBAClBhB,KAAKgB,GAAKhB,KAAKwF,UAAUuW,+BAA+B,iCAAmC/a,EAAK,gDAKlGkrB,GAAA9sB,UAAAwO,SAAA,kCAhBDwP,GAAAA,UAASne,KAAA,CAAC,CACToe,SAAU,oBACVC,SAAA,oOAJOO,gBAAAA,kDAUNI,GAAAA,SAWHiO,IALE,SAAAA,GAAmB1mB,GAAAxF,KAAAwF,UAAAA,ECjBrB,IAAA2mB,oCAiBC9C,GAAAA,SAAQpqB,KAAA,CAAC,CACNmtB,aAAc,CAACpnB,iBAAkByQ,cAAe6F,YAAa4Q,uBAAwBhS,YAAanJ,UAAW9G,kBAAmB8V,mBAChIsM,QAAS,CACLC,OAAAA,aAEAL,mBACAM,MAAAA,YAAaC,MAAAA,oBACbC,OAAAA,aACAC,UAAAA,aAAcC,YAAAA,eACdC,gBAAAA,oBAIJC,QAAS,CAAEC,GAAAA,wBACXxD,QAAS,CAACtkB,iBAAkB+a,mBAE5BgN,UAAW,CAAC5tB,YACZ6tB,gBAAiB,CAACvX,cAAe6F,YAAapB,YAAanJ,UAAW9G,uBAG1EkiB,IApBA,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n  @Output() onLiblistingChange = new EventEmitter<any>();\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    // console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  } @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log('s', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            // console.log('t', this.search_settingsval.textsearch);\n          }\n        }\n      }\n\n    }, 1000);\n\n\n  }\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n\n\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    this.oldlimitrange.push({\n      skip: this.limitcondval.skip,\n      limit: this.limitcondval.limit,\n      pagecount: this.limitcondval.pagecount\n    });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput, 'asi', data, value);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos', autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) { }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n        this.loading = true;\n        const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n        const source: any = {};\n        source.data = this.formGroup.value;\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n\n        this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value });\n\n      }\n    } else {\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}