{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/service/observableservice.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/directive/phone-formating.directive.ts","node_modules/tslib/tslib.es6.js","ng://listing-angular7/lib/pipes/language-translet.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secret","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","postDataApi","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","ObservableserviceService","setmultilingualData","subject","next","getmultilingualData","asObservable","setconvertToLanguage","subject1","getconvertToLanguage","setapiUrl","apiUrlsubject","getapiUrl","Subject","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","observableService","_this","selectedItem","myControl","FormControl","staticTooltip","delete","edit","preview","changeStatus","keepPagination","startDate111","Date","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","allSearchCond","searchbuttonval","searchBarFlag","searchBarToolTip","searchBarFlagVal","recordFoundFlag","recordFoundData","color","mode","value","bufferValue","previewFlug","selectsearch","newpagingcountFlag","initiateSearch","minDate","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","languagedataset","paginationtypeFlag","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","buttonSearchData","dataSource","MatTableDataSource","modelChanged","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","txtQueryChanged","limitChangrd","pages","status","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","pageChangeValue","pageCountArray","lastpageCountArray","openFromComponent","SnackbarComponent","duration","errormessage","paging","pagecount","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","basecondition","textSearch","i","toString","toLowerCase","$regex","buttonsearch","bs","k","bt","$or","search_str","sort","datasearch","textsearch","buttonSearch","date_search_source_countval","jwttokenval","results","Object","defineProperty","convertToLanguage","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","newcurrentpagingVal","Array","Math","ceil","limit","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","paginationtype","paginationType","setTimeout","recordfoundflag","recordfounddata","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","addlanguagedataEndpoint","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","clickEvent","autocompletefunction","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","counter","onFieldChange","query","onFieldChangeforlimit","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","replace","ff","tt","columnDef","header","tooltip","cell","row","eval","objlength","this_1","header_tooltip_array","indexOf","displayedcols","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","from","Set","data_list","createData","SelectionModel","expandedElement","sl","search","ats","name","datesearch","$lte","start_date","$gte","end_date","ind","parseInt","values","CustomButtonListen","action","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","autoSearchVal","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","SearchBarToggle","flag","el","tagName","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","getTime","format","label","condition","unix","m","tv","conditionobj","assign","searchcondition","selectSearch","statusval","multipleFlag","maxpagecount","Number","allpaginationpostData","totalresults","containerid","document","getElementById","scrollIntoView","behavior","addautosearchdata","remove","splice","autocompletechangedetected","autoselval","filterval","resetautocomp","autosearchfunction","resArr","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","msg","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","window","clickurl","checkedlist","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","headerData","preview_header","hasOwnProperty","tempdata","p","objk","entries","autoFocus","maxHeight","managestatus","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","tempautosearch","$and","tempsortvalue","count","gettypeof","openBottomSheetForSearch","ModalForButtomSearch","disableClose","searchFlag","j","selectedData","clearButtonSearchChips","i_1","artistxpPreview","singleData","posts_id_object","restlt","Component","selector","template","animations","trigger","state","minHeight","transition","animate","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","DeleteNotesModal","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","handleDrop","preventDefault","dt","dataTransfer","filechooserFlag","target","reader","FileReader","onload","imageUrl","readAsDataURL","loaded","loadfile","this_2","filearray","uploadfile","uploaded","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","responseFunction","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","chooseChipItem","searchByItem","bnottoRef","reset","searchVal","allButtonData","searchByKeyword","loading_flag","apiService","slice","matAutosearchData","errmsg","matChipData","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","customlistenbuttons","externalDataVal","formGroup","createForm","getFormVal","onFormFieldChange","fieldval","fromval","buttonval","CustomFlagFields","customButtonVal","customfield","CustomFlagFieldsRemove","unique","array","propertyName","a","GeneratePassword","PasswordVal","makeid","patchValue","onchoosefiles","filename","click","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","floor","random","externalDataFunction","fieldVal","externalDataEditFunction","ival","valind","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","bind","cancel","triggerevents","multiple","croppedimagearray","aspectratio","imagecroppedratiolabel","croppedImage","deletefile","imagefields","trackByFn","trackByFnMultiple","trackByFnMulti","keyupVal","fi","fname","sfname","ev","flds","checkValue","fieldloading","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","apideleteurl","deletesinglefile","deletesinglefilefrommultiple","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","resetformdata","autocompletevisible","autoelements","querySelectorAll","elem","display","filterautocomplete","autoquerychanged","fieldval_1","filerfielddata","reloadautocomplete","currentautocomplete","autocompleteresetmatchip","removechipsingle","removedData","autocompletefiledvalue","autocompletedata","removedDataSet","removechipmultiple","removedIndex","removeControl","z","after","timepickerchange","checkchange","dependent","vc","condval","initialize","temcontrolarr","temvalidationrule","phonenumberValue","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","setphonenumberValidate","numberFormatFlag","chooseimg","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","base64","size","baseurl","tfilearr","imgfields","findInvalidControls","valid","apiUrl","successmessage","formDirective","resetForm","redirectpath","vflag","scrollToFirstInvalidControl","invalid","name_1","firstInvalidControl","scroll","getTopOffset","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","singleimageCropped","ci","multipleimageCropped","fldval","imageLoaded","cropperReady","loadImageFailed","opensingleimagecrop","imgUrl","getImagetoDataURL","dataUrl","opensingleimagecropformultiple","callback","xhr","XMLHttpRequest","responseType","send","FormGroupDirective","formatFlag","autosearchpostflag","filechoosersingleTypeFlag","filechoosermultipleTypeFlag","singleImgFormData","imgValue","timeChanged","autores","groups","showautoprogressbar","formvalue","search_field","concat","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","PhoneFormatingDirective","onModelChange","onInputChange","keydownBackspace","backspace","newVal","substring","ngControl","valueAccessor","writeValue","Directive","NgControl","HostListener","__values","o","Symbol","iterator","call","done","LanguageTransletPipe","_b","tslib_1.__values","languageDataSet","_c","en","convertToLanguageCode","dataSet","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","NgxMaterialTimepickerModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads';\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,\n    private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secret')) {\n      this.secretkey = this.cookieService.get('secret');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) { this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: data.token\n      })\n    };\n    // console.log('');\n    // console.log('endpoint');\n    // console.log(endpoint);\n    // console.log('httpOptions');\n    // console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      // console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    // console.log('');\n    // console.log('endpoint');\n    // console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch(link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secret = this.secretkey;\n    source.token = token;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      // console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  \n  postSearch1(link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    // console.log('');\n    // console.log('endpoint');\n    // console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = { source, id: data._id };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      // console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, ids: data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data: { ids: data, val } };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      // console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n  \n  postDataApi(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        // Authorization: data.token\n      })\n    };\n    // console.log('');\n    // console.log('endpoint');\n    // console.log(endpoint);\n    // console.log('httpOptions');\n    // console.log(httpOptions);\n    const result = this._http.post(endpoint, JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject,Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObservableserviceService {\n  private subject = new Subject<any>();\n  private subject1 = new Subject<any>();\n  private apiUrlsubject = new Subject<any>();\n\n  constructor() { }\n  setmultilingualData(data){\n    // console.log(\"observablee data\",data);\n    this.subject.next(data);\n  }\n  getmultilingualData(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  setconvertToLanguage(data){\n    // console.log(\"setconvertToLanguage data\",data);\n    this.subject1.next(data);\n  }\n  getconvertToLanguage():Observable<any>{\n    return this.subject1.asObservable();\n\n  }\n  setapiUrl(data){\n    console.log(\"observablee data\",data);\n    this.apiUrlsubject.next(data);\n  }\n  getapiUrl():Observable<any>{\n    return this.apiUrlsubject.asObservable();\n\n  }\n}\n\n\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ObservableserviceService } from \"./service/observableservice.service\";\nimport { animate, state, style, transition, trigger } from '@angular/animations';\ndeclare var $: any;\n\nimport * as momentImported from 'moment';\n\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { THIS_EXPR, ThrowStmt } from '@angular/compiler/src/output/output_ast';\n\n\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\n\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n  public selectedItem: any = 0;\n  public pageChangeValue: Number;\n  myControl = new FormControl();\n  public staticTooltip: any = {\n    \"delete\": \"Delete\",\n    \"edit\": \"Edit\",\n    \"preview\": \"Preview\",\n    \"changeStatus\": \"Change Status\",\n  }\n  public newcurrentpagingVal: any;\n  public startDate: any;\n  public keepPagination: any = 0;\n  public startDate111: any = new Date(1622358050000)\n  public endDate: any;\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n  public allSearchCond: any = [];\n  public searchbuttonval: any = [];\n  public searchBarFlag: boolean = false;\n  public searchBarToolTip: any = 'Open Search Bar';\n  public searchBarFlagVal: boolean = false;\n  public recordFoundFlag: boolean = false;\n  public recordFoundData: any = '';\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n  public newpagingcountFlag: boolean = true;\n  public initiateSearch: boolean = false;\n  public minDate: any = \"\";\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n  public convertToLanguage: any;\n  searchstrsarr: any = [];\n  public oldlimitrange: any = [];\n  public languagedataset: any = [];\n  @Input()\n  set languageDataset(value: any) {\n    this.languagedataset = value;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set setconvertToLanguage(value: any) {\n    this.convertToLanguage = value;\n    // console.log(\"developer test\",this.convertToLanguage)\n\n    if (typeof this.convertToLanguage != 'undefined' && this.convertToLanguage != null && this.convertToLanguage != '') {\n      this.observableService.setconvertToLanguage(this.convertToLanguage);\n    }\n  }\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    // console.log('search_settingsval++++++', this.search_settingsval)\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    if (this.limitcondval.pagecount == null) {\n      this.limitcondval.pagecount = 1;\n\n    }\n    this.newcurrentpagingVal = this.limitcondval.pagecount;\n    this.pageChangeValue = this.limitcondval.pagecount;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  public pageCountArray: any;\n  public firstpageCountArray: any;\n  public lastpageCountArray: any;\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    this.pageCountArray = new Array(Math.ceil(date_search_source_countval / this.limitcondval.limit));\n    this.lastpageCountArray = Math.ceil(date_search_source_countval / this.limitcondval.limit);\n    console.log(\"this.pageCountArray\", Math.ceil(date_search_source_countval / this.limitcondval.limit));\n\n\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    // console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  public paginationtype: any;\n  public paginationtypeFlag: boolean = true;\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n\n    this.paginationtype = this.libdataval.paginationType;\n    if (typeof this.libdataval.paginationType == 'undefined' && this.libdataval.paginationType == null) {\n      this.paginationtypeFlag = false;\n    }\n    console.log('libdataval', this.libdataval);\n    console.log('libdataval', this.paginationtype);\n    if (typeof this.libdataval.pages != 'undefined' && this.libdataval.pages != null) {\n      this.pages = this.libdataval.pages;\n    }\n\n    // searchBarFlag\n\n    // console.log(libdataval.searchBarFlagVal)\n\n    if (libdataval.searchBarFlagVal != null && libdataval.searchBarFlagVal != '') {\n      setTimeout(() => {\n        this.searchBarFlagVal = libdataval.searchBarFlagVal;\n      }, 1000);\n    } else {\n      this.searchBarFlag = true;\n    }\n\n\n    if (libdataval.recordfoundflag != null && libdataval.recordfoundflag != '' && libdataval.recordfounddata != null) {\n      setTimeout(() => {\n        this.recordFoundFlag = libdataval.recordfoundflag;\n        this.recordFoundData = libdataval.recordfounddata;\n\n      }, 1000);\n    } else {\n      this.recordFoundFlag = false;\n    }\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n    // console.log(\"this.apiurlval\",this.apiurlval);\n\n    this.observableService.setapiUrl(this.apiurlval + this.libdataval.addlanguagedataEndpoint);\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    // console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n  // search buttons \n  // @Input()\n  // set searchbuttons(val: any) {\n  //   this.searchbuttonval = val\n  //   console.log(this.searchbuttonval, 'customButtonFlagVal')\n  // }\n\n\n  expandedElement: any;\n\n\n\n  stateGroups: string[];\n  public allpaginationpostData: any;\n  stateGroup: Observable<string[]>;\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  public buttonSearchData: any = [];\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  txtQueryChanged: Subject<string> = new Subject<string>();\n  limitChangrd: Subject<string> = new Subject<string>();\n\n  // searchResult$: Observable<SearchResult[]>;\n  // for dropdown pagination\n  public pages: any = [];\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef,\n    public observableService: ObservableserviceService,\n\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n\n\n    // this.txtQueryChanged\n    //         .debounceTime(1000) // wait 1 sec after the last event before emitting last event\n    //         .distinctUntilChanged() // only emit if value is different from previous value\n    //         .subscribe(model => {\n    //           this.txtQuery = model;\n\n    //           // Call your function which calls API or do anything you would like do after a lag of 1 sec\n    //           this.getDataFromAPI(this.txtQuery);\n    //          });\n\n    this.subscriptions[this.subscriptioncount++] = this.txtQueryChanged\n      .pipe(\n        debounceTime(2500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        // this.filterautoval(this.currentautocompleteitem);\n        console.log('pageChangeValue subscribed !! ', this.pageChangeValue, this.pageCountArray.length);\n        if (this.pageChangeValue > this.lastpageCountArray) {\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Sorry!! Page number is out of range, highest range is ' + this.lastpageCountArray }\n          });\n        }\n\n        if (this.pageCountArray.length + 1 > this.pageChangeValue) {\n          this.paging(this.pageChangeValue, '');\n        } else {\n          //page count out of bound \n          this.pageChangeValue = this.limitcondval.pagecount;\n        }\n        console.log(\"first\", this.pageChangeValue, \"+++\", this.pageCountArray.length);\n\n\n      });\n\n\n    this.subscriptions[this.subscriptioncount++] = this.limitChangrd\n      .pipe(\n        debounceTime(2500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        // this.filterautoval(this.currentautocompleteitem);\n        console.log('pageChangeValue subscribed !! ', this.pageChangeValue, this.pageCountArray.length);\n        if (this.pageChangeValue) {\n          this.paging(this.pageChangeValue, '');\n        } else {\n          //page count out of bound \n          this.pageChangeValue = this.limitcondval.pagecount;\n        }\n      });\n\n\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(1000))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(1000),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n          // console.log(\"autocomplete debounceTime(1000)\",this.libdataval.basecondition);\n          if (typeof this.libdataval.basecondition == 'undefined' || this.libdataval.basecondition == null) {\n            this.libdataval.basecondition = {};\n          }\n          const textSearch: any = {};\n          // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n          // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n          // console.log(this.search_settingsval.search, 'search_settingsval.search');\n          for (const i in this.tsearch) {\n            // console.log('all search this.tsearch', this.tsearch[i]);\n            if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n              textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n            }\n          }\n          const buttonsearch: any = {};\n          for (let bs in this.buttonSearchData) {\n            for (const k in this.buttonSearchData[bs].value) {\n              const bt: any = {};\n              bt[this.buttonSearchData[bs].field] = this.buttonSearchData[bs].value[k].val.toString().toLowerCase();\n              if (buttonsearch.$or == null) { buttonsearch.$or = []; }\n              // console.log(bt,'bt',bs,'bs')\n              buttonsearch.$or.push(bt);\n            }\n          }\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            },\n            allSearchCond: this.allSearchCond,\n            basecondition: this.libdataval.basecondition,\n            datasearch: this.dateSearch_condition,\n            textsearch: textSearch,\n            buttonSearch: buttonsearch,\n            selectsearch: this.selectSearch_condition\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              // autocomplete searching snakbar\n\n              // this._snackBar.openFromComponent(SnackbarComponent, {\n              //   duration: 2000,\n              //   data: { errormessage: 'New Search of data loaded ' }\n              // });\n            } else {\n              this.currentautosearcharr = [];\n\n              // this._snackBar.openFromComponent(SnackbarComponent, {\n              //   duration: 6000,\n              //   data: { errormessage: 'No such search record found !!' }\n              // });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n  status: boolean = false;\n  clickEvent() {\n    this.status = !this.status;\n  }\n\n  autocompletefunction(data: any) {\n    this.currentautosearcharr = [];\n  }\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n\n        }\n      }\n    }\n  }\n  counter(i: number) {\n    return new Array(i);\n  }\n\n  onFieldChange(query: string) {\n\n    // console.log('query', query, this.pageCountArray.length);\n    // if (query <= this.pageCountArray.length) {\n    if (this.pageCountArray.length + 1 > query) {\n      this.txtQueryChanged.next(query);\n      // console.log('with in bound ');\n    }\n    else {\n      //page count out of bound \n\n    }\n    // } else {\n    //   this._snackBar.openFromComponent(SnackbarComponent, {\n    //     duration: 6000,\n    //     data: { errormessage: 'Sorry!! Page number is out of range, highest range is ' + this.lastpageCountArray }\n    //   });\n    //   this.pageChangeValue = this.pageCountArray.length;\n    // }\n  }\n\n  onFieldChangeforlimit(query: any) {\n\n    // console.log('query', query, this.pageCountArray.length);\n    // if (query <= this.pageCountArray.length) {\n    if (query < 100) {\n      this.limitChangrd.next(query);\n      // console.log('with in bound ');\n    }\n    else {\n      //page count out of bound \n\n    }\n\n\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n    // console.log(\"this.languagedataset\",this.languagedataset);\n    this.observableService.setmultilingualData(this.languagedataset);\n    // addlanguagedataEndpoint\n\n    // console.log(\"this.apiurlval\", this.apiurlval);\n\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, tooltip: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n\n      // header tooltip array\n      if (this.libdataval.header_tooltip_array != null && typeof (this.libdataval.header_tooltip_array) != 'undefined') {\n        for (const b in this.libdataval.header_tooltip_array) {\n          if (b == tt.tooltip) { tt.tooltip = this.libdataval.header_tooltip_array[b]; }\n        }\n        // console.log(tt.tooltip, 'tt.tooltip =====+++++')\n      }\n\n\n\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n\n\n\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    this.expandedElement = this.dataSource;\n\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null && this.search_settingsval.selectsearch[sl].value != '') {\n            // this.selectSearch(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0])\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // selectSearch_condition\n            this.initiateSearch = true;\n            this.selectSearch_condition[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log(this.initiateSearch, 'initiateSearch select')\n            // console.log(this.search_settingsval, 'ss+++++=====++++', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n\n            // console.log(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0],'????? new selectSearch_condition',this.selectSearch_condition)\n\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null && this.search_settingsval.textsearch[sl].value != '') {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            this.initiateSearch = true;\n            // console.log(this.initiateSearch, 'initiateSearch text')\n          }\n        }\n      }\n\n\n      if (this.search_settingsval.search != null) {\n        for (let ats in this.search_settingsval.search) {\n          if (this.search_settingsval.search[ats].value != null && this.search_settingsval.search[ats].value != '' && this.search_settingsval.search[ats].value.length > 0) {\n            this.initiateSearch = true;\n\n            if (this.autosearch[this.search_settingsval.search[ats].field] == null) {\n              this.autosearch[this.search_settingsval.search[ats].field] = [];\n            }\n\n            for (let k in this.search_settingsval.search[ats].value) {\n              // console.log(this.search_settingsval.search[ats].value,'>>=======')\n              this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value[k].val, name: this.search_settingsval.search[ats].value[k].name });\n            }\n          }\n        }\n      }\n\n\n      // dateSearch_condition\n      // console.log(\"this.search_settingsval.datesearch++\", this.search_settingsval.datesearch);\n      if (this.search_settingsval.datesearch != null && this.search_settingsval.datesearch[0].value != null && this.search_settingsval.datesearch[0].value != '') {\n        this.initiateSearch = true;\n\n        //   this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte - 86399000;\n        //   this.search_settingsval.datesearch[0].value.$gte= this.search_settingsval.datesearch[0].value.$gte + 10000;\n        //   // this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte;\n\n        //   this.start_date = moment(new Date(this.search_settingsval.datesearch[0].value.$gte)).format(\"YYYY-MM-DD\").toString();\n        //   this.end_date = moment(new Date(this.search_settingsval.datesearch[0].value.$lte)).format(\"YYYY-MM-DD\").toString();\n\n        // //  this.startDate=moment(new Date(this.search_settingsval.datesearch[0].value.$gte)).add(1, 'days').format(\"YYYY-MM-DD\").toString();\n        // //  this.endDate=moment(new Date(this.search_settingsval.datesearch[0].value.$lte)).add(1, 'days').format(\"YYYY-MM-DD\").toString();\n        //  this.startDate=new Date(this.search_settingsval.datesearch[0].value.$gte);\n        //  this.endDate=new Date(this.search_settingsval.datesearch[0].value.$lte);\n\n        //   console.log(\"this.startDate\",this.startDate);\n        //   this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte + 86399000;\n        //   // this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte;\n        //   console.log(\"start date\",this.search_settingsval.datesearch[0].value.$gte);\n        //   console.log(\"end date\",this.search_settingsval.datesearch[0].value.$lte);\n\n        //   this.dateSearch_condition[this.search_settingsval.datesearch[0].field] = this.search_settingsval.datesearch[0].value;\n\n        this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte - 86399000;\n\n        this.start_date = new Date(this.search_settingsval.datesearch[0].value.$gte);\n        this.end_date = new Date(this.search_settingsval.datesearch[0].value.$lte);\n\n        this.search_settingsval.datesearch[0].value.$lte = this.search_settingsval.datesearch[0].value.$lte + 86399000;\n\n        this.dateSearch_condition[this.search_settingsval.datesearch[0].field] = this.search_settingsval.datesearch[0].value;\n      }\n      // console.log(this.search_settingsval, 'search_settingsval', this.dateSearch_condition)\n\n\n\n      if (this.search_settingsval.buttonsearch != null) {\n        // console.log(this.search_settingsval.buttonsearch, 'this.search_settingsval.buttonsearch')\n        for (let i in this.search_settingsval.buttonsearch) {\n          let ind: any = 0;\n          ind = parseInt(i);\n          if (this.search_settingsval.buttonsearch[i].values != null && this.search_settingsval.buttonsearch[i].values != '') {\n            this.initiateSearch = true;\n            this.buttonSearchData.push({ field: this.search_settingsval.buttonsearch[i].field, key: ind, value: this.search_settingsval.buttonsearch[i].values })\n          }\n        }\n      }\n\n      if (this.initiateSearch == true) {\n        this.allSearch();\n      }\n    }, 1000);\n  }\n\n\n\n\n  // Custom Filter new\n  CustomButtonListen(val: any) {\n    // allSearchCond\n    // console.log(this.search_settingsval.search, 'this.allSearchCond')\n\n    this.onLiblistingButtonChange.emit(\n      {\n        action: 'customlistenbutton', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, searchdata: this.search_settingsval, buttondata: val, allSearchCond: this.allSearchCond, autoSearchVal: this.autosearch, buttonSearchData: this.buttonSearchData\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n  }\n\n  // Search Bar Toggle\n  SearchBarToggle(flag) {\n    this.onLiblistingButtonChange.emit(\n      {\n        action: 'searchbar', flag: flag\n      }\n    )\n    switch (flag) {\n      case true:\n        this.searchBarFlag = false;\n        this.searchBarToolTip = 'Open Search Bar';\n        break;\n      case false:\n        this.searchBarFlag = true;\n        this.searchBarToolTip = 'Close Search Bar';\n        break;\n    }\n  }\n\n\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n\n\n\n  dateSearch(val: any, item: any) {\n    // console.log(\"this.start_date\",new Date(this.start_date).getTime()+86400000);\n    this.minDate = moment(new Date(this.start_date).getTime()).format('YYYY-MM-DD')\n    // console.log(\"this.start_date\",this.minDate);\n\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    // if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n    //   this.start_date=this.startDate;\n    //   this.end_date=this.endDate;\n    // }\n\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n          $lte: new Date(this.end_date).getTime() + 86399000,\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime() + 86399000\n        };\n      }\n\n      // console.log(this.dateSearch_condition.created_datetime.$gte,'after + 86399000',this.dateSearch_condition.created_datetime.$lte)\n      // var dt=this.dateSearch_condition.created_datetime.$lte - 86399000;\n      // console.log(this.dateSearch_condition.created_datetime.$gte,'after - 86399000',dt )\n      // console.log(this.dateSearch_condition, 'dateSearch_condition++');\n\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any, multipleFlag: any) {\n    console.log(\"multipleFlag\", this.tsearch[type.field]);\n\n    console.log(value, 'value')\n    console.log(type, 'type')\n    console.log(statusval, 'statusval')\n    // return;\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    // console.log(\"this.searchstrsarr[type.field]\", this.searchstrsarr[type.field]);\n\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    \n    // this.selectSearch_condition = {};\n    if (multipleFlag == 'true') {\n      condition[type.field] = this.tsearch[type.field];;\n      this.selectSearch_condition[type.field] = this.tsearch[type.field];\n    } else {\n      condition[type.field] = value;\n      this.selectSearch_condition[type.field] = value;\n    }\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    console.log(\"this.date_search_sourceval\", this.selectSearch_condition);\n\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any, flag: any) {\n    // const lval: any = this.limitcondval;\n    console.log(this.oldlimitrange, 'this.oldlimitrange');\n    this.selectedItem = val;\n\n\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    this.oldlimitrange.push({\n      skip: this.limitcondval.skip,\n      limit: this.limitcondval.limit,\n      pagecount: this.limitcondval.pagecount\n    });\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      // if(flag!=\"selectpaging\"){\n      //   this.limitcondval.limit = 100;\n\n      // }\n      // this.limitcondval.limit = 100;\n      // this._snackBar.openFromComponent(SnackbarComponent, {\n      //   duration: 2000,\n      //   data: { errormessage: 'You can see maximum 100 records at once !' }\n      // });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n\n    // console.log(\"limit++++\", this.limitcondval.limit);\n\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.paginationtype == 2) {\n        this.limitcondval.pagecount = val;\n      }\n      // console.log(\"val>1 section \", this.limitcondval.pagecount);\n      if (this.limitcondval.pagecount == null) {\n        this.limitcondval.skip = 0;\n      }\n      else {\n        this.limitcondval.pagecount = val;\n        this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n      }\n      // this.limitcondval.pagecount--;\n    }\n    if (val <= 1) {\n      if (this.paginationtype == 2) {\n        this.limitcondval.skip = 0;\n        this.limitcondval.pagecount = 1;\n      }\n    }\n\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n    // console.log('this.limitcondval, in paging ', this.limitcondval);\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n    this.allpaginationpostData = source;\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.newpagingcountFlag = false;\n    this.loading = true;\n\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      if (this.limitcondval.pagecount > 5 && this.paginationtype == 2) {\n        this.newcurrentpagingVal = this.limitcondval.pagecount - 5;\n      }\n      // if (this.limitcondval.pagecount > 5 && this.paginationtype == 2 && this.pageCountArray.length - this.limitcondval.pagecount < 10) {\n      //   this.newcurrentpagingVal = this.limitcondval.pagecount - 4 ;\n      //   console.log('in last range area ...', this.newcurrentpagingVal);\n      // }\n      if (this.limitcondval.pagecount <= 5 && this.paginationtype == 2) {\n        this.newcurrentpagingVal = 1;\n      }\n      // console.log(\"paging success\", this.pageCountArray.length);\n      // console.log(\"paging success\", this.limitcondval.pagecount);\n      // console.log('in common  range area ...', this.newcurrentpagingVal);\n\n\n      this.result = res;\n      // console.log(this.result,'res');\n      this.newpagingcountFlag = true;\n\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval, results: this.result.results.res, totalresults: this.result });\n\n        // if (this.libdataval.footersettings != null) {pageChangeValue\n        //   this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n        // }\n\n        if (this.pageChangeValue != this.limitcondval.pagecount) {\n          this.pageChangeValue = this.limitcondval.pagecount;\n        }\n        setTimeout(() => {\n          // console.log(\"this.libdataval.containerid\",this.libdataval.containerid);\n          if (typeof this.libdataval.containerid != 'undefined') {\n            document.getElementById(this.libdataval.containerid).scrollIntoView({ behavior: \"smooth\" });\n          }\n\n        }, 100);\n\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange,this.oldlimitrange[this.oldlimitrange.length-1]);\n        this.limitcondval.skip = this.oldlimitrange[this.oldlimitrange.length - 1].skip;\n        this.limitcondval.pagecount = this.oldlimitrange[this.oldlimitrange.length - 1].pagecount;\n        this.limitcondval.limit = this.oldlimitrange[this.oldlimitrange.length - 1].limit;\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n\n\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n\n\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log('asi', data, value, item, this.autosearch[value]);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    // let dataset: any = [];\n    // dataset.push(data);\n\n    // if (dataset.find((data._id) => test.name === Names) === undefined) {\n    //   this.item.push(item);\n    // }\n\n    // console.log(\"autosearch value before\", this.autosearch, data);\n    // let temparr: any = Array.from(new Set(this.autosearch[value].map((item: any) => item)))\n    const fieldval = data;\n    // console.log(this.autosearch[value].includes(data), \"includes test\", this.autosearch[value]);\n    this.autosearch[value].push(data);\n\n    let resArr = [];\n    this.autosearch[value].filter(function (item) {\n      var i = resArr.findIndex(x => x.val == item.val);\n      if (i <= -1) {\n        resArr.push(item);\n      }\n      return null;\n    });\n    // console.log(resArr);\n    this.autosearch[value] = resArr;\n\n    // console.log(\"temparr value0\", filterval);\n    // console.log(\"autosearch this.autosearch\", this.autosearch);\n\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      // console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    // console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n    this.allSearchCond = [];\n    this.buttonSearchData = [];\n    this.minDate = \"\";\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n\n\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 3000,\n          data: { errormessage: result.msg }\n        });\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        // console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            // console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n\n\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n\n\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      // console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes,\n          rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.keepPagination = 1;\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    // console.log('data1 ++++++++', data1)\n    let data: any;\n    data = data1;\n    const data2: any = [];\n    let headerData: any = {};\n\n    if (this.libdataval.preview_header != null && this.libdataval.preview_header.header != null && this.libdataval.preview_header.header != '') {\n      // console.log('== ++++++++', this.libdataval.preview_header)\n      headerData = this.libdataval.preview_header;\n    }\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res, headerData: headerData }\n    });\n\n  }\n  // parent-bottom-class\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: ['custom-bottomsheet', 'parent-bottom-class'], data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval, totalresults: result });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n\n\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: ['custom-bottomsheet', 'parent-bottom-class'], data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval, totalresults: result });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n\n\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval, totalresults: result });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    console.log(\"sorttable function data\", field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n\n  allSearch() {\n    // console.log(\"hit limitcondval\",this.allpaginationpostData);\n    // console.log(\"hit limitcondval\",this.limitcondval);\n    // console.log('this.keepPagination first',this.keepPagination);\n\n    // return;\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    let autosearch: any = {};\n\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      let tempautosearch: any = {};\n\n      for (const m in this.autosearch[b]) {\n\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (tempautosearch.$or == null) { tempautosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n        // autosearch.$or.push(tv);\n\n        tempautosearch.$or.push(tv);\n\n      }\n      if (autosearch.$and == null) { autosearch.$and = []; }\n      autosearch.$and.push(tempautosearch);\n\n      // autosearch = Object.assign({},tempautosearch,autosearch);\n      let autocount: any;\n      if (Object.keys(autosearch).length == null || typeof Object.keys(autosearch).length == 'undefined') {\n        autocount = 0;\n      } else {\n        autocount = Object.keys(autosearch).length;\n      }\n      // console.log(autocount, 'autosearch.length++++', tempautosearch,Object.keys(autosearch).length,Object.keys(autosearch))\n\n      // autosearch[autocount] = tempautosearch;\n\n    }\n\n\n\n    // console.log('autos qq++', autosearch, this.autosearch);\n\n\n    // button Search Data\n\n    const buttonsearch: any = {};\n    for (let bs in this.buttonSearchData) {\n      for (const k in this.buttonSearchData[bs].value) {\n        const bt: any = {};\n        bt[this.buttonSearchData[bs].field] = this.buttonSearchData[bs].value[k].val.toString().toLowerCase();\n        if (buttonsearch.$or == null) { buttonsearch.$or = []; }\n        // console.log(bt,'bt',bs,'bs')\n        buttonsearch.$or.push(bt);\n      }\n    }\n    // console.log(this.buttonSearchData, 'buttonsearch')\n\n\n    if (typeof (this.limitcondval.pagecount) != 'undefined') {\n      // this.limitcondval.pagecount = this.limitcondval.pagecount;\n      // this.limitcondval.skip = this.limitcondval.skip;\n      //  console.log(\"typeof(this.limitcondval.pagecount)!='undefined'\");\n\n      this.oldlimitrange.push(this.limitcondval);\n      if (this.keepPagination != 1) {\n        // console.log(\"this.keepPagination!=1\");\n\n        this.limitcondval.skip = 0;\n        this.limitcondval.pagecount = 1;\n        // source.condition.skip=0;\n        // this.keepPagination=0;\n      }\n\n    } else {\n      this.limitcondval.pagecount = 1;\n      this.limitcondval.skip = 0;\n      this.oldlimitrange.push(this.limitcondval);\n    }\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, buttonsearch, this.selectSearch_condition, this.libdataval.basecondition);\n\n    // console.log(this.selectSearch_condition, 'selectSearch_condition')\n\n    this.allSearchCond = conditionobj;\n    // console.warn(\"this.allpaginationpostData\",this.allpaginationpostData);\n    if (this.keepPagination != 1) {\n      this.limitcondval.skip = 0;\n      // source.condition.skip=0;\n      this.limitcondval.pagecount = 1;\n      // this.keepPagination=0;\n    }\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    if (typeof this.allpaginationpostData != 'undefined') {\n      // console.warn(\"conditionobj\", conditionobj);\n\n      source = this.allpaginationpostData;\n      let tempsortvalue: any = {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      }\n      source.sort = tempsortvalue;\n\n      if (typeof conditionobj != 'undefined' && conditionobj != null) {\n        source.searchcondition = conditionobj;\n        //  source.condition.skip=0;\n        if (this.keepPagination != 1) {\n          this.limitcondval.skip = 0;\n          // source.condition.skip=0;\n          this.limitcondval.pagecount = 1;\n          // this.keepPagination=0;\n        }\n      }\n\n    } else {\n\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n    }\n\n\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n\n      if (this.keepPagination != 1) {\n        // console.log(\"this.keepPagination!=1 last part\");\n        source.condition.skip = 0;\n      }\n      if (this.keepPagination == 1) {\n        this.keepPagination = 0;\n\n\n      }\n\n      // console.warn(\"source\",source);\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(\"count log++\", this.newcurrentpagingVal);\n        // console.log(\"pageCountArray log++\", this.pageCountArray);\n\n        this.pageCountArray = new Array(Math.ceil(this.date_search_source_countval / this.limitcondval.limit));\n        this.lastpageCountArray = Math.ceil(this.date_search_source_countval / this.limitcondval.limit);\n        this.pageChangeValue = this.limitcondval.pagecount;\n        this.newcurrentpagingVal = this.limitcondval.pagecount\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit(\n            {\n              action: 'search',\n              limitdata: this.limitcondval,\n              searchcondition: conditionobj,\n              sortdata: this.sortdataval,\n              res: result.results.res.length,\n              totalresults: result,\n              allSearchCond: this.allSearchCond,\n              autoSearchVal: this.autosearch,\n              searchdata: this.search_settingsval,\n              selecteddata: this.selection.selected\n            });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          this.onLiblistingChange.emit({\n            action: 'search',\n            limitdata: this.limitcondval,\n            searchcondition: conditionobj,\n            sortdata: this.sortdataval,\n            res: result.results.res.length,\n            totalresults: result,\n            allSearchCond: this.allSearchCond,\n            autoSearchVal: this.autosearch,\n            searchdata: this.search_settingsval,\n            selecteddata: this.selection.selected,\n            flag: 'no_record'\n          });\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        console.log(\"count log++\", this.newcurrentpagingVal);\n\n        result = res;\n        this.date_search_source_countval = (result.count);\n        this.pageCountArray = new Array(Math.ceil(this.date_search_source_countval / this.limitcondval.limit));\n        this.lastpageCountArray = Math.ceil(this.date_search_source_countval / this.limitcondval.limit);\n        this.pageChangeValue = this.limitcondval.pagecount;\n        this.newcurrentpagingVal = this.limitcondval.pagecount\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n    this.initiateSearch = false;\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n  // open Bottom Sheet For Search\n  openBottomSheetForSearch(data: any, index) {\n    var count = 1;\n    // console.log(data, 'openBottomSheetForSearch', index)\n    const bs = this.dialog.open(ModalForButtomSearch, { panelClass: 'button-search-modal', data: { items: data } });\n    bs.disableClose = true;\n    bs.afterClosed().subscribe(result => {\n      // console.log(result, 'result++++==== data', data)\n      if (result != null && result.flag == 'yes') {\n        count = 1;\n        var searchFlag = 0;\n\n        // console.log(result, 'result++++====??', index)\n        // console.log(this.buttonSearchData, 'buttonSearchData 1')\n\n        if (this.buttonSearchData.length > 0) {\n          searchFlag = 1;\n          for (let i in this.buttonSearchData) {\n            if (this.buttonSearchData[i].field == result.items.field) {\n              count = 2;\n              searchFlag = 1;\n\n              // console.log('true +++ count', count)\n              for (let j in result.selectedData) {\n                this.buttonSearchData[i].value.push(result.selectedData[j]);\n              }\n              if (searchFlag == 1) {\n                // console.log(searchFlag, 'searchFlag 2')\n                this.allSearch();\n              }\n              return;\n            } else {\n              count = 0\n            }\n          }\n          // console.log(count, 'count else check')\n\n          // console.log(this.buttonSearchData, 'buttonSearchData 2')\n\n          if (count == 0) {\n            this.buttonSearchData.push({ value: result.selectedData, key: index, field: result.items.field });\n            searchFlag = 1;\n          }\n        } else {\n          this.buttonSearchData.push({ value: result.selectedData, key: index, field: result.items.field });\n          searchFlag = 1;\n        }\n\n        // console.log(searchFlag, 'searchFlag 1')\n\n        if (searchFlag == 1) {\n          // console.log(searchFlag, 'searchFlag 2')\n          this.allSearch();\n        }\n\n\n      }\n    })\n  }\n\n\n  // clear Button Search Chips  data\n  clearButtonSearchChips(bs, i, item, j) {\n    // console.log(bs, i, item, j, 'bs,i,item,j');\n    this.buttonSearchData[i].value.splice(j, 1);\n    // console.log(this.buttonSearchData, 'buttonSearchData splice')\n\n    // this.search_settingsval.buttonsearch[bs.key].values\n    for (let i in this.search_settingsval.buttonsearch) {\n      if (this.search_settingsval.buttonsearch[i].field == bs.field) {\n        // console.log('', this.search_settingsval.buttonsearch[i])\n        this.search_settingsval.buttonsearch[i].value.push(item);\n      }\n    }\n\n    // console.log(this.search_settingsval.buttonsearch,'this.search_settingsval.buttonsearch')\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n  public filearray: any = [];\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer, public dialog: MatDialog) {\n    console.log('lib data in modal ', this.data);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const dialogRef = this.dialog.open(DeleteNotesModal, {\n      height: 'auto',\n      panelClass: ['custom-modalbox', 'delete-notes-modal'],\n      disableClose: true\n      // data: {\n      //   isconfirmation: false,\n      //   notes: true, apiurl: this.apiurlval,\n      //   notedata: this.libdataval.notes, rowdata: val,\n      //   jwttokenval: this.jwttokenval,\n      //   listdata: result.res,\n      //   _snackBar: this._snackBar\n      // }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log(\"result\",result);\n      if (typeof result != 'undefined' && typeof (result.response) != \"undefined\" && result.response != \"\") {\n        const source: any = {\n\n          id: this.data.rowdata._id,\n          index\n          // note: this.data.notesval,\n          // user: this.data.notedata.user,\n        };\n        this.data.loading1 = index;\n        this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          // console.log(result, 'add notes');\n          if (result.status == 'success') {\n            // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n            // this.data.notesval = '';\n            this.data.listdata.splice(index, 1);\n            this.data.loading1 = null;\n          }\n          // console.log('count',result);\n          // this.dataSource.paginator = this.paginator;\n          // this.dataSource.sort = this.sort;\n\n        });\n      }\n    });\n\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n  handleDrop(e) {\n    console.log(\"handelDrop\", e);\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n\n    const dt = e.dataTransfer == null ? e : e.dataTransfer;\n    const filechooserFlag = e.dataTransfer == null ? 1 : 0;\n    // console.log(\"dt dataaa++\", dt);\n    // console.log(\"dt filechooserFlag++\", filechooserFlag);\n    const files = dt.files == null ? dt.target.files : dt.files;\n    console.log(\"handelDrop files\", files);\n\n    // return;\n\n    // console.log(\"files count\", files.length);\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      console.log('files++', file);\n\n      // for (const g in this.formdataval.fields) {\n        // if (this.formdataval.fields[g].type == 'file' && (this.formdataval.fields[g].name == e.target.id.replace('drop', '') || this.formdataval.fields[g].name == e.target.id.replace('filechoosersingle', '') || this.formdataval.fields[g].name == e.target.id.replace('filechoosermultiple', ''))) {\n          // console.log(\"if part\", e.target.id, this.formdataval.fields[g]);\n          // console.log(this.singleImgFormData,'singleImgFormData')\n\n          // console.log('file details', this.formdataval.fields[g], g);\n\n          // if (this.formdataval.fields[g].multiple == null) {\n          //   // this.deletefile(va)\n\n          //   // console.log(files[i], 'files[i]=======single')\n\n          //   //image preview base/64\n          //   // console.log(\" before 2nd if part of type checking\", files);\n\n          //   if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n          //     //Show image preview\n          //     // console.log(\"2nd if part of type checking\");\n          //     let reader = new FileReader();\n          //     reader.onload = (event: any) => {\n          //       this.formdataval.fields[g].imageUrl = event.target.result;\n          //       this.formdataval.fields[g].croppedimagearray = [];\n\n          //       // console.log(event.target.result, 'event.target.result=========')\n\n          //       if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].imagecroppedratiolabel != null && this.formdataval.fields[g].aspectratio.length > 0) {\n          //         for (let c in this.formdataval.fields[g].aspectratio) {\n          //           this.formdataval.fields[g].croppedImage = [];\n          //           this.formdataval.fields[g].imagecroppedratiolabel = this.formdataval.fields[g].imagecroppedratiolabel;\n\n          //           // this.formdataval.fields[g].aspectratio[c] = Number(this.formdataval.fields[g].aspectratio[c]).toFixed(2);\n          //         }\n          //       }\n          //       // console.log(this.formdataval.fields[g], 'files+++++')\n          //     };\n          //     reader.readAsDataURL(files[i]);\n          //   }\n\n          //   this.formdataval.fields[g].loaded = 0;\n          //   this.formdataval.fields[g].loadfile = 1;\n          //   if (filechooserFlag == 0) {\n          //     if (this.filearray[e.target.id.replace('drop', '')] != null) {\n          //       for (const n in this.formdataval.fields) {\n          //         if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n          //           this.deletefile(this.formdataval.fields[n], 1);\n          //           setTimeout(() => {\n          //             this.filearray[e.target.id.replace('drop', '')] = files[i];\n          //           }, 0);\n          //         }\n          //       }\n          //       // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++==')\n          //     } else {\n          //       this.filearray[e.target.id.replace('drop', '')] = files[i];\n          //     }\n          //   } else if (filechooserFlag == 1) {\n          //     if (this.filearray[e.target.id.replace('filechoosersingle', '')] != null) {\n          //       for (const n in this.formdataval.fields) {\n          //         if (this.formdataval.fields[n].name == e.target.id.replace('filechoosersingle', '')) {\n          //           this.deletefile(this.formdataval.fields[n], 1);\n          //           setTimeout(() => {\n          //             this.filearray[e.target.id.replace('filechoosersingle', '')] = files[i];\n          //           }, 0);\n          //         }\n          //       }\n          //       // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++==')\n          //     } else {\n          //       this.filearray[e.target.id.replace('filechoosersingle', '')] = files[i];\n          //     }\n          //   }\n\n          // } else {\n\n            // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++ >M')\n\n            // console.log(files[i], 'files[i]======= multiple')\n\n            if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n              //Show image preview\n              // console.log(\"++++++if part\", files);\n              let reader = new FileReader();\n              reader.onload = (event: any) => {\n                files[i].imageUrl = event.target.result;\n                // if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].imagecroppedratiolabel != null && this.formdataval.fields[g].aspectratio.length > 0) {\n                //   // console.log(this.formdataval.fields[g].aspectratio, 'ratio+=====>')\n\n                //   files[i].croppedImage = [];\n                //   files[i].aspectratio = this.formdataval.fields[g].aspectratio;\n                //   files[i].imagecroppedratiolabel = this.formdataval.fields[g].imagecroppedratiolabel;\n                //   files[i].croppedimagearray = [];\n                //   for (let c in files[i].aspectratio) {\n                //     if (files[i].aspectratio != null && files[i].aspectratio[c] != null && typeof (files[i].aspectratio[c]) != 'undefined') {\n                //       // console.log(files[i].aspectratio[c], 'files[i].aspectratio[c]')\n                //       // files[i].aspectratio[c] = Number(files[i].aspectratio[c]).toFixed(2);\n                //     }\n                //   }\n                //   // console.log(files[i], 'files[i]==>')\n                // }\n                // console.log(this.formdataval.fields[g], 'imageUrl+++++')\n              };\n              reader.readAsDataURL(files[i]);\n            }\n\n            files[i].loaded = 0;\n            files[i].loadfile = 1;\n\n\n            // if (this.formdataval.fields[g] != null && this.formdataval.fields[g].imagefields != null && this.formdataval.fields[g].imagefields.length > 0) {\n\n            //   files[i].imagefields = this.formdataval.fields[g].imagefields;\n\n            // }\n            //for drag and drop files\n            if (filechooserFlag == 0) {\n              if (this.filearray[e.target.id.replace('drop', '')] == null) {\n                this.filearray[e.target.id.replace('drop', '')] = [];\n              }\n              this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            }\n\n            //for choose files\n            if (filechooserFlag == 1) {\n              if (this.filearray[e.target.id.replace('filechoosermultiple', '')] == null) {\n                this.filearray[e.target.id.replace('filechoosermultiple', '')] = [];\n              }\n              this.filearray[e.target.id.replace('filechoosermultiple', '')].push(files[i]);\n            }\n\n          // }\n        // }\n      // }\n      console.log(\"files\",files);\n      \n    }\n    return false;\n  }\n  uploadfile(val: any) {\n    console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    console.log(\"this.filearray\",this.filearray);\n    // return;\n    \n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    // let temploader: any = this.fieldloading[val.name];\n    // temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file[0].name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.loadfile = 1;\n          val.loaded = null;\n          file.fileservername = val.prefix + file[0].name.split(\" \").join(\"\");\n          // if(val.imagefields.length > 0){\n          //   file.imagefields = val.imagefields\n          // }\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    console.log(\"file\",file);\n    \n    reader.readAsArrayBuffer(file[0]);\n  }\n}\n\n// delete notes confirmation modal\n@Component({\n  selector: 'deletenotesConfirmationModal',\n  templateUrl: 'deletenotesConfirmationModal.html',\n})\nexport class DeleteNotesModal {\n  constructor(public dialogRef: MatDialogRef<DeleteNotesModal>, @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  responseFunction(value: any) {\n    this.dialogRef.close({ response: value });\n  }\n\n\n}\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n\n@Component({\n  selector: 'button-search-modal',\n  templateUrl: 'button-search-modal.html',\n})\nexport class ModalForButtomSearch {\n\n  public buttonSearchData: any = {};\n  public selectedData: any = [];\n  public searchVal: any = '';\n  public allButtonData: any = [];\n  public loading_flag: boolean = false;\n  public errmsg: any = '';\n  public matChipData: any = []\n    ;\n  public matAutosearchData: any = [];\n\n\n\n  constructor(private bnottoRef: MatDialogRef<ModalForButtomSearch>, @Inject(MAT_DIALOG_DATA) public data: any, public apiService: ApiService) {\n    // console.log(\"bottom-sheet-search\", data);\n    this.buttonSearchData = {};\n    this.buttonSearchData = data;\n    this.allButtonData = data.items.value;\n  }\n\n  chooseChipItem(data, i) {\n    // console.log(data, '??data')\n    this.selectedData.push(data);\n    this.buttonSearchData.items.value.splice(i, 1);\n  }\n\n  // submit \n  searchByItem() {\n    // console.log(this.selectedData)\n    this.data.flag = 'yes';\n    this.data.selectedData = this.selectedData;\n    // this.searchVal = '';\n    // this.buttonSearchData.items.value = [];\n    this.bnottoRef.close(this.data);\n  }\n\n  remove(val, i) {\n    this.selectedData.splice(i, 1);\n    this.buttonSearchData.items.value.push(val);\n  }\n\n  reset() {\n    this.searchVal = '';\n    this.buttonSearchData.items.value = [];\n    this.buttonSearchData.items.value = this.allButtonData;\n\n  }\n\n  searchByKeyword(value) {\n\n    if (this.searchVal != null && this.searchVal != '') {\n      this.loading_flag = true;\n      let link: any = this.buttonSearchData.items.serversearchdata.url + this.buttonSearchData.items.serversearchdata.endpoint;\n      let data: any = {\n        \"search_str\": value,\n        \"limit\": 50\n      }\n\n      this.apiService.postSearch1(link, data).subscribe(res => {\n        // console.log(data)\n        let result: any = res;\n\n        if (result.status == 'success') {\n          // this.buttonSearchData.items.value = [];\n\n          this.loading_flag = false;\n\n          result = result.res.slice(0, 50);\n          // this.buttonSearchData.items.value = result;\n          // console.log(result, 'result', this.loading_flag)\n          this.matAutosearchData = result;\n        }\n      })\n    } else {\n      this.errmsg = \"Please Enter Keywords\";\n    }\n  }\n\n  close() {\n    this.data.flag = 'no';\n    this.bnottoRef.close(this.data);\n\n  }\n\n\n}\n\n\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\nimport { debounceTime } from 'rxjs/operators';\n// import { CKEditorComponent } from \"ng2-ckeditor\";\n\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  // @ViewChild(\"myckeditor\") ckeditor: CKEditorComponent;\n  public formatFlag: boolean = false;\n  autosearchpostflag: boolean = false;\n\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // if (this.formdataval.fields)\n    // console.log(this.formdataval, 'htlmmmmmmm');\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = '';\n\n  public externalDataVal: any = [];\n\n  public customlistenbuttons: any = {};\n\n  @Input()\n  set custombuttons(val: any) {\n    this.customlistenbuttons = val;\n    // console.log(this.customlistenbuttons,'customlistenbuttons form')\n  }\n\n\n  @Input()\n  set externaldatavalue(value: any) {\n    this.externalDataVal = value;\n    // console.log(this.externalDataVal, 'this.externalDataVal')\n  }\n\n  // public ckeConfig:any={};\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  autoquerychanged: Subject<any> = new Subject<any>();\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n\n\n    this.subscriptions[this.subscriptioncount++] = this.autoquerychanged\n      .pipe(\n        debounceTime(1500))\n      .subscribe((autores: any) => {\n        // console.log('sss .. auto search called  .. ', this.formGroup.value);\n        this.autosearchpostflag = true;\n        // this.filterautocomplete(res.val, res.data);\n        let data: any = autores.data;\n        let val: any = autores.val;\n\n        console.log(\"this.formdataval.fields\", this.formdataval.fields, 'this.formdataval.groups', this.formdataval.groups);\n        this.filerfielddata = [];\n\n        // console.log(\"filterautocomplete with server options\", data); \n        data.showautoprogressbar = true;\n        const link: any = this.formdataval.apiUrl + data.endpoint;\n        let source = { \"formvalue\": this.formGroup.value };\n        let searchcondition = {}\n        searchcondition[data.search_field] = this.formGroup.controls[val].value;\n        source['searchcondition'] = searchcondition;\n\n\n\n        // console.log(\"opopopo\", link, searchcondition);\n\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe((res: any) => {\n          // console.log(\"autocomplete searching response\", res);\n          data.showautoprogressbar = false;\n          if (res.status == \"success\") {\n            if (res.res.length == 0) {\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No Records Found!!' }\n              });\n            }\n\n\n            if (res.res.length != 0) {\n              this.filerfielddata = [];\n              this.filerfielddata = res.res;\n              //  concat earlier data with new results as options  \n              if (data.val == null) data.val = [];\n              data.val = data.val.concat(res.res);\n              // console.log('data.val', data.val);\n              // let temparr: any = Array.from(new Set(data.val.map((item: any) => item)))\n              data.val = this.unique(data.val, 'key');\n              // data.val = temparr\n              // console.log(data.val, 'data.val', res.res, data.val.length, 'temparr');\n              // this.autosearchpostflag = false;\n              // res.data = data;\n\n            } else {\n              // snakbar fire\n            }\n\n          } else {\n            // snakbar failure message\n          }\n\n        })\n\n\n\n      });\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n  public filechoosersingleTypeFlag: boolean = false;\n  public filechoosermultipleTypeFlag: boolean = false;\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n  public singleImgFormData: any = [];\n\n  public imgValue: string = '';\n  public numberFormatFlag: boolean = false;\n  public phonenumberValue: any = \"\";\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n  @Output() timeChanged = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = \"\";\n  croppedImage: any = \"\";\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n  // custom listen buttons\n  getFormVal(val) {\n    // console.log(val,'+++++++++====')\n    this.onFormFieldChange.emit({ field: 'formdata', fieldval: 'formdataval', fromval: this.formGroup.value, buttonval: val, loading: this.loading });\n  }\n\n  // CustomFlagFields\n  CustomFlagFields(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'add' });\n  }\n\n  CustomFlagFieldsRemove(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'remove' });\n  }\n\n  unique(array, propertyName) {\n    return array.filter((e, i) => array.findIndex(a => a[propertyName] === e[propertyName]) === i);\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n  }\n\n  onchoosefiles(event: any, filename: any, multipleFlag: any) {\n    // console.log(\"works properly\", multipleFlag);\n    if (typeof multipleFlag == 'undefined') {\n      // console.log(\"if part\");\n      // this.filechoosersingleTypeFlag=true;\n      document.getElementById(\"filechoosersingle\" + filename).click();\n    } else {\n      // console.log(\"else part\", document.getElementById(\"filechooser\"));\n      document.getElementById(\"filechoosermultiple\" + filename).click();\n      // this.filechoosermultipleTypeFlag=true;\n\n    }\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    // console.log(val,'++pass',this.formGroup.value)\n\n    // console.log(this.formGroup.controls[val.name].value,'++???',this.formGroup.controls[val.value])\n\n\n    var passwordFieldData: any = '';\n\n    if (this.formGroup.controls[val.name].value != null && typeof (this.formGroup.controls[val.name].value) != 'undefined' && this.formGroup.controls[val.name].value != '') {\n      passwordFieldData = this.formGroup.controls[val.name].value;\n    } else {\n      passwordFieldData = '';\n    }\n\n\n    // console.log(typeof(this.formGroup.controls[val.name].value),'??',this.formGroup.controls[val.name].value)\n\n\n    if (passwordFieldData != null && passwordFieldData != '' && typeof (passwordFieldData) != 'undefined') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate or Enter Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n  previewGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    if (this.formGroup.controls[val.name].value != null && typeof (this.formGroup.controls[val.name].value) != 'undefined' && this.formGroup.controls[val.name].value != '') {\n      passwordFieldData = this.formGroup.controls[val.name].value;\n    } else {\n      passwordFieldData = '';\n    }\n\n    if (passwordFieldData != null && passwordFieldData != '' && typeof (passwordFieldData) != 'undefined') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate or Enter Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n\n\n  // external Data Function\n  externalDataFunction(value, index) {\n    // this.externalDataVal=[];\n    this.onFormFieldChange.emit({ action: 'externaldata', flag: 'add', fieldVal: value, index: index, externalDataVal: this.externalDataVal });\n    // console.log(value, this.externalDataVal, index, '++')\n  }\n\n  externalDataEditFunction(flag, field, ival, i) {\n\n    // console.log(flag, field, ival, i, 'exter ++++')\n\n    if (flag == 'edit') {\n      this.onFormFieldChange.emit({ action: 'externaldata', flag: 'edit', fieldVal: field, index: ival, valind: i, externalDataVal: this.externalDataVal });\n    }\n\n    if (flag == 'remove') {\n      field.value.splice(i, 1);\n    }\n\n\n  }\n\n\n\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n\n    this.onFormFieldChange.emit({ field: 'formcancel', fromval: this.formGroup.value, loading: this.loading });\n\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n\n\n  handleDrop(e) {\n    // console.log(\"handelDrop\", e)\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n\n    const dt = e.dataTransfer == null ? e : e.dataTransfer;\n    const filechooserFlag = e.dataTransfer == null ? 1 : 0;\n    // console.log(\"dt dataaa++\", dt);\n    // console.log(\"dt filechooserFlag++\", filechooserFlag);\n    const files = dt.files == null ? dt.target.files : dt.files;\n    // console.log(\"files count\", files.length);\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      console.log('files++', file);\n\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && (this.formdataval.fields[g].name == e.target.id.replace('drop', '') || this.formdataval.fields[g].name == e.target.id.replace('filechoosersingle', '') || this.formdataval.fields[g].name == e.target.id.replace('filechoosermultiple', ''))) {\n          console.log(\"if part\", e.target.id, this.formdataval.fields[g]);\n          // console.log(this.singleImgFormData,'singleImgFormData')\n\n          // console.log('file details', this.formdataval.fields[g], g);\n\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n\n            // console.log(files[i], 'files[i]=======single')\n\n            //image preview base/64\n            // console.log(\" before 2nd if part of type checking\", files);\n\n            if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n              //Show image preview\n              // console.log(\"2nd if part of type checking\");\n              let reader = new FileReader();\n              reader.onload = (event: any) => {\n                this.formdataval.fields[g].imageUrl = event.target.result;\n                this.formdataval.fields[g].croppedimagearray = [];\n\n                // console.log(event.target.result, 'event.target.result=========')\n\n                if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].imagecroppedratiolabel != null && this.formdataval.fields[g].aspectratio.length > 0) {\n                  for (let c in this.formdataval.fields[g].aspectratio) {\n                    this.formdataval.fields[g].croppedImage = [];\n                    this.formdataval.fields[g].imagecroppedratiolabel = this.formdataval.fields[g].imagecroppedratiolabel;\n\n                    // this.formdataval.fields[g].aspectratio[c] = Number(this.formdataval.fields[g].aspectratio[c]).toFixed(2);\n                  }\n                }\n                // console.log(this.formdataval.fields[g], 'files+++++')\n              };\n              reader.readAsDataURL(files[i]);\n            }\n\n            this.formdataval.fields[g].loaded = 0;\n            this.formdataval.fields[g].loadfile = 1;\n            if (filechooserFlag == 0) {\n              if (this.filearray[e.target.id.replace('drop', '')] != null) {\n                for (const n in this.formdataval.fields) {\n                  if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                    this.deletefile(this.formdataval.fields[n], 1);\n                    setTimeout(() => {\n                      this.filearray[e.target.id.replace('drop', '')] = files[i];\n                    }, 0);\n                  }\n                }\n                // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++==')\n              } else {\n                this.filearray[e.target.id.replace('drop', '')] = files[i];\n              }\n            } else if (filechooserFlag == 1) {\n              if (this.filearray[e.target.id.replace('filechoosersingle', '')] != null) {\n                for (const n in this.formdataval.fields) {\n                  if (this.formdataval.fields[n].name == e.target.id.replace('filechoosersingle', '')) {\n                    this.deletefile(this.formdataval.fields[n], 1);\n                    setTimeout(() => {\n                      this.filearray[e.target.id.replace('filechoosersingle', '')] = files[i];\n                    }, 0);\n                  }\n                }\n                // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++==')\n              } else {\n                this.filearray[e.target.id.replace('filechoosersingle', '')] = files[i];\n              }\n            }\n\n          } else {\n\n            // console.log(this.formdataval.fields[g], 'this.formdataval.fields[g]++ >M')\n\n            // console.log(files[i], 'files[i]======= multiple')\n\n            if (files[i].type == 'image/png' || files[i].type == 'image/jpg' || files[i].type == 'image/jpeg') {\n              //Show image preview\n              // console.log(\"++++++if part\", files);\n              let reader = new FileReader();\n              reader.onload = (event: any) => {\n                files[i].imageUrl = event.target.result;\n                if (this.formdataval.fields[g].aspectratio != null && this.formdataval.fields[g].imagecroppedratiolabel != null && this.formdataval.fields[g].aspectratio.length > 0) {\n                  // console.log(this.formdataval.fields[g].aspectratio, 'ratio+=====>')\n\n                  files[i].croppedImage = [];\n                  files[i].aspectratio = this.formdataval.fields[g].aspectratio;\n                  files[i].imagecroppedratiolabel = this.formdataval.fields[g].imagecroppedratiolabel;\n                  files[i].croppedimagearray = [];\n                  for (let c in files[i].aspectratio) {\n                    if (files[i].aspectratio != null && files[i].aspectratio[c] != null && typeof (files[i].aspectratio[c]) != 'undefined') {\n                      // console.log(files[i].aspectratio[c], 'files[i].aspectratio[c]')\n                      // files[i].aspectratio[c] = Number(files[i].aspectratio[c]).toFixed(2);\n                    }\n                  }\n                  // console.log(files[i], 'files[i]==>')\n                }\n                // console.log(this.formdataval.fields[g], 'imageUrl+++++')\n              };\n              reader.readAsDataURL(files[i]);\n            }\n\n            files[i].loaded = 0;\n            files[i].loadfile = 1;\n\n\n            if (this.formdataval.fields[g] != null && this.formdataval.fields[g].imagefields != null && this.formdataval.fields[g].imagefields.length > 0) {\n\n              files[i].imagefields = this.formdataval.fields[g].imagefields;\n\n            }\n            //for drag and drop files\n            if (filechooserFlag == 0) {\n              if (this.filearray[e.target.id.replace('drop', '')] == null) {\n                this.filearray[e.target.id.replace('drop', '')] = [];\n              }\n              this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            }\n\n            //for choose files\n            if (filechooserFlag == 1) {\n              if (this.filearray[e.target.id.replace('filechoosermultiple', '')] == null) {\n                this.filearray[e.target.id.replace('filechoosermultiple', '')] = [];\n              }\n              this.filearray[e.target.id.replace('filechoosermultiple', '')].push(files[i]);\n            }\n\n          }\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h)\n  // }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  trackByFnMultiple(index) {\n    return index;\n  }\n\n\n  trackByFnMulti(index) {\n    return index;\n  }\n\n  keyupVal(val, item, fi, ind, data, fname, sfname, ev) {\n    // console.log('this.filearray[fname][fi].flds[ind] in kyupval ', this.filearray[fname][fi].flds[ind]);\n    // console.log(val[fi].imagefields, 'keyupVal', 's', item, fi, ind, data, '---', this.filearray, ',,', fname, sfname, ev.target.value);\n    this.filearray[fname][fi].imagefields[ind]['value'] = ev.target.value;\n    // if (this.filearray[fname][fi].flds == null) {\n    //   this.filearray[fname][fi].flds == [];\n    //   this.filearray[fname][fi].flds[ind] = [];\n    // }\n    if (this.filearray[fname][fi].flds == null || this.filearray[fname][fi].flds[ind] == null) {\n      // console.log('111111111111111111111111111111');\n      if (this.filearray[fname][fi].flds == null) this.filearray[fname][fi].flds = [];\n      this.filearray[fname][fi].flds[ind] = [];\n    }\n    // console.log('this.filearray[fname][fi].flds[ind] before', this.filearray[fname][fi].flds[ind]);\n    this.filearray[fname][fi].flds[ind] = { key: ev.target.name, value: ev.target.value };\n    // console.log('this.filearray[fname][fi].flds[ind] after', this.filearray[fname][fi].flds[ind]);\n    // console.log(sfname, 'sfname', ind, ev.target.value);\n    // console.log('this.filearray');\n    // console.log(this.filearray);\n    // console.log('ddd', fi, ind);\n    // console.log(this.filearray[fname][fi]);\n  }\n\n\n  checkValue(val, item, fi, ind, data, fname, sfname) {\n    // console.log(val, '++')\n\n    // console.log(val[fi].imagefields, 'keyupVal', 's', item, fi, ind, data, '---', this.filearray, ',,', fname, sfname);\n\n    if (this.filearray[fname][fi].flds == null || this.filearray[fname][fi].flds[ind] == null) {\n      // console.log('111111111111111111111111111111');\n      if (this.filearray[fname][fi].flds == null) this.filearray[fname][fi].flds = [];\n      this.filearray[fname][fi].flds[ind] = [];\n    }\n\n    if (this.filearray[fname][fi].flds != null && this.filearray[fname][fi].flds[ind] != null && this.filearray[fname][fi].flds[ind].key != null && this.filearray[fname][fi].flds[ind].key == sfname) {\n      // console.log('2222222222222222222222222 if');\n\n      switch (this.filearray[fname][fi].flds[ind].value) {\n\n        case true:\n          this.filearray[fname][fi].flds[ind].value = false;\n          break;\n        case false:\n          this.filearray[fname][fi].flds[ind].value = true;\n          break;\n      }\n    } else {\n      // console.log('33333333333333333333 else');\n\n      this.filearray[fname][fi].flds[ind] = { key: sfname, value: true };\n    }\n\n    // console.log('this.filearray[fname][fi].flds[ind] before', this.filearray[fname][fi].flds[ind]);\n    // console.log('this.filearray[fname][fi].flds[ind] after', this.filearray[fname][fi].flds[ind]);\n    // console.log('this.filearray');\n    // console.log(this.filearray);\n    // console.log('ddd', fi, ind);\n    // console.log(this.filearray[fname][fi]);\n  }\n\n\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.loadfile = 1;\n          val.loaded = null;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // if(val.imagefields.length > 0){\n          //   file.imagefields = val.imagefields\n          // }\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    console.log(\"filee++\", file);\n\n    reader.readAsArrayBuffer(file);\n  }\n\n\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n    }\n  }\n\n\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      // this.filearray[val.name] = null;\n    }, 3000);\n  }\n\n\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val, 'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    file.loadfile = 1;\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.loaded = null;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n\n\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val++ delete', val, this.filearray[val.name]);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this.filearray[val.name].uploaded = 2;\n    this.filearray[val.name].loadfile = 0;\n\n\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        val.value = {};\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name].uploaded = null;\n        this.filearray[val.name].loadfile = 0;\n        val.loadfile = 0;\n        // console.log(this.filearray[val.name], '????===Delete===?????')\n\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n  deletesinglefile(val: any, flag: any) {\n    // console.log(val, 'val+++ delete', flag)\n    if (flag == 'image/png' || flag == 'image/jpg' || flag == 'image/jpeg') {\n      this.filearray[val.name].loadfile = 0;\n      val.imageUrl = null;\n      val.loadfile = 0;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Deleted !!' }\n      });\n    } else {\n      this.filearray[val.name].loadfile = 0;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Deleted !!' }\n      });\n    }\n  }\n\n\n  deletesinglefilefrommultiple(val: any, field: any = '', index: any) {\n    // console.log(val, field, index, '????+++++')\n    const file: any = this.filearray[val.name][index];\n    file.loadfile = 0;\n    if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n\n    // console.log(this.filearray[val.name], 'this.filearray[val.name]==')\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Deleted !!' }\n    });\n  }\n\n\n\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    // console.log(val, 'val++', index)\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    file.uploaded = 2;\n    // file.loadfile = 0;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        file.loadfile = 0;\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) {\n          file.loadfile = 0;\n          this.filearray[val.name].splice(index, 1);\n        }\n        // console.log(this.filearray[val.name], 'this.filearray[val.name]==')\n\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n            if (this.formfieldrefreshdataval.field == 'resetform') {\n              this.resetformdata();\n            }\n            if (this.formfieldrefreshdataval.field == 'autocompletevisible') {\n              this.autocompletevisible(this.formfieldrefreshdataval);\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  autocompletevisible(val: any) {\n    // console.log('val', val, 'autocompletevisible', 'ng-reflect-autocomplete');\n    let autoelements: any = document.querySelectorAll('.libformclass input[ng-reflect-autocomplete]:not([ng-reflect-autocomplete=\"0\"])');\n    // document.querySelectorAll('.libformclass input[ng-reflect-autocomplete]:not([ng-reflect-autocomplete=\"0\"])')[0].style.display = 'none';\n    // .forEach((div: any) => {\n    //   console.log('got div ', div);\n    //   if (div != null) document.querySelector(div).style.display = 'none';\n\n    // });\n    // console.log('autoelements', autoelements.length, autoelements);\n    for (let i = 0; i <= autoelements.length; i++) {\n      // document.querySelectorAll('.libformclass input[ng-reflect-autocomplete]:not([ng-reflect-autocomplete=\"0\"])')[i].style.display = 'none';\n      let elem: any = document.querySelectorAll('.libformclass input[ng-reflect-autocomplete]:not([ng-reflect-autocomplete=\"0\"])')[i];\n      if (elem != null) {\n        elem.style.display = val.display;\n        // elem.classList.add('hidecls');\n      }\n\n    }\n\n\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', val, data);\n    // return;\n    if (data.endpoint != null) {\n\n      this.autoquerychanged.next({ val: val, data: data });\n      // return\n\n      // this.formdataval.fields[data.name].showautoprogressbar=true;\n    } else {\n      const fieldval = this.formGroup.controls[val].value;\n      if (fieldval == '' || fieldval == null) {\n        this.filerfielddata = [];\n      } else {\n        const filterval = data.val.filter(function (e) {\n          // console.log('e', e, fieldval)\n          return e.val.includes(fieldval);\n        });\n        this.filerfielddata = [];\n        this.filerfielddata = filterval;\n        // console.log('fil', filterval);\n      }\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    // console.log(\"click in autocomplete called\", val);\n\n    this.currentautocomplete = val.name;\n    this.filerfielddata = [];\n  }\n  autocompleteresetmatchip() {\n    // console.log(\"click in autocompleteresetmatchip called\", this.filerfielddata);\n  }\n  // for removing selected vals in autocomplete \n  removechipsingle(val: any, removedData: any) {\n    // console.log(\"val\",val,\" \",removedData);\n\n    this.autocompletefiledvalue[val.name] = null;\n    this.formGroup.controls[val.name].patchValue('');\n    this.inputblur(val.name);\n    this.onFormFieldChange.emit({ val, fieldval: this.formGroup.controls[val.name].value, fromval: this.formGroup.value, autocompletedata: val, autocompletefiledvalue: this.autocompletefiledvalue, removedDataSet: removedData });\n  }\n  removechipmultiple(val: any, index: any, removedData: any) {\n    console.log(\"val for multiple\", index);\n\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    // this.formGroup.controls[val.name].patchValue(this.autocompletefiledvalue[val.name]);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n    this.formGroup.controls[val.name].patchValue('');\n    this.inputblur(val.name);\n    this.onFormFieldChange.emit({ val, fieldval: this.formGroup.controls[val.name].value, fromval: this.formGroup.value, autocompletedata: val, autocompletefiledvalue: this.autocompletefiledvalue, removedDataSet: removedData, removedIndex: index });\n\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, '00000', field, field.name);\n\n\n\n    if (field.multiple == null || typeof field.multiple == 'undefined') {\n      if (val != null && val.key != null) this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n    }\n\n    if (this.formGroup.controls[field.name] == null) {\n      this.formGroup.controls[field.name].patchValue(\"\");\n      this.inputblur(field.name);\n    }\n    this.reloadautocomplete(field.name);\n    // console.log(\"field.name\", field.value, \"opop\", this.formGroup.controls[field.name].value);\n    this.formGroup.controls[field.name].patchValue(\"\");\n\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, autocompletedata: val, autocompletefiledvalue: this.autocompletefiledvalue });\n\n    // if (this.autocompletefiledvalue[field.name] != null && this.autocompletefiledvalue[field.name].length > 0) {\n    //   let temparr: any = Array.from(new Set(this.autocompletefiledvalue[field.name].map((item: any) => item)))\n    //   this.autocompletefiledvalue[field.name] = temparr;\n    // }\n\n\n  }\n\n\n  managefromcontrol(field: any, type: any) {\n    // console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          // console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      // console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            // console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n  }\n  timepickerchange(val: any) {\n    console.log(\"PPPP\", val);\n\n  }\n\n  checkchange(field: any, index: any) {\n    console.log(\"timepicker\", field, \"  \", index);\n\n    // console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n\n          temcontrolarr.push(this.formdataval.fields[n].value);\n          if (this.formdataval.fields[n].type == 'numberformat') {\n            this.phonenumberValue = this.formdataval.fields[n].value\n          }\n        } else {\n          temcontrolarr.push('');\n        }\n\n        // console.log(\"temcontrolarr\",temcontrolarr);\n\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            //use for delete data\n            this.formdataval.fields[n].loadfile = 1;\n\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n                this.filearray[this.formdataval.fields[n].name][fa].loadfile = 1;\n\n                if (this.formdataval.fields[n].aspectratio != null && this.formdataval.fields[n].imagecroppedratiolabel != null && this.formdataval.fields[n].aspectratio != '' && this.formdataval.fields[n].aspectratio.length > 0) {\n                  this.filearray[this.formdataval.fields[n].name][fa].aspectratio = this.formdataval.fields[n].aspectratio;\n                  this.filearray[this.formdataval.fields[n].name][fa].imagecroppedratiolabel = this.formdataval.fields[n].imagecroppedratiolabel;\n\n                  // for (let c in this.filearray[this.formdataval.fields[n].name][fa]) {\n                  //   this.filearray[this.formdataval.fields[n].name][fa].aspectratio[c] = Number(this.filearray[this.formdataval.fields[n].name][fa].aspectratio[c]).toFixed(2);\n                  // }\n                }\n\n                // this.filearray[this.formdataval.fields[n].name][fa].imagefields = this.formdataval.fields[n].imagefields;\n              }\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n              //use for delete data\n              this.formdataval.fields[n].loadfile = 1;\n              this.filearray[this.formdataval.fields[n].name].loadfile = 1;\n\n              // for (let c in this.formdataval.fields[n]) {\n              //   this.formdataval.fields[n].aspectratio[c] = Number(this.formdataval.fields[n].aspectratio[c]).toFixed(2);\n              // }\n            }\n          }\n\n          // console.log(this.filearray, 'filearray')\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n\n\n          // label: \"Doctor/Practice is : \",\n          // name: \"docprac\",\n          // // hint: 'In months',\n          // type: \"checkbox\",\n          // multiple: true,\n          // val: [\n          //     { key: 0, val: \"Family Medicine\" },\n          //     { key: 1, val: \"Neurology\" },\n          //     { key: 2, val: \"D.O Doctor of Osteopathy\" },\n          //     { key: 3, val: \"General Practice\" },\n          //     { key: 4, val: \"Internal Medicine\" },\n          //     { key: 5, val: \"Pain Mgnt (Integrated Practice)\" },\n          //     { key: 6, val: \"Primary Care\" },\n          //     { key: 7, val: \"Endocrinology\" },\n          //     { key: 8, val: \"Integrated Specialty\" },\n          //     { key: 9, val: \"Cardiology\" },\n          // ],\n          // value: [],\n          // validations: [\n          //     { rule: \"required\", message: \"Must be select any of them.\" },\n          // ],\n          // let tempfieldval: any = {\n          //   label: this.formdataval.fields[n].label,\n          //   name: this.formdataval.fields[n].name,\n          //   value: this.formdataval.fields[n].value,\n          //   validations: this.formdataval.fields[n].validations,\n\n          //   // value\n\n          // };\n          // temcontrolarr.push(this.formdataval.fields[n].value);\n\n\n\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n        // console.log(\"temvalidationrule\", temvalidationrule);\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: this.formdataval.fields[n].value, disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n\n\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n  setphonenumberValidate(event: any) {\n    if (event.target.value.length < 14) {\n      // console.log(\"not correct\");\n      this.numberFormatFlag = true;\n    } else {\n      // console.log(\"correct\");\n      this.numberFormatFlag = false;\n    }\n\n\n  }\n\n\n\n\n  chooseimg(vals: any, fields: any) {\n    // console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    console.log('x', this.formGroup.value);\n    // return;\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',this.formGroup);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n\n\n      for (const m in this.formdataval.fields) {\n\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n\n          // console.log(this.filearray[this.formdataval.fields[m].name], '>>??==== not null submit ++++')\n\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1 && this.filearray[this.formdataval.fields[m].name].loadfile == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n\n\n            // console.log(this.formdataval.fields[m], '>>?? file submit ss')\n            // console.log(this.filearray[this.formdataval.fields[m].name], '>>??==== file submit loadfile 1 ===')\n\n            const tfile: any = {};\n\n\n            if (this.filearray[this.formdataval.fields[m].name].type == 'image/png' || this.filearray[this.formdataval.fields[m].name].type == 'image/jpg' || this.filearray[this.formdataval.fields[m].name].type == 'image/jpeg') {\n\n              if (this.formdataval.fields[m].aspectratio != null && this.formdataval.fields[m].aspectratio.length > 0) {\n                tfile.aspectratio = this.formdataval.fields[m].aspectratio;\n\n                for (let c in this.formdataval.fields[m].croppedimagearray) {\n                  delete this.formdataval.fields[m].croppedimagearray[c].file;\n                  delete this.formdataval.fields[m].croppedimagearray[c].base64;\n                }\n\n                tfile.croppedimagearray = this.formdataval.fields[m].croppedimagearray;\n\n              }\n            }\n\n\n\n\n\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n\n            tfile.imagefields = this.formdataval.fields[m].imagefields;\n\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n            // console.log(tfile, 'single tfile>>',)\n          }\n\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].loadfile == 0) {\n\n            // console.log(this.filearray[this.formdataval.fields[m].name], '>>??==== file loadfile 0 ===')\n\n            const tfile: any = {};\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n\n            // console.log(this.filearray[this.formdataval.fields[m].name][g], 'this.filearray[this.formdataval.fields[m].name] +========')\n\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // console.log(this.filearray[this.formdataval.fields[m].name][g], 'this.filearray[this.formdataval.fields[m].name][g]')\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n\n\n              if (this.filearray[this.formdataval.fields[m].name][g].type == 'image/png' || this.filearray[this.formdataval.fields[m].name][g].type == 'image/jpg' || this.filearray[this.formdataval.fields[m].name][g].type == 'image/jpeg') {\n\n                if (this.filearray[this.formdataval.fields[m].name][g].aspectratio != null && this.filearray[this.formdataval.fields[m].name][g].aspectratio.length > 0) {\n                  tfile.aspectratio = this.filearray[this.formdataval.fields[m].name][g].aspectratio;\n                  tfile.croppedimagearray = this.filearray[this.formdataval.fields[m].name][g].croppedimagearray;\n\n                  for (let c in this.filearray[this.formdataval.fields[m].name][g].croppedimagearray) {\n                    delete this.filearray[this.formdataval.fields[m].name][g].croppedimagearray[c].base64;\n                    delete this.filearray[this.formdataval.fields[m].name][g].croppedimagearray[c].file;\n                  }\n\n                  tfile.croppedimagearray = this.filearray[this.formdataval.fields[m].name][g].croppedimagearray;\n                }\n              }\n\n\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n\n              // console.log(tfile, 'tfile++')\n\n              // tfile.imagefields = this.formdataval.fields[m].imagefields; flds\n\n              if (this.formdataval.fields[m].imagefields != null && this.formdataval.fields[m].imagefields.length > 0) {\n\n                // console.log(this.filearray[this.formdataval.fields[m].name][g].flds, 'flds ')\n\n                // console.log(this.filearray[this.formdataval.fields[m].name][g].imagefields, 'imagefields')\n\n                if (this.filearray[this.formdataval.fields[m].name][g].flds != null && this.filearray[this.formdataval.fields[m].name][g].flds.length > 0) {\n\n                  tfile.imgfields = this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  tfile.flds = this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  // for (let img in this.filearray[this.formdataval.fields[m].name][g].imagefields) {\n                  //   for (let fl in this.filearray[this.formdataval.fields[m].name][g].flds) {\n                  //     if (this.filearray[this.formdataval.fields[m].name][g].flds[fl].key == this.filearray[this.formdataval.fields[m].name][g].imagefields[img].name) {\n                  //       console.log('imagefields', this.filearray[this.formdataval.fields[m].name][g].imagefields[img])\n                  //       this.filearray[this.formdataval.fields[m].name][g].imagefields[img].val = this.filearray[this.formdataval.fields[m].name][g].flds[fl].value\n                  //     }\n                  //   }\n                  // }\n\n                  // tfile.imgfields = this.formdataval.fields[m].imagefields;\n\n                  // tfile.imgfil=this.filearray[this.formdataval.fields[m].name][g].flds;\n\n                  // console.log('tfile++++>', tfile)\n\n                }\n              }\n              tfilearr.push(tfile);\n            }\n            // if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 2) {\n\n            // console.log(this.filearray[this.formdataval.fields[m].name], '========++++ upload 2')\n            // }\n\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null) {\n\n\n            // console.log(' autoval in form before patch ', this.autocompletefiledvalue[this.formdataval.fields[m].name], this.formdataval.fields[m].name, this.formGroup.controls[this.formdataval.fields[m].name].value, this.formGroup.controls[this.formdataval.fields[m].name].valid);\n\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(this.autocompletefiledvalue[this.formdataval.fields[m].name]);\n\n            // console.log(' autoval in form after patch', this.autocompletefiledvalue[this.formdataval.fields[m].name], this.formdataval.fields[m].name, this.formGroup.controls[this.formdataval.fields[m].name].value, this.formGroup.controls[this.formdataval.fields[m].name].valid);\n\n\n          }\n\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            // this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            // this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n\n\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          console.log('aaaaff...', this.formGroup.controls[x].value, this.formdataval.fields[m].name);\n          // console.log('aaaaff...',this.formGroup.controls[x].value);\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tempformval[this.formdataval.fields[m].name]);\n\n                // console.log('gv', b[1], \"tempval\", tempformval[this.formdataval.fields[m].name], this.formdataval.fields[m].name);\n              }\n            }\n          } else {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n\n                // tempformval[this.formdataval.fields[m].name].push(b[1]);\n\n                // console.log('gv2', b[1], \"tempval\", tempformval[this.formdataval.fields[m].name], this.formdataval.fields[m].name);\n              }\n            }\n\n          }\n\n          this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tempformval[this.formdataval.fields[m].name]);\n\n        }\n\n\n        //for multiple email add\n        // if(this.formdataval.fields[m].type == 'email'){\n        //   if(this.formGroup.controls[x].value == true){\n        //     console.log(this.formdataval.fields[m],'==this.formdataval.fields[m]++',this.formGroup.controls[x].value,'??',tempformval,'>>>',b[0])\n        //     // for(let i  in tempformval){\n        //     //   if(tempformval[i] == this.formdataval.fields[m].name.match('/email/g')){\n        //     //     console.log(tempformval[i],'tempformval[i]')\n        //     //   }\n        //     // }\n        //   }\n        // }\n\n\n\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    // if (this.phonenumberValue.length<14) {\n    //   this._snackBar.open(\"Please Enter a valid number\",\"ok\",{\n    //     duration: 1000\n    //   })\n    //   return;\n    // }\n    this.findInvalidControls();\n    // console.log(\"valuesof form data\", this.formGroup.value);\n\n\n    if (this.formGroup.valid) {\n      // if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n      this.loading = true;\n      const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n      const source: any = {};\n      source.data = this.formGroup.value;\n\n      if (this.formdataval.secret != null && this.formdataval.jwttoken != null) {\n        source.secret = this.formdataval.secret;\n        source.jwttoken = this.formdataval.jwttoken;\n      }\n\n      if (this.formdataval.endpoint != null && this.formdataval.endpoint != '') {\n        // console.log(\"this.formGroup.value+++++++\", this.formGroup.value);\n        // this.formDirective.reset();\n\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n\n\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n\n            this.formDirective.resetForm();\n            this.autocompletefiledvalue = [];\n            this.filearray = [];\n\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n            this.loading = false;\n          }\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n        this.loading = false\n        this.onFormFieldChange.emit({\n          field: 'fromsubmit', fieldval: 'success', formdataval: this.formdataval, source: source, loading: this.loading,\n          fromval: this.formGroup.value\n        });\n      }\n    }\n    else {\n\n      for (const m in this.formdataval.fields) {\n        //reset autocomplete field vals to patch for ui only reason !! so that user can't see selected vals \n\n        if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null) {\n          let vflag: boolean = false;\n          if (this.formGroup.controls[this.formdataval.fields[m].name].valid) vflag = true;\n          this.formGroup.controls[this.formdataval.fields[m].name].patchValue('');\n          // for making valid auto field untouched again so that user dont see error if valu is selected already !! \n          if (vflag == true) this.formGroup.controls[this.formdataval.fields[m].name].markAsUntouched();\n        }\n      }\n\n      this.onFormFieldChange.emit({ field: 'fromsubmiterror', fieldval: 'validationerror', fromval: this.formGroup.value, loading: this.loading });\n      this.findInvalidControls();\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n  public findInvalidControls() {\n    const invalid = [];\n    const controls = this.formGroup.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n        invalid.push(name);\n      }\n    }\n    console.log(\"findInvalidControls\", invalid);\n\n    return invalid;\n  }\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n    // console.log(\"firstInvalidControl\", firstInvalidControl);\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    if (controlEl == null) {\n      // console.log(\"controlEl\", controlEl);\n\n      return 0;\n    } else {\n      return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n    }\n\n  } private el: ElementRef\n\n\n  fileChangeEvent(event: any): void {\n    // console.log(\"change event hitted\", event);\n    this.imageChangedEvent = event;\n  }\n\n\n  singleimageCropped(event: ImageCroppedEvent, field, ival, ci) {\n    this.formdataval.fields[ival].croppedImage[ci] = event.base64;\n\n\n    // for (let c in this.formdataval.fields[ival].aspectratio) {\n    //   this.formdataval.fields[ival].aspectratio[c] = Number(this.formdataval.fields[ival].aspectratio[c]);\n    // }\n\n    // delete event.base64;\n    // delete event.file;\n    this.formdataval.fields[ival].croppedimagearray[ci] = event;\n\n    // this.croppedImage = event.base64;\n    // console.log(this.formdataval.fields[ival].croppedImage[ci], 'this.croppedImage===>>')\n    // console.log(event, 'event+++64=====', this.formdataval.fields[ival], field, ci);\n\n    // console.log(field, 'field=====')\n\n  }\n\n  multipleimageCropped(event: ImageCroppedEvent, files, ival, ci, fi, fldval) {\n    // console.log(event, 'event+++64', this.formdataval.fields[ival], files, ival, ci, '++++++++++++++++', fi, fldval)\n    fldval[fi].croppedImage[ci] = event.base64;\n\n    fldval[fi].croppedimagearray[ci] = event;\n\n    for (let c in fldval[fi].aspectratio) {\n      fldval[fi].aspectratio[c] = Number(fldval[fi].aspectratio[c]);\n    }\n\n    // this.croppedImage = event.base64;\n    // console.log(files, 'this.croppedImage output===>>')\n  }\n\n  imageLoaded() {\n    // show cropper\n  }\n\n  cropperReady() {\n    // cropper ready\n  }\n\n  loadImageFailed() {\n    // show message\n  }\n\n  opensingleimagecrop(val) {\n\n\n\n    // console.log(val, '========');\n\n    val.croppedimagearray = [];\n    val.croppedImage = [];\n\n    // for (let c in val.aspectratio) {\n    //   val.aspectratio[c] = Number(val.aspectratio[c]);\n    // }\n\n    var imgUrl = 'https://' + val.value.bucket + '.s3.amazonaws.com/' + val.value.path + val.value.fileservername;\n\n    this.getImagetoDataURL(imgUrl, function (dataUrl) {\n      // console.log(dataUrl)\n      val.imageUrl = dataUrl;\n      val.value = null;\n    })\n    // val.editImageUrl = 'https://' + val.value.bucket + '.s3.amazonaws.com/' + val.value.path + val.value.fileservername;\n  }\n\n  opensingleimagecropformultiple(val) {\n\n\n    // console.log(val, '========');\n\n    val.croppedimagearray = [];\n    val.croppedImage = [];\n\n    // for (let c in val.aspectratio) {\n    //   val.aspectratio[c] = Number(val.aspectratio[c]);\n    // }\n\n    var imgUrl = 'https://' + val.bucket + '.s3.amazonaws.com/' + val.path + val.fileservername;\n\n    // console.log(imgUrl, 'imgUrl')\n\n    this.getImagetoDataURL(imgUrl, function (dataUrl) {\n      // console.log(dataUrl)\n      val.imageUrl = dataUrl;\n    })\n  }\n\n\n  // get Image to Data URL\n  getImagetoDataURL(url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function () {\n      var reader = new FileReader();\n      reader.onloadend = function () {\n        callback(reader.result);\n      }\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.send();\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    \n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n    \n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[formControlName][appPhoneMask]'\n})\nexport class PhoneFormatingDirective {\n\n  constructor(public ngControl: NgControl) { }\n\n  @HostListener('ngModelChange', ['$event'])\n  onModelChange(event) {\n    this.onInputChange(event, false);\n  }\n\n  @HostListener('keydown.backspace', ['$event'])\n  keydownBackspace(event) {\n    this.onInputChange(event.target.value, true);\n  }\n  \n\n  onInputChange(event, backspace) {\n    //console.log('eeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',event);\n    if(event != null && typeof(event) != 'undefined'){\n    let newVal = event.replace(/\\D/g, '');\n    if (backspace && newVal.length <= 6) {\n      newVal = newVal.substring(0, newVal.length - 1);\n    }\n    if (newVal.length === 0) {\n     // newVal = '';\n       newVal = event.replace(/\\D/g, '');\n      // this.ngControl.valueAccessor.writeValue(newVal='');\n      //console.log('length 0',newVal);\n    } else if (newVal.length <= 3) {\n      newVal = newVal.replace(/^(\\d{0,3})/, '($1)');\n     // console.log('length <3',newVal);\n    } else if (newVal.length <= 6) {\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '($1) $2');\n    //  console.log('length <6',newVal);\n    } else if (newVal.length <= 10) {\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,4})/, '($1) $2-$3');\n    //  console.log('length <10',newVal);\n    } else {\n      newVal = newVal.substring(0, 10);\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,4})/, '($1) $2-$3');\n    //  console.log('else',newVal);\n    }\n    this.ngControl.valueAccessor.writeValue(newVal);\n    //console.log(this.ngControl,'lll');\n  }\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ObservableserviceService } from \"../service/observableservice.service\";\nimport { ApiService } from \"../api.service\";\n@Pipe({\n  name: 'languageTranslet'\n})\nexport class LanguageTransletPipe implements PipeTransform {\n \n  public languageDataSet:any=[];\n  public convertToLanguageCode:any='';\n  public apiUrl:any='';\n  public dataSet:any=[];\n\n  constructor(public observableService:ObservableserviceService,public apiService:ApiService){\n    // let serviceData:any;\n    let serviceData: any = this.observableService.getmultilingualData().subscribe(res => {\n      this.languageDataSet=res;\n\n    });\n    // setTimeout(() => {\n      let getconvertToCode: any = this.observableService.getconvertToLanguage().subscribe(res => {\n        this.convertToLanguageCode=res;\n        // console.log(\"P{P{P\",res);\n      });\n    // }, 100);\n    \n    // console.log(\"this.languageDataSet++++\",this.languageDataSet);\n   \n   let apiurl:any=this.observableService.getapiUrl().subscribe((response:any)=>{\n         this.apiUrl=response;\n  //  console.log(\"this.apiUrl=\",this.apiUrl);\n\n   })\n  }\n\n\n  transform(value: any): any { \n    // alert(\"op\")\n    // console.log(\" this.convertToLanguageCode\", this.convertToLanguageCode);\n    for (let val of this.languageDataSet) {\n      if (val.en == value) {\n            return val[this.convertToLanguageCode];\n          }\n    }\n    // this.dataSet.push(value);\n    // if (typeof value!='undefined' && value!=null && value!='') {\n    //   let data:any={\n    //     \"data\":{\n    //       \"en\":value\n    //     }\n    //   }\n    //   this.apiService.postDataApi( this.apiUrl,data).subscribe((response:any)=>{\n  \n    //   })\n    // }\n    // console.log(\" this.dataSet\", this.dataSet)\n    return value;\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent, ModalForButtomSearch,DeleteNotesModal} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { ObservableserviceService } from \"./service/observableservice.service\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';x\n// import { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { PhoneFormatingDirective } from './directive/phone-formating.directive';\nimport { LanguageTransletPipe } from './pipes/language-translet.pipe';\n// import { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe,ModalForButtomSearch, PhoneFormatingDirective, LanguageTransletPipe,DeleteNotesModal],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule,\n        NgxMaterialTimepickerModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService,ObservableserviceService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent,ModalForButtomSearch,DeleteNotesModal],\n})\nexport class ListingModule {\n}\n"]}