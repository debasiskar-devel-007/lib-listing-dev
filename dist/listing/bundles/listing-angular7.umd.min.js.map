{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","color","mode","value","bufferValue","previewFlug","selectsearch","onLiblistingChange","stateGroups","searchListval","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","subscriptions","subscriptioncount","tableFooterColumns","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","currentautocompleteitem","filterautoval","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","hidecounter","unshift","hidemultipleselectbutton","data_list","createData","selection","SelectionModel","sl","textsearch","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","onSubmit","errormg","markAsTouched","dateSearch","condition","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toString","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","paging","action","limitdata","sortdata","clear","addautosearchdata","remove","splice","autocompletechangedetected","item","next","autoselval","filterval","values","name","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","document","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","n","status","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","isAllSelected","selected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","entries","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","formGroup","createForm","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","patchValue","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","fieldval","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","after","checkchange","onFormFieldChange","fromval","dependent","vc","condval","initialize","formBuilder","group","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","reset","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    // console.log(this.sortdataval,'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  } @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n\n  stateGroups: string[] = this.searchListval;\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n\n\n\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push('Actions');\n      this.columns.push({ columnDef: 'Actions', header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select'); \n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log('s', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            // console.log('t', this.search_settingsval.textsearch);\n          }\n        }\n      }\n\n    }, 1000);\n\n\n  }\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n\n\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any) {\n    // console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any) {\n\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, this.autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n      } else {\n        if (val == 1) {\n          this.limitcondval.pagecount--;\n          this.limitcondval.skip -= this.limitcondval.limit;\n        }\n        if (val == -1) {\n          this.limitcondval.pagecount++;\n          this.limitcondval.skip += this.limitcondval.limit;\n        }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  autosearchfunction(value: any, data: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput,'asi');\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    this.autosearch[value].push(data);\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n\n  textsearchfunction(value: any) {\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: { message: 'Are you sure you want to delete the selected records?' }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: { message: 'Are you sure to delete this record ??' }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos',autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...',conditionobj,this.end_date);\n    // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n    // return;\n    this.date_search_source_countval = 0;\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.results.res != null && result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New Search of data loaded' }\n        });\n      } else {\n        this.rescount = 0;\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No such search record found !!' }\n        });\n\n      }\n\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      this.date_search_source_countval = (result.count);\n      if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) { }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[0];\n                  }, 300);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[0];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[0]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    // console.log('manage control',field,type);\n    if (type == 'remove') {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          // console.log('removed',field['name'], 'c', y);\n        }\n      }\n    }\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n        this.loading = true;\n        const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n        const source: any = {};\n        source.data = this.formGroup.value;\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n\n        this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value });\n\n      }\n    } else {\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}