{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","allSearchCond","color","mode","value","bufferValue","previewFlug","selectsearch","initiateSearch","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","SelectionModel","sl","textsearch","search","ats","k","name","CustomButtonListen","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","action","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","label","start_date","end_date","condition","textSearch","unix","$lte","Date","getTime","$gte","$regex","toString","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","paging","maxpagecount","Number","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","values","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","msg","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","checkedlist","seldata","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","p","objk","entries","autoFocus","maxHeight","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","customlistenbuttons","formGroup","createForm","CustomFlagFields","onFormFieldChange","fieldval","fromval","customButtonVal","customfield","CustomFlagFieldsRemove","GeneratePassword","PasswordVal","makeid","patchValue","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","Math","floor","random","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","resetformdata","reset","checkchange","dependent","vc","condval","initialize","this_2","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","chooseimg","querySelectorAll","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n  public allSearchCond: any = [];\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n  public initiateSearch: boolean = false;\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n\n  stateGroups: string[];\n\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n\n\n\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            // this.selectSearch(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0])\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // selectSearch_condition\n            this.initiateSearch = true;\n            this.selectSearch_condition[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            console.log(this.initiateSearch, 'initiateSearch select')\n            console.log(this.search_settingsval, 'ss+++++=====++++', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n\n            // console.log(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0],'????? new selectSearch_condition',this.selectSearch_condition)\n\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            this.initiateSearch = true;\n            console.log(this.initiateSearch, 'initiateSearch text')\n          }\n        }\n      }\n\n\n      if (this.search_settingsval.search != null) {\n        for (let ats in this.search_settingsval.search) {\n          if ( this.search_settingsval.search[ats].value  != null && this.search_settingsval.search[ats].value.length > 0) {\n            this.initiateSearch = true;\n\n            if (this.autosearch[this.search_settingsval.search[ats].field] == null) {\n              this.autosearch[this.search_settingsval.search[ats].field] = [];\n            }\n            // this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value.val, name: this.search_settingsval.search[ats].value.name });\n            // console.log(this.autosearch[this.search_settingsval.search[ats].value],'>>??????++',this.search_settingsval.search[ats].value)\n\n            for (let k in this.search_settingsval.search[ats].value) {\n\n              // console.log(this.search_settingsval.search[ats].value,'>>=======')\n\n              this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value[k].val, name: this.search_settingsval.search[ats].value[k].name });\n\n            }\n          }\n        }\n\n      }\n\n\n\n      if (this.initiateSearch == true) {\n        this.allSearch();\n      }\n\n\n    }, 1000);\n  }\n\n  // Custom Filter new\n  CustomButtonListen(val: any) {\n    // allSearchCond\n    // console.log(this.allSearchCond,'this.allSearchCond')\n\n    this.onLiblistingButtonChange.emit(\n      {\n        limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, searchdata: this.search_settingsval, buttondata: val, allSearchCond: this.allSearchCond\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n\n\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  \n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    console.log(\"start date\");\n    console.log(this.start_date);\n    console.log(this.end_date);\n\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n    console.log(value, 'value', type, 'type', statusval, 'statusval')\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    console.log(this.limitcondval, 'lim val');\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      this.limitcondval.limit = 100;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'You can see maximum 100 records at once !' }\n      });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    // this.oldlimitrange.push({\n    //   skip: this.limitcondval.skip,\n    //   limit: this.limitcondval.limit,\n    //   pagecount: this.limitcondval.pagecount\n    // });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval, results: this.result.results.res });\n\n        // if (this.libdataval.footersettings != null) {\n        //   this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n        // }\n\n\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n\n\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n\n\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    console.log(this.autosearchinput, 'asi', data, value, item);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n\n    console.log(this.autosearch, 'autosearch 1130')\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n    this.allSearchCond = [];\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n\n\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 3000,\n          data: { errormessage: result.msg }\n        });\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n\n\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n\n\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    console.log(field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos', autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n\n    console.log(this.selectSearch_condition, 'selectSearch_condition')\n\n    this.allSearchCond = conditionobj;\n\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n    this.initiateSearch = false;\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = ''; \n\n  public customlistenbuttons: any = {};\n\n  @Input()\n  set custombuttons(val: any) {\n    this.customlistenbuttons = val;\n    // console.log(this.customlistenbuttons,'customlistenbuttons form')\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n\n  // CustomFlagFields\n  CustomFlagFields(field:any,item:any){\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value,customButtonVal:item,customfield:'add' });\n  }\n\n  CustomFlagFieldsRemove(field:any,item:any){\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value,customButtonVal:item ,customfield:'remove'});\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    passwordFieldData = val.value;\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     passwordFieldData = this.formdataval.fields[g].value;\n    //     // console.log(passwordFieldData, 'PasswordVal', this.formdataval.fields[g])\n    //   }\n    // }\n    // console.log(passwordFieldData, '??')\n\n    if (passwordFieldData != null && passwordFieldData != '') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n\n  previewGeneratePassword(val) {\n\n    if (val.value != null && val.value != '') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n\n  }\n\n\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  chooseimg(vals: any, fields: any) {\n    console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n\n\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n\n\n        //for multiple email add\n        // if(this.formdataval.fields[m].type == 'email'){\n        //   if(this.formGroup.controls[x].value == true){\n        //     console.log(this.formdataval.fields[m],'==this.formdataval.fields[m]++',this.formGroup.controls[x].value,'??',tempformval,'>>>',b[0])\n        //     // for(let i  in tempformval){\n        //     //   if(tempformval[i] == this.formdataval.fields[m].name.match('/email/g')){\n        //     //     console.log(tempformval[i],'tempformval[i]')\n        //     //   }\n        //     // }\n        //   }\n        // }\n\n\n\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n        this.loading = true;\n        const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n        const source: any = {};\n        source.data = this.formGroup.value;\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n            this.loading = false;\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n\n        this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value });\n\n      }\n    } else {\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}