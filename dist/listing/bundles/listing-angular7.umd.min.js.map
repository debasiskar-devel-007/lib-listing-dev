{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secret","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","allSearchCond","searchbuttonval","searchBarFlag","searchBarToolTip","color","mode","value","bufferValue","previewFlug","selectsearch","initiateSearch","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","SelectionModel","sl","textsearch","search","ats","k","name","datesearch","start_date","Date","$gte","format","toString","end_date","$lte","CustomButtonListen","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","autoSearchVal","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","SearchBarToggle","flag","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","action","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","label","condition","textSearch","unix","getTime","$regex","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","paging","maxpagecount","Number","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","values","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","msg","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","checkedlist","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","p","objk","entries","autoFocus","maxHeight","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","openBottomSheetForSearch","BottomSheetForButtomSearch","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","chooseChipItem","selectedData","buttonSearchData","searchByItem","reset","searchVal","allButtonData","searchByKeyup","apiService","warn","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","customlistenbuttons","formGroup","createForm","CustomFlagFields","onFormFieldChange","fieldval","fromval","customButtonVal","customfield","CustomFlagFieldsRemove","GeneratePassword","PasswordVal","makeid","patchValue","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","Math","floor","random","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","imagefields","singleImgFormData","multiple","filearray","deletefile","trackByFn","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","apideleteurl","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","resetformdata","checkchange","dependent","vc","condval","initialize","this_2","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","chooseimg","querySelectorAll","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport { throwError } from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads';\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,\n    private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secret')) {\n      this.secretkey = this.cookieService.get('secret');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) { this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch(link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secret = this.secretkey;\n    source.token = token;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  \n  postSearch1(link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = { source, id: data._id };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, ids: data };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = { source, data: { ids: data, val } };\n    dataval.secret = this.secretkey;\n    dataval.token = token;\n\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n  public allSearchCond: any = [];\n  public searchbuttonval: any = [];\n  public searchBarFlag: boolean = true;\n  public searchBarToolTip: any = 'Open Search Bar';\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n  public initiateSearch: boolean = false;\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    console.log('search_settingsval++++++', this.search_settingsval)\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n  // search buttons \n  // @Input()\n  // set searchbuttons(val: any) {\n  //   this.searchbuttonval = val\n  //   console.log(this.searchbuttonval, 'customButtonFlagVal')\n  // }\n\n\n  stateGroups: string[];\n\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n\n\n\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            // this.selectSearch(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0])\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // selectSearch_condition\n            this.initiateSearch = true;\n            this.selectSearch_condition[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log(this.initiateSearch, 'initiateSearch select')\n            // console.log(this.search_settingsval, 'ss+++++=====++++', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n\n            // console.log(this.search_settingsval.selectsearch[sl].value,this.search_settingsval.selectsearch[sl],this.search_settingsval.selectsearch[sl].values[0],'????? new selectSearch_condition',this.selectSearch_condition)\n\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            this.initiateSearch = true;\n            // console.log(this.initiateSearch, 'initiateSearch text')\n          }\n        }\n      }\n\n\n      if (this.search_settingsval.search != null) {\n        for (let ats in this.search_settingsval.search) {\n          if (this.search_settingsval.search[ats].value != null && this.search_settingsval.search[ats].value.length > 0) {\n            this.initiateSearch = true;\n\n            if (this.autosearch[this.search_settingsval.search[ats].field] == null) {\n              this.autosearch[this.search_settingsval.search[ats].field] = [];\n            }\n\n            for (let k in this.search_settingsval.search[ats].value) {\n              // console.log(this.search_settingsval.search[ats].value,'>>=======')\n              this.autosearch[this.search_settingsval.search[ats].field].push({ val: this.search_settingsval.search[ats].value[k].val, name: this.search_settingsval.search[ats].value[k].name });\n            }\n          }\n        }\n      }\n\n\n      // dateSearch_condition\n      if (this.search_settingsval.datesearch != null && this.search_settingsval.datesearch[0].value != null) {\n\n        this.start_date = moment(new Date(this.search_settingsval.datesearch[0].value.$gte)).format(\"YYYY-DD-MM\").toString();\n        this.end_date = moment(new Date(this.search_settingsval.datesearch[0].value.$lte)).format(\"YYYY-DD-MM\").toString();\n        this.dateSearch_condition[this.search_settingsval.datesearch[0].field] = this.search_settingsval.datesearch[0].value;\n\n      }\n      // console.log(this.search_settingsval, 'search_settingsval', this.dateSearch_condition)\n\n\n      if (this.initiateSearch == true) {\n        this.allSearch();\n      }\n    }, 1000);\n  }\n\n\n\n\n  // Custom Filter new\n  CustomButtonListen(val: any) {\n    // allSearchCond\n    // console.log(this.search_settingsval.search, 'this.allSearchCond')\n\n    this.onLiblistingButtonChange.emit(\n      {\n        limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, searchdata: this.search_settingsval, buttondata: val, allSearchCond: this.allSearchCond, autoSearchVal: this.autosearch\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n  }\n\n  // Search Bar Toggle\n  SearchBarToggle(flag) {\n    switch (flag) {\n      case true:\n        this.searchBarFlag = false;\n        this.searchBarToolTip = 'Open Search Bar';\n        break;\n      case false:\n        this.searchBarFlag = true;\n        this.searchBarToolTip = 'Close Search Bar';\n\n        break;\n    }\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n\n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n    // console.log(value, 'value', type, 'type', statusval, 'statusval')\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    // console.log(this.limitcondval, 'lim val');\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      this.limitcondval.limit = 100;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'You can see maximum 100 records at once !' }\n      });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    // this.oldlimitrange.push({\n    //   skip: this.limitcondval.skip,\n    //   limit: this.limitcondval.limit,\n    //   pagecount: this.limitcondval.pagecount\n    // });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval, results: this.result.results.res });\n\n        // if (this.libdataval.footersettings != null) {\n        //   this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n        // }\n\n\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n\n\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n\n\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput, 'asi', data, value, item);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n\n    // console.log(this.autosearch, 'autosearch 1130')\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      // console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    // console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n    this.allSearchCond = [];\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n\n\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 3000,\n          data: { errormessage: result.msg }\n        });\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        // console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            // console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n\n\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n\n\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      // console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n\n\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n\n\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    // console.log(field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n\n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n\n        autosearch.$or.push(tv);\n      }\n    }\n    // console.log('autos qq++', autosearch,this.autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n\n    // console.log(this.selectSearch_condition, 'selectSearch_condition')\n\n    this.allSearchCond = conditionobj;\n\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n    this.initiateSearch = false;\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n  // open Bottom Sheet For Search\n  openBottomSheetForSearch(data: any, i) {\n    console.log(data, 'openBottomSheetForSearch', i)\n    const bs = this.bottomSheet.open(BottomSheetForButtomSearch, { panelClass: 'button-search-bottomsheet', data: { items: data } });\n\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n\n\n// button-search-bottom-sheet\n@Component({\n  selector: 'button-search-bottom-sheet',\n  templateUrl: 'button-search-bottom-sheet.html',\n})\nexport class BottomSheetForButtomSearch {\n\n  public buttonSearchData: any = {};\n  public selectedData: any = [];\n  public searchVal: any = '';\n  public allButtonData: any = [];\n\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetForButtomSearch>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any, public apiService: ApiService) {\n    console.warn(\"bottom-sheet-search\", data);\n    this.buttonSearchData = data;\n    this.allButtonData = data.items.value;\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n\n  chooseChipItem(data, i) {\n    console.log(data, '??data')\n    this.selectedData.push(data);\n    this.buttonSearchData.items.value.splice(i, 1);\n  }\n\n  searchByItem() {\n    console.log(this.selectedData)\n  }\n\n  remove(val, i) {\n    this.selectedData.splice(i, 1);\n    this.buttonSearchData.items.value.push(val);\n\n  }\n\n  reset() {\n    this.searchVal = '';\n    this.buttonSearchData.items.value = [];\n    this.buttonSearchData.items.value = this.allButtonData;\n  }\n\n  searchByKeyup(value) {\n    console.log(value)\n\n    let link: any = this.buttonSearchData.items.serversearchdata.url + this.buttonSearchData.items.serversearchdata.endpoint;\n    let data: any = {\n      \"search_str\": value\n    }\n\n    setTimeout(() => {\n      this.apiService.postSearch1(link, data).subscribe(res => {\n        console.log(data)\n        let result: any = res;\n        this.buttonSearchData.items.value = [];\n        //  this.buttonSearchData.items.value = this.buttonSearchData.items.value.concat(result.res);\n        this.buttonSearchData.items.value = result.res;\n      })\n    }, 1000);\n\n  }\n}\n\n\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = '';\n\n  public customlistenbuttons: any = {};\n\n  @Input()\n  set custombuttons(val: any) {\n    this.customlistenbuttons = val;\n    // console.log(this.customlistenbuttons,'customlistenbuttons form')\n  }\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n  public singleImgFormData: any = [];\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n\n  // CustomFlagFields\n  CustomFlagFields(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'add' });\n  }\n\n  CustomFlagFieldsRemove(field: any, item: any) {\n    this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value, customButtonVal: item, customfield: 'remove' });\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    passwordFieldData = val.value;\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     passwordFieldData = this.formdataval.fields[g].value;\n    //     // console.log(passwordFieldData, 'PasswordVal', this.formdataval.fields[g])\n    //   }\n    // }\n    // console.log(passwordFieldData, '??')\n\n    if (passwordFieldData != null && passwordFieldData != '') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n\n  previewGeneratePassword(val) {\n\n    if (val.value != null && val.value != '') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n\n\n          if (this.formdataval.fields[g] != null && this.formdataval.fields[g].imagefields != null && this.formdataval.fields[g].imagefields.length > 0) {\n            this.singleImgFormData = this.formdataval.fields[g].imagefields;\n            // for(let i in this.formdataval.fields[g].imagefields){\n            //   this.singleImgFormData.push({name:this.formdataval.fields[g].imagefields[i].name,value:this.formdataval.fields[g].imagefields[i].value})\n            // }\n          }\n\n          // console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  uploadfile(val: any) {\n    console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // if(val.imagefields.length > 0){\n          //   file.imagefields = val.imagefields\n          // }\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    console.log(val, 'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n\n  }\n\n\n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n\n                this.filearray[this.formdataval.fields[n].name][fa].imagefields = this.formdataval.fields[n].imagefields;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  chooseimg(vals: any, fields: any) {\n    console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n\n\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n\n\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            tfile.singleImgFormData = this.singleImgFormData;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n\n            // console.log(tfile, 'tfile>>', this.singleImgFormData, 'singleImgFormData')\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n\n\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n\n\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n\n\n        //for multiple email add\n        // if(this.formdataval.fields[m].type == 'email'){\n        //   if(this.formGroup.controls[x].value == true){\n        //     console.log(this.formdataval.fields[m],'==this.formdataval.fields[m]++',this.formGroup.controls[x].value,'??',tempformval,'>>>',b[0])\n        //     // for(let i  in tempformval){\n        //     //   if(tempformval[i] == this.formdataval.fields[m].name.match('/email/g')){\n        //     //     console.log(tempformval[i],'tempformval[i]')\n        //     //   }\n        //     // }\n        //   }\n        // }\n\n\n\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n\n    if (this.formGroup.valid) {\n      // if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n      this.loading = true;\n      const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n      const source: any = {};\n      source.data = this.formGroup.value;\n\n      if (this.formdataval.secret != null && this.formdataval.jwttoken != null) {\n        source.secret = this.formdataval.secret;\n        source.jwttoken = this.formdataval.jwttoken;\n      }\n\n      if (this.formdataval.endpoint != null && this.formdataval.endpoint != '') {\n\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n            this.loading = false;\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n        this.onFormFieldChange.emit({ field: 'fromsubmitdata', fieldval: 'success', formdataval: this.formdataval, source: source, loading: this.loading });\n      }\n\n    }\n    else {\n      this.onFormFieldChange.emit({ field: 'fromsubmitdataerror', fieldval: 'validationerror', fromval: this.formGroup.value, loading: this.loading });\n\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent, BottomSheetForButtomSearch} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\n\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe,BottomSheetForButtomSearch],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent,BottomSheetForButtomSearch],\n})\nexport class ListingModule {\n}\n"]}