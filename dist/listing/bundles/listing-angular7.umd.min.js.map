{"version":3,"sources":["ng://listing-angular7/lib/listing.service.ts","ng://listing-angular7/lib/api.service.ts","ng://listing-angular7/lib/listing.component.ts","ng://listing-angular7/lib/showform/showform.component.ts","ng://listing-angular7/lib/materialmodules.ts","ng://listing-angular7/lib/youtubeplayer/youtubeplayer.component.ts","ng://listing-angular7/lib/customdata.pipe.ts","ng://listing-angular7/lib/listing.module.ts"],"names":["ListingService","Injectable","args","providedIn","ApiService","prototype","onUploadOutput","uploadOutput","arrayvalue","uploadtypec","uploadpath","type","event_1","url","method","data","path","this","uploadInput","emit","file","response","files","push","console","log","lengthis","length","percentageis","progress","percentage","index","findIndex","id","filter","dragOver","inprogress","fileservername","error_code","uploaderror","b","isTokenExpired","getclientip","_http","get","pipe","map","res","getEndpoint","endpoint","httpOptions","headers","HttpHeaders","Content-Type","Authorization","post","source","getData","catchError","err","error","throwError","postData","token","getEndpointUrl","JSON","stringify","postDatawithoutToken","postlogin","postSearch","link","secretkey","postSearch1","putData","put","deteOneData","dataval","_id","togglestatus","deteManyData","ids","togglestatusmany","val","HttpClient","CookieService","ViewChild","_authHttp","cookieService","domain_for_fileupload_val","options","concurrency","maxUploads","EventEmitter","humanizeBytes","check","moment","momentImported","ListingComponent","_apiService","dialog","bottomSheet","fb","router","resolver","container","sanitizer","_snackBar","_elementRef","_this","myControl","FormControl","rescount","columns","autosearchinput","currentautosearcharr","olddata","tsearch","tableflag","autosearch","libdataval","limitcondval","result","sortdataval","sh","art","aud2","aud","updatetableval","loaderrow","customButtonFlagVal","color","mode","value","bufferValue","previewFlug","selectsearch","onLiblistingChange","onLiblistingButtonChange","searchstrsarr","oldlimitrange","displayedColumns","datacolumns","displayedColumnsheader","formarray","dateSearch_condition","selectSearch_condition","autoSearch_condition","textSearch_condition","loading","preresult","dataSource","MatTableDataSource","modelChanged","Subject","modelChangedserver","pagechanged","subscriptions","subscriptioncount","tableFooterColumns","testvalue","stateGroups","searchListval","events","subscribe","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","debounceTime","filterautoval","currentautocompleteitem","field","apiurlval","serversearchdata","search_str","sort","date_search_source_countval","jwttokenval","results","openFromComponent","SnackbarComponent","duration","errormessage","Object","defineProperty","search_settings","search_settingsval","click_to_add_ananother_page","click_to_add_ananother_pageval","pagecount","grab_link","grab_linkval","custombutton","custombuttonval","date_search_source","date_search_sourceval","date_search_endpoint","date_search_endpointval","urlval","searchendpoint","searchendpointval","pdf_link","pdf_link_val","searchList","datasource","datasourceval","datacollectionval","skip","skipval","detail_datatype","detail_datatypeval","detail_skip_array","detail_skip_arrayval","sourcedata","sourcedataval","modify_header_array","modify_header_arrayval","deleteendpointval","updateendpoint","updateendpointval","apiurl","updatetable","jwttoken","statusarr","statusarrval","emailarray","emailarrayval","editroute","editrouteval","flug","ngOnChanges","changes","v","previousValue","selection","clear","allSearch","inputblur","myForm","controls","markAsUntouched","ngOnInit","stateGroup","valueChanges","startWith","_filter","x","temp","keys","coldef_list","header_list","i","replace","ff","tt","columnDef","header","cell","row","eval","objlength","this_1","indexOf","displayedcols","setTimeout","footersettings","key","customcols","tableheaders","ccolval","includes","hideaction","actioncolname","hidecounter","unshift","hidemultipleselectbutton","tempcolarr","tempcolarr2","n","reverse","Array","from","Set","data_list","createData","SelectionModel","sl","textsearch","CustomButtonListen","limitdata","sortdata","selecteddata","selected","searchdata","buttondata","img_modal_view","img","open","ImageView","panelClass","height","alldata","ngAfterContentInit","ngAfterViewInit","cssoverridesoncelltorow","e","cred","upTo","nativeElement","querySelector","classList","add","el","tagName","toLowerCase","parentNode","ngAfterContentChecked","ngOnDestroy","forEach","s","unsubscribe","clickmultipleselectoption","vals","action","btndata","onSubmit","errormg","markAsTouched","dateSearch","item","label","condition","textSearch","end_date","unix","start_date","$lte","Date","getTime","$gte","$regex","toString","m","tv","$or","conditionobj","assign","basecondition","limit","searchcondition","selectSearch","statusval","name","paging","maxpagecount","Number","addautosearchdata","remove","splice","autocompletechangedetected","next","autoselval","filterval","values","resetautocomp","document","autosearchfunction","textsearchfunction","toUpperCase","refreshdata","refreshalldata","filteredData","Confirmdialog","message","isconfirmation","filterValue","option","getstatus","pdfFlag","shatterblok_agreement_date","audiodeadline_agreement_date","grapurl","copyText","fullurl","selBox","createElement","style","position","left","top","opacity","body","appendChild","focus","select","execCommand","removeChild","openinternallink","navigate","route","openinternallinkwithparam","rdata","param","opencustombuttonactionlocaldata","dataarr","datafields","temparr","bypassSecurityTrustHtml","temphtml","detailview_override","resdata","c","headermessage","opencustombuttonactionapidata","otherparam","status","temprdata","b1","resdata_1","openextlinkwithparam","qtext","fulllink","paramtype","q","encodeURI","parseInt","window","clickurl","checkedlist","seldata","isAllSelected","masterToggle","checkboxLabel","isSelected","point","applyFilter","trim","paginator","firstPage","styleCell","col_name","fetchvideo","videodata","VideoPlayer","previewData","opennotes","notes","listendpoint","notedata","rowdata","listdata","afterClosed","viewdata","data1","data2","hasOwnProperty","tempdata","k","p","objk","entries","autoFocus","maxHeight","managestatus","bs","BottomSheet","items","afterDismissed","custombuttonlistner","custombuttonclick","btninfo","custombuttonfunc","unsafeurl","fields","bypassSecurityTrustResourceUrl","customdata","managestatusmultiple","newstatus_1","updateendpointmany","c_1","deletemultiple","dialogRef","deleteendpointmany","c_2","deletedata","editdata","sorttable","link1","count","gettypeof","artistxpPreview","singleData","posts_id_object","restlt","preview","Component","selector","template","MatDialog","MatBottomSheet","FormBuilder","Router","ComponentFactoryResolver","ViewContainerRef","DomSanitizer","MatSnackBar","ElementRef","Output","Input","MatSort","MatPaginator","onNoClick","close","deletenote","loading1","deleteendpoint","addnotes","notesval","note","user","addendpoint","userid","currentuserfullname","created_date","now","sanitizeUrl","MatDialogRef","Inject","MAT_DIALOG_DATA","loadervalue","openLink","bottomSheetRef","dismiss","MatBottomSheetRef","MAT_BOTTOM_SHEET_DATA","MatSnackBarRef","MAT_SNACK_BAR_DATA","snackBarRef","ShowformComponent","formdata","formdataval","formfieldrefreshdata","formfieldrefreshdataval","formfieldrefresh","formfieldrefreshval","formGroup","createForm","GeneratePassword","PasswordVal","makeid","patchValue","copyGeneratePassword","passwordFieldData","previewGeneratePassword","isPasswordVisible","characters","charactersLength","charAt","Math","floor","random","openCalendar","dateflag","navtocancel","cancelroute","g","elementRef","addEventListener","handleDrop","bind","cancel","triggerevents","preventDefault","getElementById","dataTransfer","target","multiple","filearray","deletefile","uploadfile","reader","FileReader","uploaded","fieldloading","onloadend","fetch","prefix","split","join","bucket","then","json","uploadURL","Blob","readAsArrayBuffer","uploadall","y","uploadfilemultiple","deletefilemultipleall","deletefilemultiple","f","indexf","filecount","flag","apideleteurl","formvaldata","formkey","formdatavalkey","setautocompletevalue","managefromcontrol","filterautocomplete","fieldval","filerfielddata","reloadautocomplete","currentautocomplete","removechipsingle","autocompletefiledvalue","removechipmultiple","removeControl","z","after","resetformdata","reset","checkchange","onFormFieldChange","fromval","dependent","vc","condval","initialize","this_2","temcontrolarr","temvalidationrule","fa","tcharr","validations","rule","Validators","required","setValidators","checkPasswords","autorequired","pattern","maxLength","min","max","minLength","tchvar","j","addControl","disabled","at","formBuilder","group","showform","submitactive","setChangeValidate","validate","titleAlert","updateValueAndValidity","chooseimg","querySelectorAll","pass","password","confirmPass","confirmpassword","setErrors","match","checkPassword","control","enteredPassword","test","requirements","checkInUseEmail","db","Observable","observer","alreadyInUse","complete","getError","hasError","getErrorPassword","tempformval","tfile","size","baseurl","tfilearr","valid","apiUrl","successmessage","redirectpath","scrollToFirstInvalidControl","firstInvalidControl","scroll","getTopOffset","behavior","controlEl","getBoundingClientRect","scrollY","fileChangeEvent","imageChangedEvent","imageCropped","croppedImage","base64","imageLoaded","cropperReady","loadImageFailed","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","DemoMaterialModule","YoutubeplayerComponent","CustomdataPipe","transform","Pipe","ListingModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MomentModule","CKEditorModule","ImageCropperModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"47DAAA,IAAAA,oCAECC,GAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAIZ,SAAAH,qBC8aAI,EAAAC,UAAAC,eAAA,SAAeC,EAA4BC,EAAiBC,EAAkBC,GAE5E,GAA0B,oBAAtBH,EAAaI,KAA4B,KACrCC,EAAqB,CACzBD,KAAM,YACNE,IAAK,uDACLC,OAAQ,OACRC,KAAM,CAAEC,KAAMN,IAEhBO,KAAKC,YAAYC,KAAKP,QACjB,GAA0B,iBAAtBL,EAAaI,MAAwD,oBAAtBJ,EAAaa,KACnC,IAA9Bb,EAAaa,KAAKC,WACpBJ,KAAKK,MAAQ,GACbL,KAAKK,MAAMC,KAAKhB,EAAaa,MAC7BI,QAAQC,IAAI,uBACZD,QAAQC,IAAIR,KAAKK,OACjBL,KAAKS,SAAWT,KAAKK,MAAMK,OAC3BV,KAAKW,aAAeX,KAAKK,MAAM,GAAGO,SAASd,KAAKe,iBAE7C,GAA0B,cAAtBvB,EAAaI,MAAqD,oBAAtBJ,EAAaa,KAAsB,KAClFW,EAAQd,KAAKK,MAAMU,UAAS,SAACZ,GAAQ,MAA6B,oBAAtBb,EAAaa,MAAwBA,EAAKa,KAAO1B,EAAaa,KAAKa,KACrHhB,KAAKK,MAAMS,GAASxB,EAAaa,KACjCH,KAAKS,SAAWT,KAAKK,MAAMK,OACN,MAAjBV,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGO,WACzCZ,KAAKW,aAAeX,KAAKK,MAAM,GAAGO,SAASd,KAAKe,YAElDN,QAAQC,IAAI,gCACZD,QAAQC,IAAIR,KAAKK,WACc,YAAtBf,EAAaI,KACtBM,KAAKK,MAAQL,KAAKK,MAAMY,OAAM,SAAEd,GAAqB,OAAAA,IAASb,EAAaa,OAC5C,aAAtBb,EAAaI,KACtBM,KAAKkB,UAAW,EACe,YAAtB5B,EAAaI,KACtBM,KAAKkB,UAAW,EACe,SAAtB5B,EAAaI,OACtBM,KAAKkB,UAAW,GAuBlB,GArBAX,QAAQC,IAAI,SACZD,QAAQC,IAAIR,KAAKK,OACI,MAAjBL,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGO,WACR,MAA7BZ,KAAKY,SAASrB,KAAsBS,KAAKY,SAASrB,GAAc,GACpES,KAAKmB,YAAa,EAClBZ,QAAQC,IAAI,2BACZD,QAAQC,IAAIR,KAAKK,MAAM,GAAGO,SAASd,KAAKe,YACxCb,KAAKY,SAASrB,GAAeS,KAAKK,MAAM,GAAGO,SAASd,KAAe,WAClC,KAA7BE,KAAKY,SAASrB,KAChBS,KAAKY,SAASrB,GAAc,KAC5BS,KAAKmB,WAAa,MAEpBZ,QAAQC,IAAI,kCACZD,QAAQC,IAAIhB,IAEK,UAAfA,IAEqC,MAAnCQ,KAAKoB,eAAe7B,KAAuBS,KAAKoB,eAAe7B,GAAc,IACjFS,KAAKoB,eAAe7B,GAAc,GACJ,MAA1BS,KAAKK,MAAM,GAAGD,UAAoBJ,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAM,GAAGD,WAExE,YAAfZ,IACFe,QAAQC,IAAI,0BAEZD,QAAQC,IAAIR,KAAKK,MAAMK,QACvBH,QAAQC,IAAIR,KAAKK,OACsB,MAAnCL,KAAKoB,eAAe7B,KAAuBS,KAAKoB,eAAe7B,GAAc,IAExD,GAArBS,KAAKK,MAAMK,SACTV,KAAKK,MAAM,IAAgC,MAA1BL,KAAKK,MAAM,GAAGD,UAAyD,MAArCJ,KAAKK,MAAM,GAAGD,SAASiB,aAC5ErB,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAM,GAAGD,UACnDJ,KAAKK,MAAQ,GACbL,KAAKsB,YAAc,IAEA,MAAjBtB,KAAKK,MAAM,IAAwC,MAA1BL,KAAKK,MAAM,GAAGD,UAAyD,MAArCJ,KAAKK,MAAM,GAAGD,SAASiB,aACpFrB,KAAKsB,YAAc,mCAGC,EAApBtB,KAAKK,MAAMK,QAAY,CAEzB,IAAK,IAAMa,KADXhB,QAAQC,IAAI,kCACIR,KAAKK,MACW,MAA1BL,KAAKK,MAAMkB,GAAGnB,UAAyD,MAArCJ,KAAKK,MAAMkB,GAAGnB,SAASiB,YAC3DrB,KAAKoB,eAAe7B,GAAYe,KAAKN,KAAKK,MAAMkB,GAAGnB,UAGvDJ,KAAKK,MAAQ,GAIjBE,QAAQC,IAAI,uBACZD,QAAQC,IAAIR,KAAKoB,gBACjBb,QAAQC,IAAIR,KAAKsB,cAMnBnC,EAAAC,UAAAoC,eAAA,aAcArC,EAAAC,UAAAqC,YAAA,WAOE,OALAlB,QAAQC,IAAI,YAGGR,KAAK0B,MAAMC,IAAI,sDAAsDC,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOtG3C,EAAAC,UAAA2C,YAAA,SAAYC,OAEJC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAe,MAYnB,OATA9B,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI,IAGGR,KAAK0B,MAAMY,KAAK,GAAKN,EAASO,OAAQ,GAAIN,GAAaL,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAKxF3C,EAAAC,UAAAoD,QAAA,SAAQR,OAEAC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAe,MAmBnB,OAhBA9B,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACZ1B,QAAQC,IAAI,IAGGR,KAAK0B,MAAMY,KAAU,WAAYN,EAAUC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMtF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOjB3C,EAAAC,UAAAyD,SAAA,SAASb,EAAelC,OAChBmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,mBACjBC,cAAevC,EAAKgD,SAgBxB,OAbAvC,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI,eACZD,QAAQC,IAAIyB,GACGjC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAGjB3C,EAAAC,UAAA8D,qBAAA,SAAqBlB,EAAelC,OAC5BmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,sBAcrB,OAXA7B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA+D,UAAA,SAAUnB,EAAelC,OACjBmC,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAiB,sBAcrB,OAXA7B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAMY,KAAKtC,KAAK+C,eAAef,GAAWgB,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMhH,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAOjB3C,EAAAC,UAAAgE,WAAA,SAAYC,EAAMP,EAAOP,OACjBN,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAgBnB,OATAP,EAAOe,UAAYtD,KAAKsD,UACTtD,KAAK0B,MAAMY,KAAKe,EAAMd,EAAQN,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMzE,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAGjB3C,EAAAC,UAAAmE,YAAA,SAAaF,EAAMd,GAkBjB,OAhBW,IAAIJ,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeE,EAAOO,QAG1BvC,QAAQC,IAAI,WACZD,QAAQC,IAAI,QACZD,QAAQC,IAAI6C,GACGrD,KAAK0B,MAAMY,KAAKe,EAAMd,GAAQX,KAAKa,UAAAA,WAAU,SAAEC,GAM5D,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAQjB3C,EAAAC,UAAAoE,QAAA,SAAQxB,EAAelC,EAAMkB,OACrBiB,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAe,MAOnB,OAJA9B,QAAQC,IAAI,IACZD,QAAQC,IAAI,YACZD,QAAQC,IAAIwB,GACGhC,KAAK0B,MAAM+B,IAAIzD,KAAK+C,eAAef,GAAY,IAAMhB,EAAIgC,KAAKC,UAAUnD,GAAOmC,GAAaL,KAAKC,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAK7H3C,EAAAC,UAAAsE,YAAA,SAAY1B,EAAelC,EAAMgD,EAAOP,OAYlCoB,EAXE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAmBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEvB,GAAIlB,EAAK8D,MACpBN,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAU2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAM9E,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAAyE,aAAA,SAAa7B,EAAelC,EAAMgD,EAAOP,OAgBnCoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEzC,KAAIA,IACfwD,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAU2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAM9E,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA0E,aAAA,SAAa9B,EAAelC,EAAMgD,EAAOP,OAWnCoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEwB,IAAKjE,IAChBwD,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAW,OAAQ2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMvF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAIjB3C,EAAAC,UAAA4E,iBAAA,SAAiBhC,EAAelC,EAAMmE,EAAKnB,EAAOP,OAW5CoB,EAVE1B,EAAc,CAClBC,QAAS,IAAIC,KAAAA,YAAY,CACvBC,eAAgB,mBAChBC,cAAeS,KAkBnB,OAVAa,EAAU,CAACpB,OAAMA,EAAEzC,KAAM,CAACiE,IAAKjE,EAAMmE,IAAGA,KAChCX,UAAYtD,KAAKsD,UACVtD,KAAK0B,MAAMY,KAAKN,EAAW,OAAQ2B,EAAS1B,GAAaL,KAAKa,UAAAA,WAAU,SAAEC,GAMvF,OALAnC,QAAQC,IAAI,2BACZD,QAAQoC,MAAMD,GAIPE,KAAAA,WAAWF,KAChBb,UAAAA,IAAG,SAACC,GAAO,OAAAA,MAMT3C,EAAAC,UAAA2D,eAAR,SAAuBf,GACrB,MAAO,GAAKA,uBApcfhD,GAAAA,sDANQkF,KAAAA,kBAAAA,KAAAA,kBAEAC,iBAAAA,wDAYNC,GAAAA,UAASnF,KAAA,CAAC,iBA+bbE,GAxaE,SAAAA,EAAoBuC,EACA2C,EACAC,GAFAtE,KAAA0B,MAAAA,EACA1B,KAAAqE,UAAAA,EACArE,KAAAsE,cAAAA,EA/BbtE,KAAAuE,0BAAiC,8DAgBjCvE,KAAAY,SAAgB,GAEhBZ,KAAAsB,YAAmB,GACnBtB,KAAAsD,UAAiB,KAExBtD,KAAAoB,eAAsB,GAapBpB,KAAKwE,QAAU,CAAEC,YAAa,GAAIC,WAAY,IAC9C1E,KAAKK,MAAQ,GACbL,KAAKC,YAAc,IAAI0E,GAAAA,aACvB3E,KAAK4E,cAAgBA,YAAAA,cACjB5E,KAAKsE,cAAcO,MAAM,eAC3B7E,KAAKsD,UAAYtD,KAAKsE,cAAc3C,IAAI,kBCtZxCmD,OAASC,2CA0Rb,SAAAC,iBAAmBC,EAAgCC,EAC1CC,EACAC,EACCC,EACAC,EACAC,EACD7D,EACA8D,EACCC,EACAC,GATV,IAAAC,EAAA3F,KAAmBA,KAAAiF,YAAAA,EAAgCjF,KAAAkF,OAAAA,EAC1ClF,KAAAmF,YAAAA,EACAnF,KAAAoF,GAAAA,EACCpF,KAAAqF,OAAAA,EACArF,KAAAsF,SAAAA,EACAtF,KAAAuF,UAAAA,EACDvF,KAAA0B,MAAAA,EACA1B,KAAAwF,UAAAA,EACCxF,KAAAyF,UAAAA,EACAzF,KAAA0F,YAAAA,EAxRV1F,KAAA4F,UAAY,IAAIC,MAAAA,YAYhB7F,KAAA8F,SAAmB,EAkBnB9F,KAAA+F,QAAe,GACf/F,KAAAgG,gBAAuB,GACvBhG,KAAAiG,qBAA4B,GAC5BjG,KAAAkG,QAAe,GACflG,KAAAmG,QAAe,GACfnG,KAAAoG,UAAiB,EACjBpG,KAAAqG,WAAkB,GAEXrG,KAAAsG,WAAkB,GAClBtG,KAAAuG,aAAoB,GAEpBvG,KAAAwG,OAAc,GACdxG,KAAAyG,YAAmB,GACnBzG,KAAA0G,IAAU,EACV1G,KAAA2G,KAAW,EACX3G,KAAA4G,MAAY,EACZ5G,KAAA6G,KAAW,EACX7G,KAAA8G,gBAAsB,EAC7B9G,KAAA+G,UAAiB,KAEV/G,KAAAgH,oBAA2B,GAIlChH,KAAAiH,MAAsB,UACtBjH,KAAAkH,KAAY,gBACZlH,KAAAmH,MAAQ,GACRnH,KAAAoH,YAAc,GAGdpH,KAAAqH,aAAmB,EACnBrH,KAAAsH,aAAoB,GAEVtH,KAAAuH,mBAAqB,IAAI5C,GAAAA,aAEzB3E,KAAAwH,yBAA2B,IAAI7C,GAAAA,aAEzC3E,KAAAyH,cAAqB,GACrBzH,KAAA0H,cAAqB,GA6KrB1H,KAAA2H,iBAA6B,GAC7B3H,KAAA4H,YAAwB,GACxB5H,KAAA6H,uBAAmC,GACnC7H,KAAA8H,UAAiB,GAEjB9H,KAAA+H,qBAA4B,GAC5B/H,KAAAgI,uBAA8B,GAC9BhI,KAAAiI,qBAA4B,GAC5BjI,KAAAkI,qBAA4B,GAG5BlI,KAAAmI,SAAe,EACRnI,KAAAoI,UAAiB,GAExBpI,KAAAqI,WAAa,IAAIC,SAAAA,mBAOjBtI,KAAAuI,aAAe,IAAIC,KAAAA,QACnBxI,KAAAyI,mBAAqB,IAAID,KAAAA,QACzBxI,KAAA0I,YAAc,IAAIF,KAAAA,QAClBxI,KAAA2I,cAAgC,GAChC3I,KAAA4I,kBAAoB,EACpB5I,KAAA6I,mBAA+B,GAC/B7I,KAAA8I,UAAiB,KAcf9I,KAAK+I,YAAc/I,KAAKgJ,cACxBhJ,KAAKqF,OAAO4D,OAAOC,UAAS,SAAEC,GAC5B,QAAQ,GACN,KAAKA,aAAiBC,OAAAA,gBACpBzD,EAAKwC,SAAU,EACf,MAEF,KAAKgB,aAAiBE,OAAAA,cACtB,KAAKF,aAAiBG,OAAAA,iBACtB,KAAKH,aAAiBI,OAAAA,gBACpB5D,EAAKwC,SAAU,KASrBnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKuI,aACjD3G,KACC4H,UAAAA,aAAa,MACdN,UAAS,WAGRvD,EAAK8D,cAAc9D,EAAK+D,2BAG5B1J,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKyI,mBACjD7G,KACC4H,UAAAA,aAAa,MAGdN,UAAS,WAGR,GAAgE,MAA5DvD,EAAKK,gBAAgBL,EAAK+D,wBAAwBC,QAA8E,IAA5DhE,EAAKK,gBAAgBL,EAAK+D,wBAAwBC,OAAc,KAKlIpH,EAFEc,EAAOsC,EAAKiE,UAAY,GAAKjE,EAAK+D,wBAAwBG,iBAAiB7H,SAIjFO,EAAS,CACPuH,WAAYnE,EAAKK,gBAAgBL,EAAK+D,wBAAwBC,OAC9DI,KAAM,CACJJ,MAAOhE,EAAKc,YAAYkD,MACxBjK,KAAMiG,EAAKc,YAAY/G,OAO3BiG,EAAKqE,4BAA8B,EACnCrE,EAAKwC,SAAU,EACfxC,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAY7B,WAAWC,EAAMsC,EAAKsE,YAAa1H,GAAQ2G,UAAS,SAACpH,OAC/G0E,EAEJb,EAAKwC,SAAU,EAID,OAFd3B,EAAS1E,IAE+B,MAAlB0E,EAAO0D,SAAyC,MAAtB1D,EAAO0D,QAAQpI,MAAa6D,EAAKG,SAAWU,EAAO0D,QAAQpI,IAAIpB,QAC7F,MAAd8F,EAAO1E,KAAmC,EAApB0E,EAAO1E,IAAIpB,QAEnCiF,EAAKM,qBAAuBO,EAAO1E,IACnC6D,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,kCAGxB3E,EAAKM,qBAAuB,GAE5BN,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,qCAK1B3E,EAAKwC,SAAU,OAwtD3B,OA5/DEoC,OAAAC,eACIxF,iBAAA5F,UAAA,kBAAe,KADnB,SACoBqL,GAClBzK,KAAK0K,mBAAqBD,mCAW5BF,OAAAC,eACIxF,iBAAA5F,UAAA,8BAA2B,KAD/B,SACgCuL,GAC9B3K,KAAK4K,+BAAiCD,mCAExCJ,OAAAC,eACIxF,iBAAA5F,UAAA,YAAS,KADb,SACcmH,GACZvG,KAAKuG,aAAeA,EACpBvG,KAAK0H,cAAcpH,KAAKiG,oCAG1BgE,OAAAC,eACIxF,iBAAA5F,UAAA,2BAAwB,KAD5B,SAC6B4K,GAC3BhK,KAAKgK,4BAA8BA,EACK,GAApChK,KAAKgK,8BAAoChK,KAAKuG,aAAasE,UAAY,oCAI7EN,OAAAC,eACIxF,iBAAA5F,UAAA,YAAS,KADb,SACc0L,GACZ9K,KAAK+K,aAAeD,mCAGtBP,OAAAC,eACIxF,iBAAA5F,UAAA,eAAY,KADhB,SACiB4L,GACfhL,KAAKiL,gBAAkBD,mCAGzBT,OAAAC,eACIxF,iBAAA5F,UAAA,qBAAkB,KADtB,SACuB8L,GACrBlL,KAAKmL,sBAAwBD,mCAE/BX,OAAAC,eACIxF,iBAAA5F,UAAA,WAAQ,KADZ,SACaqH,GACXzG,KAAKyG,YAAcA,EACnBlG,QAAQC,IAAIR,KAAKyG,YAAa,gDAGhC8D,OAAAC,eACIxF,iBAAA5F,UAAA,uBAAoB,KADxB,SACyBgM,GACvBpL,KAAKqL,wBAA0BD,mCAEjCb,OAAAC,eACIxF,iBAAA5F,UAAA,MAAG,KADP,SACQQ,GACNI,KAAKsL,OAAS1L,mCAEhB2K,OAAAC,eACIxF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBmM,GACjBvL,KAAKwL,kBAAoBD,mCAE3BhB,OAAAC,eACIxF,iBAAA5F,UAAA,WAAQ,KADZ,SACaqM,GACXzL,KAAK0L,aAAeD,mCAEtBlB,OAAAC,eACIxF,iBAAA5F,UAAA,aAAU,KADd,SACeuM,GACb3L,KAAKgJ,cAAgB2C,mCAEvBpB,OAAAC,eACIxF,iBAAA5F,UAAA,UAAO,KADX,SACYkH,GACVtG,KAAKsG,WAAa,GAClBtG,KAAKsG,WAAaA,mCAIpBiE,OAAAC,eACIxF,iBAAA5F,UAAA,aAAU,KADd,SACewM,GACb5L,KAAK6L,cAAgB,GACrB7L,KAAK6L,cAAgBD,mCAEvBrB,OAAAC,eACIxF,iBAAA5F,UAAA,iBAAc,KADlB,SACmB0M,GACjB9L,KAAK8L,kBAAoBA,mCAG3BvB,OAAAC,eACIxF,iBAAA5F,UAAA,OAAI,KADR,SACS2M,GACP/L,KAAKgM,QAAUD,mCAEjBxB,OAAAC,eACIxF,iBAAA5F,UAAA,kBAAe,KADnB,SACoB6M,GAClBjM,KAAKkM,mBAAqBD,mCAE5B1B,OAAAC,eACIxF,iBAAA5F,UAAA,oBAAiB,KADrB,SACsB+M,GACpBnM,KAAKoM,qBAAuBD,mCAG9B5B,OAAAC,eACIxF,iBAAA5F,UAAA,aAAU,KADd,SACeiN,GACbrM,KAAKsM,cAAgBD,mCAGvB9B,OAAAC,eACIxF,iBAAA5F,UAAA,sBAAmB,KADvB,SACwBmN,GACtBvM,KAAKwM,uBAAyBD,mCAGhChC,OAAAC,eACIxF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBqN,GACjBzM,KAAKyM,kBAAoBA,mCAG3BlC,OAAAC,eACIxF,iBAAA5F,UAAA,iBAAc,KADlB,SACmBsN,GACjB1M,KAAK2M,kBAAoBD,mCAE3BnC,OAAAC,eACIxF,iBAAA5F,UAAA,SAAM,KADV,SACWwN,GACT5M,KAAK4J,UAAYgD,mCAGnBrC,OAAAC,eACIxF,iBAAA5F,UAAA,cAAW,KADf,SACgByN,GACd7M,KAAK8G,eAAiB+F,mCAIxBtC,OAAAC,eACIxF,iBAAA5F,UAAA,WAAQ,KADZ,SACa0N,GACa9M,KAAKiK,YAAb,MAAZ6C,EAAuCA,EAAsC,oCAInFvC,OAAAC,eACIxF,iBAAA5F,UAAA,YAAS,KADb,SACc2N,GACZ/M,KAAKgN,aAAeD,mCAGtBxC,OAAAC,eACIxF,iBAAA5F,UAAA,aAAU,KADd,SACe6N,GACbjN,KAAKkN,cAAgBD,mCAGvB1C,OAAAC,eACIxF,iBAAA5F,UAAA,YAAS,KADb,SACc+N,GACZnN,KAAKoN,aAAeD,mCAKtB5C,OAAAC,eACIxF,iBAAA5F,UAAA,mBAAgB,KADpB,SACqBiO,GACnBrN,KAAKqH,aAAc,mCAIrBkD,OAAAC,eACIxF,iBAAA5F,UAAA,qBAAkB,KADtB,SACuB6E,GACrBjE,KAAKgH,oBAAsB/C,EAC3B1D,QAAQC,IAAIR,KAAKgH,oBAAqB,wDAyJxChC,iBAAA5F,UAAAkO,YAAA,SAAYC,GAGV,IAAK,IAAMC,KAAKD,EAEL,eAALC,GAE8B,MAA5BD,EAAQC,GAAGC,gBACbzN,KAAK0N,UAAUC,QACf3N,KAAK4N,cAOb5I,iBAAA5F,UAAAyO,UAAA,SAAU5J,GAERjE,KAAK8N,OAAOC,SAAS9J,GAAK+J,mBAE5BhJ,iBAAA5F,UAAA6O,SAAA,WAAA,IAAAtI,MAAA3F,KA2BEA,KAAKkO,WAAalO,KAAK4F,UAAUuI,aAC9BvM,KACCwM,UAAAA,UAAU,IACVvM,UAAAA,IAAG,SAACsF,GAAS,OAAAxB,MAAK0I,QAAQlH,MAW9BnH,KAAKsO,EAAItO,KAAK6L,kBACRyC,EAAItO,KAAKsO,EACXtO,KAAK6L,gBAAe7L,KAAK8F,SAAW9F,KAAK6L,cAAcnL,YAEvD6N,KAAO,GACLC,KAAOF,EAAE,GACfC,KAAOhE,OAAOiE,KAAKA,MAInB,QAFMC,YAAc,GACdC,YAAc,GACXC,EAAI,EAAGA,EAAIJ,KAAK7N,OAAQiO,IAC/BF,YAAYnO,KAAKiO,KAAKI,GAAGC,QAAQ,MAAO,MACxCF,YAAYpO,KAAKiO,KAAKI,IAMxB3O,KAAK+F,QAAU,GAEf,yBAAS4I,OACDE,GAAK,OAAOJ,YAAYE,GACxBG,GAAK,CAAEC,UAAW,GAAGN,YAAYE,GAAMK,OAAQ,GAAGN,YAAYC,GAAMM,KAAI,SAAGC,KAAQ,OAAAC,KAAKN,KAAKO,UAAWV,YAAYhO,QAI1H,IAAK,IAAMa,KAAK8N,OAAK7C,uBACfjL,GAAKuN,GAAGE,SAAUF,GAAGE,OAASK,OAAK7C,uBAAuBjL,KAGrB,GAAvC8N,OAAKrD,QAAQsD,QAAQR,GAAGC,YAC1BM,OAAKtJ,QAAQzF,KAAKwO,iBAXbH,EAAI,EAAGA,EAAIF,YAAY/N,OAAQiO,YAA/BA,OAcLY,cAAgB,GACpBvP,KAAKoG,UAAY,EACjBoJ,WAAU,WACR7J,MAAKS,UAAY,GAChB,KAEHmJ,cAAgBvP,KAAK+F,QAAQlE,IAAG,SAACyM,GAAK,OAAAA,EAAES,YACF,MAAlC/O,KAAKsG,WAAWmJ,eAClBzP,KAAK6I,mBAAqB7I,KAAKsG,WAAWmJ,eAAe5N,IAAG,SAACyM,GAAK,OAAAA,EAAEoB,MAEjE1P,KAAK6I,mBAAqB,OAE3B8G,WAAkB,GAKtB,GAHuB,MAAnB3P,KAAKsG,YAAsD,MAAhCtG,KAAKsG,WAAWsJ,eAC7CD,WAAa3P,KAAKsG,WAAWsJ,cAEb,MAAdD,YAA0C,EAApBA,WAAWjP,OAAY,KAC3CmP,QAAkB,GACtB,IAAK,IAAMrC,KAAKmC,WACd,GAA6C,GAAzCJ,cAAcO,SAASH,WAAWnC,IAAc,CAClD,IAAK,IAAMjM,KAAKvB,KAAKwM,uBACfjL,GAAKoO,WAAWnC,KAAMqC,QAAU7P,KAAKwM,uBAAuBjL,IAElEvB,KAAK+F,QAAQzF,KAAK,CAAEyO,UAAWY,WAAWnC,GAAIwB,OAAQa,QAASZ,KAAM,OAGzEM,cAAgBI,WAKgB,MAA9B3P,KAAKsG,WAAWyJ,YAAoD,GAA9B/P,KAAKsG,WAAWyJ,aACxDR,cAAcjP,KAAsC,MAAjCN,KAAKsG,WAAW0J,cAAwB,UAAYhQ,KAAKsG,WAAW0J,eACvFhQ,KAAK+F,QAAQzF,KAAK,CAAEyO,UAA4C,MAAjC/O,KAAKsG,WAAW0J,cAAwB,UAAYhQ,KAAKsG,WAAW0J,cAAehB,OAAQ,UAAWC,KAAM,QAE1G,MAA/BjP,KAAKsG,WAAW2J,aAAsD,GAA/BjQ,KAAKsG,WAAW2J,cACzDV,cAAcW,QAAQ,KACtBlQ,KAAK+F,QAAQzF,KAAK,CAAEyO,UAAW,IAAKC,OAAQ,IAAKC,KAAM,QAIzDjP,KAAK2H,iBAAmB,GACxB3H,KAAK2H,iBAAmB4H,cAEwB,GAA5CvP,KAAKsG,WAAW6J,2BAClBnQ,KAAK2H,iBAAiBuI,QAAQ,UAC9BlQ,KAAK+F,QAAQzF,KAAK,CAAEyO,UAAW,SAAUC,OAAQ,SAAUC,KAAM,YAE/DmB,WAAa,GACbC,YAAc,GAElB,IAAK,IAAIC,KADTtQ,KAAK+F,QAAQwK,UACCvQ,KAAK+F,SACqC,GAAlDqK,WAAWd,QAAQtP,KAAK+F,QAAQuK,GAAGvB,YACrCsB,YAAY/P,KAAKN,KAAK+F,QAAQuK,IAChCF,WAAW9P,KAAKN,KAAK+F,QAAQuK,GAAGvB,WAGlC/O,KAAK+F,QAAUsK,YAMfrQ,KAAK2H,iBAAmB6I,MAAMC,KAAK,IAAIC,IAAI1Q,KAAK2H,mBAGhD,QADMgJ,UAAY,GACThC,EAAI,EAAGA,EAAI3O,KAAKsO,EAAE5N,OAAQiO,IACjCgC,UAAUrQ,KAAKN,KAAK4Q,WAAWtC,EAAEK,KAEnC3O,KAAKkG,QAAUyK,UACf3Q,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmB,IACzCtI,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmBqI,WACzC3Q,KAAK0N,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAM1CrB,WAAU,WAIR,GAA4C,MAAxC7J,MAAK+E,mBAAmBpD,aAE1B,IAAK,IAAMwJ,KAAMnL,MAAK+E,mBAAmBpD,aACe,MAAlD3B,MAAK+E,mBAAmBpD,aAAawJ,GAAI3J,QAC3CxB,MAAK2B,aAAa3B,MAAK+E,mBAAmBpD,aAAawJ,GAAInH,OACzDhE,MAAK+E,mBAAmBpD,aAAawJ,GAAI3J,OAMjD,GAA0C,MAAtCxB,MAAK+E,mBAAmBqG,WAE1B,IAAK,IAAMD,KAAMnL,MAAK+E,mBAAmBqG,WACa,MAAhDpL,MAAK+E,mBAAmBqG,WAAWD,GAAI3J,QACzCxB,MAAKQ,QAAQR,MAAK+E,mBAAmBqG,WAAWD,GAAInH,OAClDhE,MAAK+E,mBAAmBqG,WAAWD,GAAI3J,QAK9C,MAILnC,iBAAA5F,UAAA4R,mBAAA,SAAmB/M,GAEjBjE,KAAKwH,yBAAyBtH,KAC5B,CACE+Q,UAAWjR,KAAKuG,aAAc2K,SAAUlR,KAAKyG,YAAa0K,aAAcnR,KAAK0N,UAAU0D,SAASC,WAAWrR,KAAK0K,mBAAmB4G,WAAWrN,KAUpJe,iBAAA5F,UAAAmS,eAAA,SAAeC,GAEKxR,KAAKkF,OAAOuM,KAAKC,UAAW,CAE5CC,WAAY,CAAC,kBAAmB,iCAChCC,OAAQ,OACR9R,KAAM,CAAE+R,QAASL,MAIrBxM,iBAAA5F,UAAA0S,mBAAA,aAGA9M,iBAAA5F,UAAA2S,gBAAA,WAAA,IAAApM,EAAA3F,KAGEwP,WAAU,WACR,GAAuB,MAAnB7J,EAAKW,YAAiE,MAA3CX,EAAKW,WAAW0L,wBAC7C,IAAK,IAAMC,KAAKtM,EAAKW,WAAW0L,wBAAyB,KAEjDE,EAAOvM,EAAKwM,KAAKxM,EAAKD,YAAY0M,cAAcC,cAAc,IAAM1M,EAAKW,WAAW0L,wBAAwBC,GAAGvC,KAAM,MAC/G,MAARwC,GAAcA,EAAKI,UAAUC,IAAI5M,EAAKW,WAAW0L,wBAAwBC,GAAGhO,OAMnF,MAKLe,iBAAA5F,UAAA+S,KAAA,SAAKK,EAAIC,GAGP,IAFAA,EAAUA,EAAQC,cAEXF,GAAMA,EAAGG,YAEd,IADAH,EAAKA,EAAGG,YACDF,SAAWD,EAAGC,QAAQC,eAAiBD,EAC5C,OAAOD,EAQX,OAAO,MAETxN,iBAAA5F,UAAAwT,sBAAA,aAKA5N,iBAAA5F,UAAAyT,YAAA,WAEE7S,KAAK2I,cAAcmK,QAAO,SAACC,GAAK,OAAAA,EAAEC,iBAGpChO,iBAAA5F,UAAA6T,0BAAA,SAA0BC,GACxBlT,KAAKuH,mBAAmBrH,KAAK,CAAEiT,OAAQ,4BAA6BlC,UAAWjR,KAAKuG,aAAc2K,SAAUlR,KAAKyG,YAAa0K,aAAcnR,KAAK0N,UAAU0D,SAAUgC,QAASF,KAIhLlO,iBAAA5F,UAAAiU,SAAA,eACM/E,EACJtO,KAAKsT,QAAU,GACFtT,KAAK8N,OAAO3G,MACzB,IAAKmH,KAAKtO,KAAK8N,OAAOC,SACpB/N,KAAK8N,OAAOC,SAASO,GAAGiF,iBAG5BvO,iBAAA5F,UAAAoU,WAAA,SAAWvP,EAAUwP,GACnBzT,KAAKyH,cAAcnH,KAAK,CAAE2D,IAAKjE,KAAKmG,QAAQlC,GAAMyP,MAAOD,EAAKC,MAAOhE,IAAKzL,IAM7DjE,KAAK4J,UAAiB5J,KAAK8L,kBAC1B9L,KAAK4J,UAAiB5J,KAAK8L,sBAErC6H,EACEC,EAAkB,GAIxB,GAHAD,EAAY,GACZ3T,KAAKuG,aAAasE,UAAY,EAC9B7K,KAAKuG,aAAawF,KAAO,EACW,MAAhCjH,OAAO9E,KAAK6T,UAAUC,QAAoD,MAAlChP,OAAO9E,KAAK+T,YAAYD,OA+GlEvT,QAAQC,IAAI,aA/Gd,CAuBE,IAAK,IAAMmO,KAnBX3O,KAAK+H,qBAAuB,GAC5B/H,KAAK+H,qBAAuB4L,EAEP,MAAjB3T,KAAK6T,UAAuC,MAAnB7T,KAAK+T,aAChCJ,EAAU1P,GAAO,CACf+P,KAAM,IAAIC,KAAKjU,KAAK6T,UAAUK,UAC9BC,KAAM,IAAIF,KAAKjU,KAAK+T,YAAYG,YAGb,MAAnBlU,KAAK+T,YAAwC,MAAjB/T,KAAK6T,UAA4C,GAAxB7T,KAAK6T,SAASnT,SACrEiT,EAAU1P,GAAO,CACfkQ,KAAM,IAAIF,KAAKjU,KAAK+T,YAAYG,YAGf,MAAjBlU,KAAK6T,UAAwC,MAAnB7T,KAAK+T,YAAgD,GAA1B/T,KAAK+T,WAAWrT,SACvEiT,EAAU1P,GAAO,CACf+P,KAAM,IAAIC,KAAKjU,KAAK6T,UAAUK,YAGlBlU,KAAKmG,QAEI,MAAnBnG,KAAKmG,QAAQwI,IAAiC,IAAnB3O,KAAKmG,QAAQwI,KAC1CiF,EAAWjF,GAAK,CAAEyF,OAAQpU,KAAKmG,QAAQwI,GAAG0F,WAAW3B,oBAInDrM,EAAkB,GAExB,IAAK,IAAM9E,KAAKvB,KAAKqG,WACnB,IAAK,IAAMiO,KAAKtU,KAAKqG,WAAW9E,GAAI,KAC5BgT,EAAU,GAChBA,EAAGhT,GAAKvB,KAAKqG,WAAW9E,GAAG+S,GAAGrQ,IAAIoQ,WAAW3B,cACvB,MAAlBrM,EAAWmO,MAAenO,EAAWmO,IAAM,IAE/CnO,EAAWmO,IAAIlU,KAAKiU,OAIlBE,EAAelK,OAAOmK,OAAO,GAAId,EAAY5T,KAAK+H,qBAAsB1B,EAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWqO,gBAC9H,CACPhB,UAAW,CACTiB,MAAO5U,KAAKuG,aAAaqO,MACzB7I,KAAM,GAERhC,KAAM,CACJJ,MAAO3J,KAAKyG,YAAYkD,MACxBjK,KAAMM,KAAKyG,YAAY/G,MAEzBmV,gBAAiBJ,MAiEvBzP,iBAAA5F,UAAA0V,aAAA,SAAa3N,EAAYzH,EAAWqV,GAMlC/U,KAAKyH,cAAc/H,EAAKiK,OAAM,CAAM1F,IAAK8Q,EAAUC,KAAMtB,MAAOhU,EAAKgU,MAAOhE,IAAKhQ,EAAKiK,OAElE,MAAhB3J,KAAKmG,SAA0C,MAAvBnG,KAAKmG,QAAQgB,IACjCnH,KAAKmG,QAAQgB,GAAOkN,WAAW3B,cAmB1B1S,KAAK4J,UAAiB5J,KAAKqL,yBAG5B,IACF3L,EAAKiK,OAASxC,EAExBnH,KAAKgI,uBAAuBtI,EAAKiK,OAASxC,MAEpCsN,EAAelK,OAAOmK,OAAO,GAAI1U,KAAKkI,qBAAsBlI,KAAK+H,qBAAsB/H,KAAKiI,qBAAsBjI,KAAKgI,wBAEnHhI,KAAKmL,uBAmBjBnG,iBAAA5F,UAAA6V,OAAA,SAAOhR,GAAP,IAAA0B,EAAA3F,KAEEO,QAAQC,IAAIR,KAAKuG,aAAc,WACI,MAA/BvG,KAAKuG,aAAasE,YAAmB7K,KAAKuG,aAAasE,UAAY,GACxC,MAA3B7K,KAAKuG,aAAaqO,QAAe5U,KAAKuG,aAAaqO,MAAQ,IAChC,MAA3B5U,KAAKuG,aAAaqO,OAA2C,IAA1B5U,KAAKuG,aAAaqO,QACvD5U,KAAKuG,aAAaqO,MAAQ,IAC1B5U,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,oDAItB4K,EAAuBC,OAAOnV,KAAKgK,4BAA+BhK,KAAKuG,aAAkB,OAY7F,GAXA2O,IAAgB,EAOL,GAAPjR,IACFjE,KAAKuG,aAAawF,KAAQ/L,KAAKuG,aAAsB,UAAIvG,KAAKuG,aAAaqO,MAC3E5U,KAAKuG,aAAasE,gBAER,GAAR5G,GAAajE,KAAKuG,aAAawF,KAAO/L,KAAKuG,aAAaqO,OAA5D,EAGY,GAAR3Q,GAAajE,KAAKuG,aAAawF,MAAQ/L,KAAKuG,aAAaqO,QAE3D5U,KAAKuG,aAAawF,MAAQ/L,KAAKuG,aAAasE,UAAY,GAAK7K,KAAKuG,aAAaqO,MAC/E5U,KAAKuG,aAAasE,aAEV,EAAN5G,IACiC,GAA/BjE,KAAKuG,aAAasE,UAAkB7K,KAAKuG,aAAawF,KAAO,EAAY/L,KAAKuG,aAAawF,MAAQ/L,KAAKuG,aAAasE,UAAY,GAAK7K,KAAKuG,aAAaqO,OAG1J5U,KAAKuG,aAAasE,UAAaqK,EAAe,IAChDlV,KAAKuG,aAAasE,UAAYqK,EAAe,EAC7ClV,KAAKuG,aAAawF,MAAQ/L,KAAKuG,aAAasE,UAAY,GAAK7K,KAAKuG,aAAaqO,WAI3EhB,EAAkB,GAGxB,IAAK,IAAMjF,KAAK3O,KAAKmG,QAC6B,MAA5CnG,KAAKmG,QAAQwI,GAAG0F,WAAW3B,eAAqE,IAA5C1S,KAAKmG,QAAQwI,GAAG0F,WAAW3B,gBACjFkB,EAAWjF,GAAK,CAAEyF,OAAQpU,KAAKmG,QAAQwI,GAAG0F,WAAW3B,oBAKnDrM,EAAkB,GAExB,IAAK,IAAM9E,KAAKvB,KAAKqG,WACnB,IAAK,IAAMiO,KAAKtU,KAAKqG,WAAW9E,GAAI,KAC5BgT,EAAU,GAChBA,EAAGhT,GAAKvB,KAAKqG,WAAW9E,GAAG+S,GAAGrQ,IAAIoQ,WAAW3B,cAEvB,MAAlBrM,EAAWmO,MAAenO,EAAWmO,IAAM,IAG/CnO,EAAWmO,IAAIlU,KAAKiU,OAIlBE,EAAelK,OAAOmK,OAAO,GAAId,EAAY5T,KAAK+H,qBAAsB1B,EAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWqO,eACjIpS,EAAS,CACboR,UAAW,CACTiB,MAAO5U,KAAKuG,aAAaqO,MACzB7I,KAAM/L,KAAKuG,aAAawF,MAE1BhC,KAAM,CACJJ,MAAO3J,KAAKyG,YAAYkD,MACxBjK,KAAMM,KAAKyG,YAAY/G,MAEzBmV,gBAAiBJ,GAGbpR,EAAOrD,KAAK4J,UAAY,GAAK5J,KAAK8L,kBAQxC9L,KAAKmI,SAAU,EACfnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAKiK,YAAa1H,GAAQ2G,UAAS,SAACpH,GACnH6D,EAAKa,OAAS1E,EAEiB,MAA3B6D,EAAKa,OAAO0D,QAAQpI,KAAgD,EAAjC6D,EAAKa,OAAO0D,QAAQpI,IAAIpB,QAC7DiF,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,SAAUlC,UAAWtL,EAAKY,aAAcsO,gBAAiBJ,EAAcvD,SAAUvL,EAAKc,cAC7Hd,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKa,OAAO0D,QAAQpI,KAC7D6D,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,+BA2BxB3E,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,oCAG1B3E,EAAKwC,SAAU,IAKjBnI,KAAK0N,UAAUC,UAGjB3I,iBAAA5F,UAAAgW,kBAAA,SAAkBnR,KAIlBe,iBAAA5F,UAAAiW,OAAA,SAAOpR,EAAU0K,EAAQhF,GAEO,MAA1B3J,KAAKqG,WAAWsD,IAAkB3J,KAAKqG,WAAWsD,GAAO2L,OAAO3G,EAAG,IAEzE3J,iBAAA5F,UAAAmW,2BAAA,SAA2B9B,GACzBzT,KAAK0J,wBAA0B+J,EAC/BzT,KAAKiG,qBAAuB,GAEyB,MAAjDjG,KAAK0J,wBAAwBG,iBAC/B7J,KAAKuI,aAAaiN,OAGlBxV,KAAKyI,mBAAmB+M,QAI5BxQ,iBAAA5F,UAAAqK,cAAA,SAAc3J,OAEN2V,EAAazV,KAAKgG,gBAAgBlG,EAAK6J,OAE7C,GADA3J,KAAKiG,qBAAuB,GACY,MAApCjG,KAAKgG,gBAAgBlG,EAAK6J,QAAsD,IAApC3J,KAAKgG,gBAAgBlG,EAAK6J,OAAc,KAChF+L,EAAY5V,EAAK6V,OAAO1U,OAAM,SAAWgR,GAE7C,OAAOA,EAAE+C,KAAKX,WAAW3B,cAAc5C,SAAS2F,EAAW/C,iBAE7D1S,KAAKiG,qBAAuByP,IAGhC1Q,iBAAA5F,UAAAwW,cAAA,SAAc3R,GACI4R,SAASxD,cAAc,sBAAwBpO,EAAI0F,OAChExC,MAAQ,IAEbnC,iBAAA5F,UAAA0W,mBAAA,SAAmB3O,EAAYrH,EAAW2T,GAGxCzT,KAAKyH,cAAcnH,KAAK,CAAE2D,IAAKjE,KAAKgG,gBAAgBmB,GAAQuM,MAAOD,EAAKC,MAAOhE,IAAKvI,IACtD,MAA1BnH,KAAKqG,WAAWc,KAClBnH,KAAKqG,WAAWc,GAAS,IAE3BnH,KAAKqG,WAAWc,GAAO7G,KAAKR,GAE5BE,KAAKgG,gBAAgBmB,GAAS,KAC9BnH,KAAKiG,qBAAuB,GACZ4P,SAASxD,cAAc,sBAAwBlL,GAC5DA,MAAQ,IAyBbnC,iBAAA5F,UAAA2W,mBAAA,SAAmB5O,EAAYsM,GAC7B,GAA2B,IAAvBzT,KAAKmG,QAAQgB,GAAc,KACvBrG,EAAQd,KAAKyH,cAAc6H,QAAQtP,KAAKyH,cAAcN,IAC5D5G,QAAQC,IAAIM,EAAO,gBACZd,KAAKyH,cAAcN,QAK1BnH,KAAKyH,cAAcN,GAAM,CAAMlD,IAAKjE,KAAKmG,QAAQgB,GAAQuM,MAAOD,EAAKC,MAAOhE,IAAKvI,GAEtEnH,KAAK4J,UAAiB5J,KAAKqL,4BAElCsI,EAAiB,GACnB1P,EAAM,GACU,MAAhBjE,KAAKmG,SAA0C,MAAvBnG,KAAKmG,QAAQgB,KACvClD,EAAMjE,KAAKmG,QAAQgB,GAAOkN,WAAW3B,eAGZ,MAAvB1S,KAAKmG,QAAQgB,IAA+C,EAA7BnH,KAAKmG,QAAQgB,GAAOzG,QAAc,CAAE8T,IAAK,CAACxU,KAAKmG,QAAQgB,GAAOkN,WAAW3B,cAAe1S,KAAKmG,QAAQgB,GAAO6O,kBAAoBrC,EAAUxM,EAAQ,UAAYlD,GACjMjE,KAAKkI,qBAAuB,GAC5BlI,KAAKkI,qBAAuByL,MAEtBc,EAAelK,OAAOmK,OAAO,GAAI1U,KAAKkI,qBAAsBlI,KAAK+H,qBAAsB/H,KAAKiI,qBAAsBjI,KAAKgI,wBAEnHhI,KAAKmL,uBAsBjBnG,iBAAA5F,UAAA6W,YAAA,WACE1V,QAAQC,IAAI,QACZR,KAAKqG,WAAa,GAClBrG,KAAKmG,QAAU,GACfnG,KAAKsH,aAAe,GACpBtH,KAAK+T,WAAa,KAClB/T,KAAKuG,aAAawF,KAAO,EACzB/L,KAAK6T,SAAW,KAChB7T,KAAKgI,uBAAyB,GAC9BhI,KAAK+H,qBAAuB,GAC5B/H,KAAK4N,YACL5N,KAAK0N,UAAUC,SAEjB3I,iBAAA5F,UAAA8W,eAAA,SAAejS,GAMb,GALAjE,KAAKqI,WAAa,IAAIC,SAAAA,mBAAmBtI,KAAKkG,SAC9ClG,KAAK0N,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAIlB,MAApB5M,EAAIkS,cAAwBlS,EAAIkS,aAAazV,OAASV,KAAKkG,QAAQxF,OACnDV,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,eAChC7R,KAAM,CAAEuW,QAAS,yBAA0BC,gBAAgB,UAG3CtW,KAAKkF,OAAOuM,KAAK2E,cAAe,CAEhDzE,WAAY,CAAC,kBAAmB,eAChC7R,KAAM,CAAEuW,QAAS,aAAcC,gBAAgB,MAQ7CtR,iBAAA5F,UAAAiP,QAAR,SAAgBlH,OACRoP,EAAcpP,EAAMkN,WAAW3B,cAErC,OAAO1S,KAAKgJ,cAAc/H,OAAM,SAACuV,GAAU,OAAAA,EAAOnC,WAAW3B,cAAc5C,SAASyG,MAGtFvR,iBAAA5F,UAAAqX,UAAA,SAAUxS,GAGR,IAAK,IAAM1C,KAAKvB,KAAKgN,aACnB,GAAIhN,KAAKgN,aAAazL,GAAG0C,KAAOA,EAC9B,OAAOjE,KAAKgN,aAAazL,GAAGyT,KAIhC,MAAO,OAEThQ,iBAAA5F,UAAAsX,QAAA,SAAQzS,GACgC,MAAlCA,EAAI0S,4BAA0E,MAApC1S,EAAI2S,+BAEhD5W,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,GAEyB,MAAlC5C,EAAI0S,4BAA0E,MAApC1S,EAAI2S,+BAChD5W,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,GAEyB,MAAlC5C,EAAI0S,4BAA0E,MAApC1S,EAAI2S,+BAChD5W,KAAK0G,IAAK,EACV1G,KAAK6G,KAAM,IAGf7B,iBAAA5F,UAAAyX,QAAA,SAAQ5S,GAGK,MAAPA,IACFjE,KAAK2G,KAAM,EACX3G,KAAK4G,MAAO,GAEH,MAAP3C,IACFjE,KAAK2G,KAAM,EACX3G,KAAK4G,MAAO,IAMhB5B,iBAAA5F,UAAA0X,SAAA,SAAS5H,EAAUjL,OAEX8S,EAAU9S,EAAM,GAAKiL,EACrB8H,EAASnB,SAASoB,cAAc,YACtCD,EAAOE,MAAMC,SAAW,QACxBH,EAAOE,MAAME,KAAO,IACpBJ,EAAOE,MAAMG,IAAM,IACnBL,EAAOE,MAAMI,QAAU,IACvBN,EAAO7P,MAAQ4P,EACflB,SAAS0B,KAAKC,YAAYR,GAC1BA,EAAOS,QACPT,EAAOU,SACP7B,SAAS8B,YAAY,QACrB9B,SAAS0B,KAAKK,YAAYZ,GAE1BhX,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,8BAI1BtF,iBAAA5F,UAAAyY,iBAAA,SAAiB5T,GACfjE,KAAKqF,OAAOyS,SAAS,CAAC7T,EAAI8T,SAI5B/S,iBAAA5F,UAAA4Y,0BAAA,SAA0B/T,EAAUnE,OAC5BmY,EAAa,GAEnB,IAAK,IAAMzK,KADXyK,EAAM3X,KAAK2D,EAAI8T,OACC9T,EAAIiU,MAClBD,EAAM3X,KAAKR,EAAKmE,EAAIiU,MAAM1K,KAG5BxN,KAAKqF,OAAOyS,SAASG,IAGvBjT,iBAAA5F,UAAA+Y,gCAAA,SAAgClU,EAAUnE,OAElCsY,EAAU,GAMhB,IAAK,IAAM5K,KAHY,MAAnBvJ,EAAIgS,aAA0C,GAAnBhS,EAAIgS,aACjCjW,KAAK4N,YAES3J,EAAIoU,WAAY,KACxBC,EAAU,GAmBhB,GAlBAA,EAAQhY,KAAK2D,EAAIoU,WAAW7K,IACH,SAArBvJ,EAAIoU,WAAW7K,IAAsC,SAArBvJ,EAAIoU,WAAW7K,KAElB,MAA3B1N,EAAKmE,EAAIoU,WAAW7K,KAAmD,iBAA5B1N,EAAKmE,EAAIoU,WAAW7K,KAElC,MAA3B1N,EAAKmE,EAAIoU,WAAW7K,KAAe1N,EAAKmE,EAAIoU,WAAW7K,IAAI6G,WAAWvE,SAAS,UAEjFwI,EAAQhY,KAAKN,KAAKwF,UAAU+S,wBAAwBzY,EAAKmE,EAAIoU,WAAW7K,MAO1E8K,EAAQhY,KAAKR,EAAKmE,EAAIoU,WAAW7K,MAGZ,SAArBvJ,EAAIoU,WAAW7K,IAAiB8K,EAAQhY,KAAK,2BAA6BR,EAAKmE,EAAIoU,WAAW7K,IAAM,YAC/E,SAArBvJ,EAAIoU,WAAW7K,GACjB,GAA+B,MAA3B1N,EAAKmE,EAAIoU,WAAW7K,KAA0C,IAA3B1N,EAAKmE,EAAIoU,WAAW7K,IAAW,KAChEgL,EAAiB,kEAAoE1Y,EAAKmE,EAAIoU,WAAW7K,IAAM,+HACnHgL,EAAWxY,KAAKwF,UAAU+S,wBAAwBC,GAClDF,EAAQhY,KAAKkY,QAGbF,EAAQhY,KAAK,OAKjB8X,EAAQ9X,KAAKgY,OAGXxW,EAAWsW,EAEf,GAA2C,MAAvCpY,KAAKsG,WAAWmS,qBAA4E,EAA7CzY,KAAKsG,WAAWmS,oBAAoB/X,OAAY,KAC3FgY,EAAe,GACrB,IAAK,IAAMnX,KAAKO,EAAK,CACnB,IAAK,IAAM6W,KAAK3Y,KAAKsG,WAAWmS,oBAE1BzY,KAAKsG,WAAWmS,oBAAoBE,GAAGjJ,KAAO5N,EAAIP,GAAG,KAEvDmX,EAAQnX,GAAK,CAACvB,KAAKsG,WAAWmS,oBAAoBE,GAAG1U,IAAKnC,EAAIP,GAAG,GAAIO,EAAIP,GAAG,KAG9D,MAAdmX,EAAQnX,KAAcmX,EAAQnX,GAAKO,EAAIP,IAI7CO,EAAM4W,EAKe,MAAnBzU,EAAIgS,aAA0C,GAAnBhS,EAAIgS,aACjCjW,KAAK4N,YAEP9L,EAAIuU,QAAUpS,EAAI2U,cACA5Y,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,0BAA2B,mBACxC7R,KAAM,CAAEwW,gBAAgB,EAAOxW,KAAMgC,MAGzCkD,iBAAA5F,UAAAyZ,8BAAA,SAA8B5U,EAAUnE,GAAxC,IAAA6F,EAAA3F,KAEEA,KAAKmI,SAAU,MACT9E,EAAYrD,KAAK4J,UAAY3F,EAAIjC,SACjCO,EAAc,GAEpB,GADAA,EAAO0B,EAAIiU,OAASpY,EAAK8D,IACH,MAAlBK,EAAI6U,WACN,IAAK,IAAMxI,KAAKrM,EAAI6U,WAClBvW,EAAO0B,EAAI6U,WAAWxI,IAAMxQ,EAAKmE,EAAI6U,WAAWxI,IAIpDtQ,KAAK+G,UAAYjH,EAAK8D,IACtB5D,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAKiK,YAAa1H,GAAQ2G,UAAS,SAACpH,OAC/G0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEiX,OAAqB,KAG1BL,EAAe,GACnB/S,EAAKoB,UAAY,KACjBpB,EAAKwC,SAAU,EAEbuQ,EADmB,MAAjBlS,EAAO1E,IAAI,GACH0E,EAAO1E,IAAI,GAEX0E,EAAO1E,QAEbkX,EAAiB,GAEvB,GADAzY,QAAQC,IAAI,aAAckY,GACJ,MAAlBzU,EAAIoU,WAAoB,CAC1B,IAAK,IAAMY,KAAMhV,EAAIoU,WACnB9X,QAAQC,IAAI,iBAAkByD,EAAIoU,WAAWY,IAI7CD,EAAU/U,EAAIoU,WAAWY,IAAOP,EAAQzU,EAAIoU,WAAWY,IAGzDP,EAAUM,MAKRZ,EAAU,GAGd,IAAK,IAAM5K,KAAKkL,EAAS,KACjBJ,EAAU,GAWhB,GAVAA,EAAQhY,KAAKkN,GACJ,SAALA,GAAqB,SAALA,IACA,MAAdkL,EAAQlL,IAAqC,iBAAfkL,EAAQlL,IAEpCkL,EAAQlL,GAAG6G,WAAWvE,SAAS,UACjCwI,EAAQhY,KAAKqF,EAAKH,UAAU+S,wBAAwBG,EAAQlL,KAEvD8K,EAAQhY,KAAKoY,EAAQlL,KAEvB,SAALA,GAAgB8K,EAAQhY,KAAK,2BAA6BoY,EAAQlL,GAAK,YAClE,SAALA,EAAc,KACZgL,EAAiB,kEAAoEE,EAAQlL,GAAK,+HACtGgL,EAAW7S,EAAKH,UAAU+S,wBAAwBC,GAClDF,EAAQhY,KAAKkY,GAGfJ,EAAQ9X,KAAKgY,GAGf,GAA2C,MAAvC3S,EAAKW,WAAWmS,qBAA4E,EAA7C9S,EAAKW,WAAWmS,oBAAoB/X,OAAY,KAC3FwY,EAAe,GACrB,IAAK,IAAM3X,KAAK6W,EAAS,CACvB,IAAK,IAAMO,KAAKhT,EAAKW,WAAWmS,oBAE1B9S,EAAKW,WAAWmS,oBAAoBE,GAAGjJ,KAAO0I,EAAQ7W,GAAG,KAE3D2X,EAAQ3X,GAAK,CAACoE,EAAKW,WAAWmS,oBAAoBE,GAAG1U,IAAKmU,EAAQ7W,GAAG,GAAI6W,EAAQ7W,GAAG,KAGtE,MAAd2X,EAAQ3X,KAAc2X,EAAQ3X,GAAK6W,EAAQ7W,IAIjD6W,EAAUc,EAOW,MAAnBjV,EAAIgS,aAA0C,GAAnBhS,EAAIgS,aACjCtQ,EAAKiI,YAEPwK,EAAiB,QAAInU,EAAI2U,cACPjT,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,kBAAmB,YAChC7R,KAAM,CAAEwW,gBAAgB,EAAOxW,KAAMsY,KAGpB,SAAjB5R,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,uCAExB3E,EAAKwC,SAAU,KAKnBnD,iBAAA5F,UAAA+Z,qBAAA,SAAqBlV,EAAUnE,OAEzBsZ,EAAa,GACbC,EAAgB,GAEpB,GADAA,EAAWpV,EAAIZ,KACM,MAAjBY,EAAIqV,UACN,IAAK,IAAM9L,KAAKvJ,EAAIiU,MAClBkB,EAAQnV,EAAIiU,MAAM1K,GAAG+L,EAAI,IAAMC,UAAU1Z,EAAKmE,EAAIiU,MAAM1K,GAAGkC,MAExC,GAAf+J,SAASjM,KAAW6L,EAAWA,EAAW,IAAMD,GACjC,GAAfK,SAASjM,KAAW6L,EAAWA,EAAW,IAAMD,GAIxD,GAAqB,MAAjBnV,EAAIqV,WAAsC,WAAjBrV,EAAIqV,UAC/B,IAAK,IAAM9L,KAAKvJ,EAAIiU,MAIlBmB,EAAWA,EAAW,IAAMG,UAAU1Z,EAAKmE,EAAIiU,MAAM1K,KAKzDgC,WAAU,aAGP,IAEHkK,OAAOjI,KAAK4H,EAAU,WAExBrU,iBAAA5F,UAAAua,SAAA,SAAS1V,EAAUrE,OACXyD,EAAOzD,EAAM,GAAKqE,EAAIL,IAAW5D,KAAK0L,aAC5CgO,OAAOjI,KAAKpO,EAAM,WAKpB2B,iBAAA5F,UAAAwa,YAAA,WAAA,IAAAjU,EAAA3F,KAEEwP,WAAU,eACFqK,EAAelU,EAAK+H,UAAU0D,SAASvP,IAAG,SAACyM,GAAK,OAAAA,EAAE1K,MACxDrD,QAAQC,IAAI,cAAemF,EAAK0C,WAAWvI,KAAKY,OAAQiF,EAAK+H,UAAU0D,SAAS1Q,OAAQiF,EAAK+H,UAAU0D,SAAUyI,GACjHlU,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,0BAA2BlC,UAAWtL,EAAKY,aAAc2K,SAAUvL,EAAKc,YAAa0K,aAAcxL,EAAK+H,UAAU0D,YACxJ,MAILpM,iBAAA5F,UAAA0a,cAAA,WAEE,GAAsB,MAAlB9Z,KAAK0N,WAAqB1N,KAAK0N,UAAUgK,OAI3C,OAFoB1X,KAAK0N,UAAU0D,SAAS1Q,SAC5BV,KAAKqI,WAAWvI,KAAKY,QAMzCsE,iBAAA5F,UAAA2a,aAAA,WAAA,IAAApU,EAAA3F,KACEA,KAAK8Z,gBACH9Z,KAAK0N,UAAUC,QACf3N,KAAKqI,WAAWvI,KAAKgT,QAAO,SAAC5D,GAAO,OAAAvJ,EAAK+H,UAAUgK,OAAOxI,KAC5DlP,KAAK4Z,eAIP5U,iBAAA5F,UAAA4a,cAAA,SAAc9K,GACZ,OAAKA,GAGKlP,KAAK0N,UAAUuM,WAAW/K,GAAO,WAAa,UAAQ,SAAQA,EAAIiI,SAAW,IAF3EnX,KAAK8Z,gBAAkB,SAAW,YAAU,QAM1D9U,iBAAA5F,UAAAwR,WAAA,SAAWsJ,OACHpa,EAAO,GAIb,OAHAyK,OAAOiE,KAAK0L,GAAOpH,QAAO,SAAWpD,GACnC5P,EAAK4P,EAAId,QAAQ,MAAO,MAAQsL,EAAMxK,KAEjC5P,GAGTkF,iBAAA5F,UAAA+a,YAAA,SAAY5D,GACVvW,KAAKqI,WAAWpH,OAASsV,EAAY6D,OAAO/F,WAAW3B,cAEnD1S,KAAKqI,WAAWgS,WAClBra,KAAKqI,WAAWgS,UAAUC,aAkB9BtV,iBAAA5F,UAAAmb,UAAA,SAAUC,EAAUtL,GAWlB,MAAO,IAGTlK,iBAAA5F,UAAAqb,WAAA,SAAWC,GAES1a,KAAKkF,OAAOuM,KAAKkJ,YAAa,CAC9ChJ,WAAY,CAAC,sCAAuC,eACpDC,OAAQ,OACR9R,KAAM,CAAE8a,YAAaF,MAGzB1V,iBAAA5F,UAAAyb,UAAA,SAAU5W,GAAV,IAAA0B,EAAA3F,KACEA,KAAKmI,SAAU,EACfnI,KAAK+G,UAAY9C,EAAIL,IACrB5D,KAAKiF,YAAY7B,WAAWpD,KAAK4J,UAAY5J,KAAKsG,WAAWwU,MAAMC,aAAc/a,KAAKiK,YAAa,CAAEjJ,GAAIiD,EAAIL,MAAOsF,UAAS,SAACpH,OACxH0E,EACJA,EAAS1E,EAET6D,EAAKwC,SAAU,EACfxC,EAAKoB,UAAY,KAMCpB,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,CAAC,kBAAmB,eAChC7R,KAAM,CACJwW,gBAAgB,EAChBwE,OAAO,EAAMlO,OAAQjH,EAAKiE,UAC1BoR,SAAUrV,EAAKW,WAAWwU,MAAOG,QAAShX,EAC1CgG,YAAatE,EAAKsE,YAClBiR,SAAU1U,EAAO1E,IACjB2D,UAAWE,EAAKF,aAGV0V,cAAcjS,UAAS,SAAC1C,GAChCb,EAAKiI,iBAMX5I,iBAAA5F,UAAAgc,SAAA,SAASC,OACHvb,EACJA,EAAOub,MACDC,EAAa,GAEnB,IAAK,IAAM5L,KAAO5P,EAEhB,GAAIA,EAAKyb,eAAe7L,KACI,kBAAd5P,EAAK4P,KACE,GAAb5P,EAAK4P,KAAgB5P,EAAK4P,GAAO,OACpB,GAAb5P,EAAK4P,KAAiB5P,EAAK4P,GAAO,OAE7B,SAAPA,IACF5P,EAAK4P,EAAM,KAAO,2BAA6B5P,EAAK4P,GAAO,UAIjD5P,EAAK4P,GAKS,iBAAd5P,EAAK4P,IAAmB,KAC5B8L,EAAgB,GACtB,IAAK,IAAMC,KAAK3b,EAAK4P,GACnB,IAAK,IAAMgM,KAAK1b,KAAKkM,mBAqBnB,GApBIlM,KAAKkM,mBAAmBwP,GAAGhM,KAAOA,GAA2C,SAApC1P,KAAKkM,mBAAmBwP,GAAGvU,OAOtEqU,EAASlb,KAAK,2BAA6BR,EAAK4P,GAAK+L,GAAK,UAKxDzb,KAAKkM,mBAAmBwP,GAAGhM,KAAOA,GAA2C,SAApC1P,KAAKkM,mBAAmBwP,GAAGvU,OAEtEqU,EAASlb,KAAK,SAAWR,EAAK4P,GAAK+L,GAAK,gBAMtCzb,KAAKkM,mBAAmBwP,GAAGhM,KAAOA,GAEP,iBAAjB5P,EAAK4P,GAAK+L,GACpB,IAAK,IAAME,KAAQ7b,EAAK4P,GAAK+L,GAC3BD,EAASlb,KAAK,SAAWqb,EAAO,MAAQ7b,EAAK4P,GAAK+L,GAAGE,GAAQ,gBAUvE7b,EAAK4P,EAAM,KAAO8L,EAKxB,IAAK,IAAMlL,KAAKxQ,EACC,MAAXA,EAAKwQ,IAAyB,IAAXxQ,EAAKwQ,KAC1BgL,EAAMhL,GAAKxQ,EAAKwQ,IAIpB,IAAK,IAAM9C,KAAKxN,KAAKoM,4BAEZkP,EAAMtb,KAAKoM,qBAAqBoB,QAErC1L,EAAMyI,OAAOqR,QAAQN,GAEzB,GAA2C,MAAvCtb,KAAKsG,WAAWmS,qBAA4E,EAA7CzY,KAAKsG,WAAWmS,oBAAoB/X,OAAY,KAC3FgY,EAAe,GACrB,IAAK,IAAMnX,KAAKO,EAAK,CACnB,IAAK,IAAM6W,KAAK3Y,KAAKsG,WAAWmS,oBAE1BzY,KAAKsG,WAAWmS,oBAAoBE,GAAGjJ,KAAO5N,EAAIP,GAAG,KAEvDmX,EAAQnX,GAAK,CAACvB,KAAKsG,WAAWmS,oBAAoBE,GAAG1U,IAAKnC,EAAIP,GAAG,GAAIO,EAAIP,GAAG,KAG9D,MAAdmX,EAAQnX,KAAcmX,EAAQnX,GAAKO,EAAIP,IAI7CO,EAAM4W,EAGU1Y,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDxE,OAAQ,OACRiK,WAAW,EACXC,UAAW,SACXnK,WAAY,CAAC,kBAAmB,eAChC7R,KAAM,CAAEwW,gBAAgB,EAAOxW,KAAMgC,MAIzCkD,iBAAA5F,UAAA2c,aAAA,SAAajc,GAAb,IAAA6F,EAAA3F,KACQgc,EAAKhc,KAAKmF,YAAYsM,KAAKwK,YAAa,CAAEtK,WAAY,qBAAsB7R,KAAM,CAAEoc,MAAOlc,KAAKgN,gBAEtGhN,KAAK2I,cAAc3I,KAAK4I,qBAAuBoT,EAAGG,iBAAiBjT,UAAS,SAAC1C,GAC7D,MAAVA,IACF1G,EAAKiZ,OAASvS,EAAOvC,IACrBnE,EAAKkB,GAAKlB,EAAK8D,IACf+B,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYpB,aAAa8B,EAAKiE,UAAYjE,EAAKW,WAAWoG,eAAgB5M,EAAM6F,EAAKsE,YAAatE,EAAK2G,eAAepD,UAAS,SAACpH,OAC9K0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEiX,OAAqB,CAC9B,IAAK,IAAMJ,KAAKhT,EAAKO,QAEfP,EAAKO,QAAQyS,GAAG/U,KAAO9D,EAAK8D,MAC9B+B,EAAKO,QAAQyS,GAAGI,OAASjZ,EAAKiZ,QAGlCpT,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK+H,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAC1ClL,EAAK0C,WAAWgS,UAAY1U,EAAK0U,UACjC1U,EAAK0C,WAAW0B,KAAOpE,EAAKoE,KAE5BpE,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,eAAgBlC,UAAWtL,EAAKY,aAAc2K,SAAUvL,EAAKc,cAElFd,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChC7R,KAAM,CAAEuW,QAAS,gCAAiCC,gBAAgB,KAIjD,SAAjB9P,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,6CAUhCtF,iBAAA5F,UAAAgd,oBAAA,SAAoBlN,EAAUlE,GAE5BhL,KAAKuH,mBAAmBrH,KAAK,CAC3BiT,OAAQ,oBAAqBlC,UAAWjR,KAAKuG,aAAc2K,SAAUlR,KAAKyG,YAAa4V,kBAAmB,CACxGvc,KAAMoP,EAAKoN,QAAStR,MAI1BhG,iBAAA5F,UAAAmd,iBAAA,SAAiBzc,OAIX0c,EAAiBxc,KAAKiL,gBAAgBrL,IAC1C,IAAK,IAAM2B,KAAKvB,KAAKiL,gBAAgBwR,OACnCD,EAAYA,EAAY,IAAM1c,EAAKE,KAAKiL,gBAAgBwR,OAAOlb,IAEjEib,EAAYxc,KAAKwF,UAAUkX,+BAA+BF,GAExCxc,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDxE,OAAQ,OACRD,WAAY,oBACZ7R,KAAM,CAAEwW,gBAAgB,EAAOxW,KAAM,CAAC,CAAEA,KAAIA,EAAE6c,WAAYH,QAQ9DxX,iBAAA5F,UAAAwd,qBAAA,WAAA,IAGMjE,EAHNhT,EAAA3F,KAEQ+D,EAAW,GAEjB,IAAK4U,KAAK3Y,KAAK0N,UAAU0D,SAEvBrN,EAAIzD,KAAKN,KAAK0N,UAAU0D,SAASuH,GAAG/U,SAIhCoY,EAAKhc,KAAKmF,YAAYsM,KAAKwK,YAAa,CAAEnc,KAAM,CAAEoc,MAAOlc,KAAKgN,gBAEpEhN,KAAK2I,cAAc3I,KAAK4I,qBAAuBoT,EAAGG,iBAAiBjT,UAAS,SAAC1C,GAE3E,GAAc,MAAVA,EAAgB,KAGZqW,EAAiBrW,EAAOvC,IAC9B0B,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYjB,iBAAiB2B,EAAKiE,UAAYjE,EAAKW,WAAWwW,mBAAoB/Y,EAAKyC,EAAOvC,IAAK0B,EAAKsE,YAAatE,EAAK2G,eAAepD,UAAS,SAACpH,GAGrM,GAAqB,WADZA,EACEiX,OAAqB,CAC9B,IAAK,IAAMgE,KAAKpX,EAAKO,SAEqB,EAApCnC,EAAIuL,QAAQ3J,EAAKO,QAAQ6W,GAAGnZ,OAC9B+B,EAAKO,QAAQ6W,GAAGhE,OAAS8D,GAG7BlX,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK+H,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAC1ClL,EAAK0C,WAAWgS,UAAY1U,EAAK0U,UACjC1U,EAAK0C,WAAW0B,KAAOpE,EAAKoE,KAG5BpE,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,uBAAwBlC,UAAWtL,EAAKY,aAAc2K,SAAUvL,EAAKc,cAE1Fd,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,eAChC7R,KAAM,CAAEuW,QAAS,gCAAiCC,gBAAgB,OAKvE,SAAE3T,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,6CAShCtF,iBAAA5F,UAAA4d,eAAA,WAAA,IAUMrE,EAVNhT,EAAA3F,KAEQid,EAAYjd,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,mBAChC7R,KAAM,CACJuW,QAAS,iFACT3W,KAAM,aAGJqE,EAAW,GAEjB,IAAK4U,KAAK3Y,KAAK0N,UAAU0D,SAEvBrN,EAAIzD,KAAKN,KAAK0N,UAAU0D,SAASuH,GAAG/U,KAGtCqZ,EAAU9B,cAAcjS,UAAS,SAAC1C,GAElB,OAAVA,IACFb,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYnB,aAAa6B,EAAKiE,UAAYjE,EAAKW,WAAW4W,mBAAoBnZ,EAAK4B,EAAKsE,YAAatE,EAAK2G,eAAepD,UAAS,SAACpH,OACjL0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEiX,OAAqB,gBACnBoE,GACTxX,EAAKO,QAAUP,EAAKO,QAAQjF,OAAM,SAACiF,GAAW,OAAAA,EAAQtC,KAAOG,EAAIoZ,MADnE,IAAK,IAAMA,KAAKpZ,IAALoZ,GAGXxX,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK+H,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAC1ClL,EAAK0C,WAAWgS,UAAY1U,EAAK0U,UACjC1U,EAAK0C,WAAW0B,KAAOpE,EAAKoE,KAC5BpE,EAAKiI,YACLjI,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,iBAAkBlC,UAAWtL,EAAKY,aAAc2K,SAAUvL,EAAKc,cAEpFd,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,mBAChC7R,KAAM,CAAEuW,QAAS,qCAAsCC,gBAAgB,KAItD,SAAjB9P,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,6CAQhCtF,iBAAA5F,UAAAge,WAAA,SAAWtd,GAAX,IAAA6F,EAAA3F,KAUoBA,KAAKkF,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChCC,OAAQ,OACR9R,KAAM,CACJuW,QAAS,+EACT3W,KAAM,aAIAyb,cAAcjS,UAAS,SAAC1C,GAClB,OAAVA,IACFb,EAAKgD,cAAchD,EAAKiD,qBAAuBjD,EAAKV,YAAYvB,YAAYiC,EAAKiE,UAAYjE,EAAK8G,kBAAmB3M,EAAM6F,EAAKsE,YAAatE,EAAK2G,eAAepD,UAAS,SAACpH,OACrK0E,EAEJ,GAAqB,YADrBA,EAAS1E,GACEiX,OAAqB,CAC9BpT,EAAKO,QAAUP,EAAKO,QAAQjF,OAAM,SAACiF,GAAW,OAAAA,EAAQtC,KAAO9D,EAAK8D,MAClE+B,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB3C,EAAKO,SAC9CP,EAAK+H,UAAY,IAAImD,YAAAA,gBAAe,EAAM,IAC1ClL,EAAK0C,WAAWgS,UAAY1U,EAAK0U,UACjC1U,EAAK0C,WAAW0B,KAAOpE,EAAKoE,KAC5BpE,EAAKiI,YACLjI,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,SAAUlC,UAAWtL,EAAKY,aAAc2K,SAAUvL,EAAKc,cAC5Ed,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,iBAChC7R,KAAM,CAAEuW,QAAS,kCAAmCC,gBAAgB,KAGnD,SAAjB9P,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,6CAUhCtF,iBAAA5F,UAAAie,SAAA,SAASvd,GACPE,KAAKqF,OAAOyS,SAAS,CAAC9X,KAAKoN,aAActN,EAAK8D,OAIhDoB,iBAAA5F,UAAAke,UAAA,SAAU3T,EAAYjK,GACpBa,QAAQC,IAAImJ,EAAOjK,GACnBM,KAAKyG,YAAYkD,MAAQA,EACzB3J,KAAKyG,YAAY/G,KAAOA,EACxBM,KAAK4N,aAKP5I,iBAAA5F,UAAAwO,UAAA,WAAA,IAKMrL,EALNoD,EAAA3F,KAGQqD,EAAOrD,KAAK4J,UAAY,GAAK5J,KAAK8L,kBAClCyR,EAAQvd,KAAK4J,UAAY,GAAK5J,KAAK8L,kBAAoB,SAGvD8H,EAAkB,GAMxB,IAAK,IAAMjF,KAAK3O,KAAKmG,QAEI,MAAnBnG,KAAKmG,QAAQwI,IAA0D,IAA5C3O,KAAKmG,QAAQwI,GAAG0F,WAAW3B,gBACxDkB,EAAWjF,GAAK,CAAEyF,OAAQpU,KAAKmG,QAAQwI,GAAG0F,WAAW3B,oBAInDrM,EAAkB,GAExB,IAAK,IAAM9E,KAAKvB,KAAKqG,WACnB,IAAK,IAAMiO,KAAKtU,KAAKqG,WAAW9E,GAAI,KAC5BgT,EAAU,GAChBA,EAAGhT,GAAKvB,KAAKqG,WAAW9E,GAAG+S,GAAGrQ,IAAIoQ,WAAW3B,cAEvB,MAAlBrM,EAAWmO,MAAenO,EAAWmO,IAAM,IAG/CnO,EAAWmO,IAAIlU,KAAKiU,GAGxBhU,QAAQC,IAAI,QAAS6F,GAErBrG,KAAKuG,aAAasE,UAAY,EAC9B7K,KAAKuG,aAAawF,KAAO,EACzB/L,KAAK0H,cAAgB1H,KAAKuG,iBAEtBkO,EAEJA,EAAelK,OAAOmK,OAAO,GAAId,EAAY5T,KAAK+H,qBAAsB1B,EAAYrG,KAAKgI,uBAAwBhI,KAAKsG,WAAWqO,eA2BjIpS,EAAS,CACPoR,UAAW,CACTiB,MAAO5U,KAAKuG,aAAaqO,MACzB7I,KAAM,GAERhC,KAAM,CACJJ,MAAO3J,KAAKyG,YAAYkD,MACxBjK,KAAMM,KAAKyG,YAAY/G,MAEzBmV,gBAAiBJ,GAIflK,OAAOiE,KAAKiG,GAAc/T,OAAS,EACrCV,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,sCAOxBtK,KAAKgK,4BAA8B,EACnChK,KAAKmI,SAAU,EACfnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAKiK,YAAa1H,GAAQ2G,UAAS,SAACpH,OAC/G0E,EAEsB,OAD1BA,EAAS1E,GACEoI,QAAQpI,KAA2C,EAA5B0E,EAAO0D,QAAQpI,IAAIpB,QACnDiF,EAAK4B,mBAAmBrH,KAAK,CAAEiT,OAAQ,SAAUlC,UAAWtL,EAAKY,aAAcsO,gBAAiBJ,EAAcvD,SAAUvL,EAAKc,cAC7Hd,EAAK0C,WAAa,IAAIC,SAAAA,mBAAmB9B,EAAO0D,QAAQpI,KACxD6D,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,gCAIxB3E,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,oCAK1B3E,EAAKwC,SAAU,IAKjBnI,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAY7B,WAAWma,EAAOvd,KAAKiK,YAAa1H,GAAQ2G,UAAS,SAACpH,OAChH0E,EACJA,EAAS1E,EACT6D,EAAKqE,4BAA+BxD,EAAY,MAC5B,GAAhBA,EAAOgX,MAAc7X,EAAKS,UAAY,EAAYT,EAAKS,UAAY,MAS7EpB,iBAAA5F,UAAAqe,UAAA,SAAUxZ,GACR,cAAO,GAOTe,iBAAA5F,UAAAse,gBAAA,SAAgBC,GAAhB,IAAAhY,EAAA3F,KAGQF,EAAY,CAAEyC,OAAQ,sBAAuBoR,UAAW,CAAEiK,gBAAiBD,EAAW/Z,KAAOd,MAAO9C,KAAKiK,aAE/GjK,KAAK2I,cAAc3I,KAAK4I,qBAAuB5I,KAAKiF,YAAYpC,SAJnD,wDAIkE/C,GAAMoJ,UAAS,SAAC9I,OACvFyd,EAAczd,EAEFuF,EAAKT,OAAOuM,KAAK2E,cAAe,CAChDzE,WAAY,CAAC,kBAAmB,cAChCC,OAAQ,OACR9R,KAAM,CAAEge,SAAS,EAAMlD,YAAaiD,2CAlkE3CE,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,cACVC,SAAA,ohuCAtBO9e,kBACA+e,SAAAA,iBACAC,SAAAA,sBACAC,MAAAA,mBACmEC,OAAAA,cAX1EC,GAAAA,gCAGAC,GAAAA,wBAWOra,KAAAA,kBACAsa,gBAAAA,oBAIoBC,SAAAA,mBAhBwDC,GAAAA,yEA8FlFC,GAAAA,yCAEAA,GAAAA,gCAMAC,GAAAA,2CAaAA,GAAAA,yBAIAA,GAAAA,wCAMAA,GAAAA,yBAOAA,GAAAA,4BAKAA,GAAAA,kCAKAA,GAAAA,wBAIAA,GAAAA,oCAMAA,GAAAA,mBAIAA,GAAAA,8BAIAA,GAAAA,wBAIAA,GAAAA,0BAIAA,GAAAA,uBAIAA,GAAAA,0BAOAA,GAAAA,8BAKAA,GAAAA,oBAKAA,GAAAA,+BAIAA,GAAAA,iCAIAA,GAAAA,0BAKAA,GAAAA,mCAKAA,GAAAA,8BAKAA,GAAAA,8BAKAA,GAAAA,sBAIAA,GAAAA,2BAKAA,GAAAA,wBAMAA,GAAAA,yBAMAA,GAAAA,0BAKAA,GAAAA,yBAKAA,GAAAA,gCAOAA,GAAAA,kCAMAA,GAAAA,oBA2BAxa,GAAAA,UAASnF,KAAA,CAAC4f,SAAAA,4BACVza,GAAAA,UAASnF,KAAA,CAAC6f,SAAAA,iBAi0Db9Z,mCAqBEoR,GAAAhX,UAAA2f,UAAA,WACE/e,KAAKid,UAAU+B,SAEjB5I,GAAAhX,UAAA6f,WAAA,SAAWne,GAAX,IAAA6E,EAAA3F,KAGQuC,EAAc,CAElBvB,GAAIhB,KAAKF,KAAKmb,QAAQrX,IACtB9C,MAAKA,GAIPd,KAAKF,KAAKof,SAAWpe,EACrBd,KAAKiF,YAAY7B,WAAWpD,KAAKF,KAAK8M,OAAS5M,KAAKF,KAAKkb,SAASmE,eAAgBnf,KAAKF,KAAKmK,YAAa1H,GAAQ2G,UAAS,SAACpH,GAIpG,WAFZA,EAEEiX,SAGTpT,EAAK7F,KAAKob,SAAS5F,OAAOxU,EAAO,GACjC6E,EAAK7F,KAAKof,SAAW,SAS3B9I,GAAAhX,UAAAggB,SAAA,WAAA,IAAAzZ,EAAA3F,KAEE,GAA0B,MAAtBA,KAAKF,KAAKuf,UAA0C,IAAtBrf,KAAKF,KAAKuf,SAAgB,KACpD9c,EAAc,CAElBvB,GAAIhB,KAAKF,KAAKmb,QAAQrX,IACtB0b,KAAMtf,KAAKF,KAAKuf,SAChBE,KAAMvf,KAAKF,KAAKkb,SAASuE,MAE3Bvf,KAAKF,KAAKqI,SAAU,EACpBnI,KAAKiF,YAAY7B,WAAWpD,KAAKF,KAAK8M,OAAS5M,KAAKF,KAAKkb,SAASwE,YAAaxf,KAAKF,KAAKmK,YAAa1H,GAAQ2G,UAAS,SAACpH,GAIjG,WAFZA,EAEEiX,SACiB,MAAtBpT,EAAK7F,KAAKob,WAAoBvV,EAAK7F,KAAKob,SAAW,IACvDvV,EAAK7F,KAAKob,SAAShL,QAAQ,CAAEtM,IAAK+B,EAAK7F,KAAKmb,QAAQrX,IAAKkX,MAAO,CAAE2E,OAAQ9Z,EAAK7F,KAAKkb,SAASuE,KAAMD,KAAM3Z,EAAK7F,KAAKuf,SAAUE,KAAM5Z,EAAK7F,KAAKkb,SAAS0E,oBAAqBC,aAAc1L,KAAK2L,SAC9Lja,EAAK7F,KAAKuf,SAAW,GACrB1Z,EAAK7F,KAAKqI,QAAU,aASxBnI,KAAKF,KAAK2F,UAAU0E,kBAAkBC,kBAAmB,CACvDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,+BAK5B8L,GAAAhX,UAAAqe,UAAA,SAAUxZ,GACR,cAAO,GAETmS,GAAAhX,UAAAygB,YAAA,SAAYrD,EAAgB1c,EAAWmb,GACrC,IAAK,IAAM1Z,KAAKzB,EACd0c,EAAYA,EAAY,IAAMvB,EAAQnb,EAAKyB,IAG7C,OAAOvB,KAAKwF,UAAUkX,+BAA+BF,yBA3FxDuB,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,gBACVC,SAAA,+yPAnmEO9e,kBACW2gB,SAAAA,gDA0mEfC,GAAAA,OAAM9gB,KAAA,CAAC+gB,SAAAA,0BAnmEHxB,gBAAAA,gBAurETpI,IAxFE,SAAAA,GACSnR,EAEAgY,EACyBnd,EAAkB0F,GAH3CxF,KAAAiF,YAAAA,EAEAjF,KAAAid,UAAAA,EACyBjd,KAAAF,KAAAA,EAAkBE,KAAAwF,UAAAA,EAElDxF,KAAKF,KAAKmH,MAAQ,UAClBjH,KAAKF,KAAKoH,KAAO,gBACjBlH,KAAKF,KAAKmgB,YAAc,GACxBjgB,KAAKF,KAAKsH,YAAc,oBA6F1B6U,GAAA7c,UAAA8gB,SAAA,SAASjc,GACPjE,KAAKmgB,eAAeC,QAAQnc,yBAV/B8Z,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,eACVC,SAAA,qXApsEuBoC,SAAAA,qDAusE8CN,GAAAA,OAAM9gB,KAAA,CAACqhB,SAAAA,4BAO9ErE,IAPE,SAAAA,GAAoBkE,EAAsFrgB,GAAtFE,KAAAmgB,eAAAA,EAAsFngB,KAAAF,KAAAA,EAU5G,IAAA6a,aAYEA,GAAAvb,UAAA2f,UAAA,WACE/e,KAAKid,UAAU+B,8BAblBjB,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,cACVC,SAAA,iMAptEkB6B,SAAAA,gDA0tEfC,GAAAA,OAAM9gB,KAAA,CAAC+gB,SAAAA,sBAOZrF,IATE,SAAAA,GACSsC,EACyBnd,GADzBE,KAAAid,UAAAA,EACyBjd,KAAAF,KAAAA,EAUpC,IAAA4R,WAYEA,GAAAtS,UAAAggB,SAAA,aAIA1N,GAAAtS,UAAA2f,UAAA,WACE/e,KAAKid,UAAU+B,8BAjBlBjB,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,QACVC,SAAA,mVAtuEkB6B,SAAAA,gDA6uEfC,GAAAA,OAAM9gB,KAAA,CAAC+gB,SAAAA,sBAUZtO,IAZE,SAAAA,GACSuL,EACyBnd,GADzBE,KAAAid,UAAAA,EACyBjd,KAAAF,KAAAA,8CAYnCie,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,oCACVC,SAAA,+EACS,gHAjvE+BsC,SAAAA,kDA0vErCR,GAAAA,OAAM9gB,KAAA,CAACuhB,SAAAA,yBAIZpW,IANE,SAAAA,GACSqW,EAC4B3gB,GAD5BE,KAAAygB,YAAAA,EAC4BzgB,KAAAF,KAAAA,ECpwEvC,IAAA4gB,mBAMEnW,OAAAC,eACIkW,GAAAthB,UAAA,WAAQ,KADZ,SACauhB,GACX3gB,KAAK4gB,YAAcD,mCAGrBpW,OAAAC,eACIkW,GAAAthB,UAAA,uBAAoB,KADxB,SACyByhB,GACvB7gB,KAAK8gB,wBAA0BD,mCAGjCtW,OAAAC,eACIkW,GAAAthB,UAAA,mBAAgB,KADpB,SACqB2hB,GACnB/gB,KAAKghB,oBAAsBD,mCAe7BxW,OAAAC,eAAIkW,GAAAthB,UAAA,OAAI,KAAR,WACE,OAAOY,KAAKihB,UAAUtf,IAAI,yCA+B5B+e,GAAAthB,UAAA6O,SAAA,WACEjO,KAAKkhB,WAAW,IAQlBR,GAAAthB,UAAA+hB,iBAAA,SAAiBld,GAAjB,IAAA0B,EAAA3F,KACEA,KAAKohB,YAAc,GACnBphB,KAAKohB,YAAcphB,KAAKqhB,OAAO,IAE/B7R,WAAU,WACRvL,EAAIkD,MAAQxB,EAAKyb,YACjBzb,EAAKsb,UAAUlT,SAAS9J,EAAI+Q,MAAMsM,WAAW3b,EAAKyb,cACjD,MAmBLV,GAAAthB,UAAAmiB,qBAAA,SAAqBtd,OAEfud,EAaJ,GAAyB,OAXzBA,EAAoBvd,EAAIkD,QAW8B,IAArBqa,EAAyB,KAClDhP,EAAKqD,SAASoB,cAAc,YAClCzE,EAAGrL,MAAQqa,EACX3L,SAAS0B,KAAKC,YAAYhF,GAC1BA,EAAGkF,SACH7B,SAAS8B,YAAY,QACrB9B,SAAS0B,KAAKK,YAAYpF,GAC1BxS,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,4BAGxBtK,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,kCAQ5BoW,GAAAthB,UAAAqiB,wBAAA,SAAwBxd,GAEtB,GAAiB,MAAbA,EAAIkD,OAA8B,IAAblD,EAAIkD,MAE3B,OAAQlD,EAAIvE,MACV,IAAK,WACHuE,EAAIvE,KAAO,OACXM,KAAK0hB,mBAAoB,EACzB,MACF,IAAK,OACHzd,EAAIvE,KAAO,WACXM,KAAK0hB,mBAAoB,OAK7B1hB,KAAKyF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,kCAO5BoW,GAAAthB,UAAAiiB,OAAA,SAAO3gB,OACD8F,EAAS,IACb9F,GAAkB,EAGlB,QAFIihB,EAAa,iEACbC,EAAmBD,EAAWjhB,OACzBiO,EAAI,EAAGA,EAAIjO,EAAQiO,IAC1BnI,GAAUmb,EAAWE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAEzD,OAAOpb,GAITka,GAAAthB,UAAA6iB,aAAA,WACEjiB,KAAKkiB,UAAW,GAIlBxB,GAAAthB,UAAA+iB,YAAA,WACsC,MAAhCniB,KAAK4gB,YAAYwB,aACnBpiB,KAAKqF,OAAOyS,SAAS,CAAC9X,KAAK4gB,YAAYwB,eAG3C1B,GAAAthB,UAAA2S,gBAAA,WAAA,IAAApM,EAAA3F,KACEwP,WAAU,WAER,IAAK,IAAM6S,KAAK1c,EAAKib,YAAYnE,OACQ,QAAnC9W,EAAKib,YAAYnE,OAAO4F,GAAG3iB,OAC7BiG,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAU1M,EAAKib,YAAYnE,OAAO4F,GAAGrN,MAAMuN,iBAAiB,OAAQ5c,EAAK6c,WAAWC,KAAK9c,IACrIA,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAU1M,EAAKib,YAAYnE,OAAO4F,GAAGrN,MAAMuN,iBAAiB,YAAa5c,EAAK+c,OAAOD,KAAK9c,IACtIA,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAU1M,EAAKib,YAAYnE,OAAO4F,GAAGrN,MAAMuN,iBAAiB,WAAY5c,EAAK+c,OAAOD,KAAK9c,MAKxI,MAGL+a,GAAAthB,UAAAujB,cAAA,SAAc1e,GAAd,IAAA0B,EAAA3F,KAEEwP,WAAU,WAER7J,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAUpO,EAAI+Q,MAAMuN,iBAAiB,OAAQ5c,EAAK6c,WAAWC,KAAK9c,IAC9GA,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAUpO,EAAI+Q,MAAMuN,iBAAiB,YAAa5c,EAAK+c,OAAOD,KAAK9c,IAC/GA,EAAK2c,WAAWlQ,cAAcC,cAAc,QAAUpO,EAAI+Q,MAAMuN,iBAAiB,eAAgB5c,EAAK+c,OAAOD,KAAK9c,KACjH,MAIL+a,GAAAthB,UAAAsjB,OAAA,SAAOzQ,GAGL,OADAA,EAAE2Q,kBACK,GAETlC,GAAAthB,UAAAojB,WAAA,SAAWvQ,GAAX,IAAAtM,EAAA3F,KAGe6V,SAASgN,eAAe,QAErC5Q,EAAE2Q,iBAIF,QADMviB,EADK4R,EAAE6Q,aACIziB,iBACRsO,GAIP,IAAK,IAAM0T,KAHEhiB,EAAMsO,GAGHU,EAAKuR,YAAYnE,OAC/B,GAAuC,QAAnCpN,EAAKuR,YAAYnE,OAAO4F,GAAG3iB,MAAkB2P,EAAKuR,YAAYnE,OAAO4F,GAAGrN,MAAQ/C,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,IAE9G,GADArO,QAAQC,IAAI,eAAgB6O,EAAKuR,YAAYnE,OAAO4F,IACT,MAAvChT,EAAKuR,YAAYnE,OAAO4F,GAAGW,SAE7B,GAAuD,MAAnD3T,EAAK4T,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,KAC7C,IAAK,IAAM0B,KAAKjB,EAAKuR,YAAYnE,OAC3BpN,EAAKuR,YAAYnE,OAAOnM,GAAG0E,MAAQ/C,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,MACjES,EAAK6T,WAAW7T,EAAKuR,YAAYnE,OAAOnM,GAAI,GAC5Cd,WAAU,WACR7J,EAAKsd,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,KAAOvO,EAAMsO,IACvD,SAIPU,EAAK4T,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,KAAOvO,EAAMsO,QAGH,MAAnDU,EAAK4T,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,OAC7CS,EAAK4T,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,KAAO,IAEpDS,EAAK4T,UAAUhR,EAAE8Q,OAAO/hB,GAAG4N,QAAQ,OAAQ,KAAKtO,KAAKD,EAAMsO,YAzB1DA,EAAI,EAAGA,EAAItO,EAAMK,OAAQiO,MAAzBA,GA8DT,OAAO,GAUT+R,GAAAthB,UAAA+jB,WAAA,SAAWlf,OAEHmf,EAAS,IAAIC,WACbljB,EAAYH,KAAKijB,UAAUhf,EAAI+Q,MAErC7U,EAAKmjB,SAAW,EACMtjB,KAAKujB,aAAatf,EAAI+Q,MAC/B/Q,EAAI+Q,KAEjBoO,EAAOI,UAAS,SAAIvR,GAClBwR,MAAMxf,EAAI2I,OAAQ,CAChB/M,OAAQ,OACRqC,QAAS,CACPE,eAAgB,oBAElBmV,KAAMvU,KAAKC,UAAU,CACnB+R,KAAM/Q,EAAIyf,OAASvjB,EAAK6U,KAAK2O,MAAM,KAAKC,KAAK,IAC7ClkB,KAAMS,EAAKT,KACXK,KAAMkE,EAAIlE,KACV8jB,OAAQ5f,EAAI4f,WAGbC,KAAI,SAAW1jB,GAEd,OAAOA,EAAS2jB,SAEjBD,KAAI,SAAWC,GACd,OAAON,MAAMM,EAAKC,UAAW,CAC3BnkB,OAAQ,MACR0X,KAAM,IAAI0M,KAAK,CAACb,EAAO5c,QAAS,CAAE9G,KAAMS,EAAKT,WAGhDokB,KAAI,WAEH3jB,EAAKmjB,SAAW,EAChBnjB,EAAKiB,eAAiB6C,EAAIyf,OAASvjB,EAAK6U,KAAK2O,MAAM,KAAKC,KAAK,OASnER,EAAOc,kBAAkB/jB,IAE3BugB,GAAAthB,UAAA+kB,UAAA,SAAUlgB,GAER,IAAK,IAAMmgB,KAAKpkB,KAAKijB,UAAUhf,EAAI+Q,MAGS,MAAtChV,KAAKijB,UAAUhf,EAAI+Q,MAAMoP,GAAGP,QAAgB7jB,KAAKqkB,mBAAmBpgB,EAAKjE,KAAKijB,UAAUhf,EAAI+Q,MAAMoP,GAAIA,IAK9G1D,GAAAthB,UAAAklB,sBAAA,SAAsBrgB,GAAtB,IAAA0B,EAAA3F,KACE,IAAK,IAAMokB,KAAKpkB,KAAKijB,UAAUhf,EAAI+Q,MAEjChV,KAAKukB,mBAAmBtgB,EAAKjE,KAAKijB,UAAUhf,EAAI+Q,MAAMoP,GAAIA,GAE5D5U,WAAU,WACR7J,EAAKsd,UAAUhf,EAAI+Q,MAAQ,MAC1B,MAGL0L,GAAAthB,UAAAilB,mBAAA,SAAmBpgB,EAAUugB,EAAQC,OAC7BrB,EAAS,IAAIC,WACbljB,EAAYH,KAAKijB,UAAUhf,EAAI+Q,MAAMyP,GAIX,MAA5BzkB,KAAK0kB,UAAUzgB,EAAI+Q,QAAiBhV,KAAK0kB,UAAUzgB,EAAI+Q,MAAQ,GACnEhV,KAAK0kB,UAAUzgB,EAAI+Q,QAEnB7U,EAAKmjB,SAAW,EACMtjB,KAAKujB,aAAatf,EAAI+Q,MAC/B/Q,EAAI+Q,KAEjBoO,EAAOI,UAAS,SAAIvR,GAClBwR,MAAMxf,EAAI2I,OAAQ,CAChB/M,OAAQ,OACRqC,QAAS,CACPE,eAAgB,oBAElBmV,KAAMvU,KAAKC,UAAU,CACnB+R,KAAM/Q,EAAIyf,OAASvjB,EAAK6U,KAAK2O,MAAM,KAAKC,KAAK,IAC7ClkB,KAAMS,EAAKT,KACXK,KAAMkE,EAAIlE,KACV8jB,OAAQ5f,EAAI4f,WAGbC,KAAI,SAAW1jB,GAEd,OAAOA,EAAS2jB,SAEjBD,KAAI,SAAWC,GACd,OAAON,MAAMM,EAAKC,UAAW,CAC3BnkB,OAAQ,MACR0X,KAAM,IAAI0M,KAAK,CAACb,EAAO5c,QAAS,CAAE9G,KAAMS,EAAKT,WAGhDokB,KAAI,WAEH3jB,EAAKmjB,SAAW,EAChBnjB,EAAKiB,eAAiB6C,EAAIyf,OAASvjB,EAAK6U,KAAK2O,MAAM,KAAKC,KAAK,OAYnER,EAAOc,kBAAkB/jB,IAE3BugB,GAAAthB,UAAA8jB,WAAA,SAAWjf,EAAU0gB,GAArB,IAAAhf,EAAA3F,UAAqB,IAAA2kB,IAAAA,EAAA,QAIbpiB,EAAc,GACdpC,EAAYH,KAAKijB,UAAUhf,EAAI+Q,MACrCzS,EAAOpC,KAAO8D,EAAIyf,OAASvjB,EAAK6U,KAChCzS,EAAOxC,KAAOkE,EAAIlE,KAClBwC,EAAOshB,OAAS5f,EAAI4f,OACpB7jB,KAAKiF,YAAY7B,WAAWa,EAAI2gB,aAAc5kB,KAAK4gB,YAAY9T,SAAUvK,GAAQ2G,UAAS,SAACpH,OACrF0E,EAEiB,YADrBA,EAAS1E,GACEiX,QAA+B,IAAR4L,IAEhChf,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,gBAExB3E,EAAKsd,UAAUhf,EAAI+Q,MAAQ,MAER,SAAjBxO,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,uCAExB3E,EAAKwC,SAAU,KAGnBuY,GAAAthB,UAAAmlB,mBAAA,SAAmBtgB,EAAU0F,EAAiB7I,GAA9C,IAAA6E,EAAA3F,UAA6B,IAAA2J,IAAAA,EAAA,QACrBpH,EAAc,GACdpC,EAAYH,KAAKijB,UAAUhf,EAAI+Q,MAAMlU,GAC3Cd,KAAK0kB,UAAUzgB,EAAI+Q,QACnBzS,EAAOpC,KAAO8D,EAAIyf,OAASvjB,EAAK6U,KAChCzS,EAAOxC,KAAOkE,EAAIlE,KAClBwC,EAAOshB,OAAS5f,EAAI4f,OACpB7jB,KAAKiF,YAAY7B,WAAWa,EAAI2gB,aAAc5kB,KAAK4gB,YAAY9T,SAAUvK,GAAQ2G,UAAS,SAACpH,OACrF0E,EAEiB,YADrBA,EAAS1E,GACEiX,SAETpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,gBAEQ,MAA5B3E,EAAKsd,UAAUhf,EAAI+Q,OAAerP,EAAKsd,UAAUhf,EAAI+Q,MAAMM,OAAOxU,EAAO,IAE1D,SAAjB0F,EAAOuS,QACTpT,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,KAIX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,uCAExB3E,EAAKwC,SAAU,KAKnBuY,GAAAthB,UAAAkO,YAAA,SAAYC,GAAZ,IAAA5H,EAAA3F,KAGE,IAAK,IAAMwN,KAAKD,EAEL,wBAALC,GACFgC,WAAU,WAER,GAAoC,MAAhC7J,EAAKmb,wBAAiC,CAMtC,GAFoB,MAAlBnb,EAAKsb,WAA2D,MAAtCtb,EAAKmb,wBAAwBnX,OAAgF,MAA/DhE,EAAKsb,UAAUlT,SAASpI,EAAKmb,wBAAwBnX,QAC/HhE,EAAKsb,UAAUlT,SAASpI,EAAKmb,wBAAwBnX,OAAO2X,WAAW3b,EAAKmb,wBAAwB3Z,OAC1D,MAAtCxB,EAAKmb,wBAAwBnX,OAA6D,MAA5ChE,EAAKmb,wBAAwB+D,aAA4E,iBAA7Clf,EAAKmb,wBAAmC,YACtJ,IAAK,IAAMgE,KAAWnf,EAAKmb,wBAAwB+D,YAGjD,IAAK,IAAME,KAD6B,MAApCpf,EAAKsb,UAAUlT,SAAS+W,IAAoBnf,EAAKsb,UAAUlT,SAAS+W,GAASxD,WAAW3b,EAAKmb,wBAAwB+D,YAAYC,IACxGnf,EAAKib,YAAYnE,OAAQ,CACpD,GAAI9W,EAAKib,YAAYnE,OAAOsI,GAAgB/P,MAAQ8P,GAA2D,gBAAhDnf,EAAKib,YAAYnE,OAAOsI,GAAgBrlB,MAA+E,MAApDiG,EAAKib,YAAYnE,OAAOsI,GAAgB/B,UAAwE,GAApDrd,EAAKib,YAAYnE,OAAOsI,GAAgB/B,SACpO,IAAK,IAAMvN,KAAc9P,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,KAEgE,GAA3H0B,EAAKmb,wBAAwB+D,YAAYC,GAASxV,QAAQ3J,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAAIwR,GAAY/F,MACpH/J,EAAKqf,qBAAqBrf,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAAIwR,GAAa9P,EAAKib,YAAYnE,OAAOsI,IAQjH,GAAIpf,EAAKib,YAAYnE,OAAOsI,GAAgB/P,MAAQ8P,GAA2D,gBAAhDnf,EAAKib,YAAYnE,OAAOsI,GAAgBrlB,OAA+E,MAApDiG,EAAKib,YAAYnE,OAAOsI,GAAgB/B,UAAwE,GAApDrd,EAAKib,YAAYnE,OAAOsI,GAAgB/B,UACpO,IAAK,IAAMvN,KAAc9P,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAE3D0B,EAAKmb,wBAAwB+D,YAAYC,IAAanf,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAAIwR,GAAe,KACnH9P,EAAKqf,qBAAqBrf,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAAIwR,GAAa9P,EAAKib,YAAYnE,OAAOsI,IAQjH,GAAIpf,EAAKib,YAAYnE,OAAOsI,GAAgB/P,MAAQ8P,GAA2D,YAAhDnf,EAAKib,YAAYnE,OAAOsI,GAAgBrlB,MAA2E,MAApDiG,EAAKib,YAAYnE,OAAOsI,GAAgB/B,UAAwE,GAApDrd,EAAKib,YAAYnE,OAAOsI,GAAgB/B,SAChO,IAAK,IAAMvN,KAAc9P,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,KAGgE,GAA3H0B,EAAKmb,wBAAwB+D,YAAYC,GAASxV,QAAQ3J,EAAKib,YAAYnE,OAAOsI,GAAgB9gB,IAAIwR,GAAY/F,KAExD,MAAxD/J,EAAKsb,UAAUlT,SAAS+W,EAAU,KAAOrP,IAAuB9P,EAAKsb,UAAUlT,SAAS+W,EAAU,KAAOrP,GAAY6L,YAAW,GAExE,MAAxD3b,EAAKsb,UAAUlT,SAAS+W,EAAU,KAAOrP,IAAuB9P,EAAKsb,UAAUlT,SAAS+W,EAAU,KAAOrP,GAAY6L,YAAW,GAetG,mBAAtC3b,EAAKmb,wBAAwBnX,QAC/BhE,EAAK4d,aAAe5d,EAAKmb,wBAAwB3Z,OAET,kBAAtCxB,EAAKmb,wBAAwBnX,OAC/BhE,EAAKsf,kBAAkBtf,EAAKmb,wBAAwB3Z,MAAO,OAEnB,qBAAtCxB,EAAKmb,wBAAwBnX,OAC/BhE,EAAKsf,kBAAkBtf,EAAKmb,wBAAwB3Z,MAAO,YAI9D,IAKTuZ,GAAAthB,UAAAyO,UAAA,SAAU5J,GAERjE,KAAKihB,UAAUlT,SAAS9J,GAAK+J,mBAG/B0S,GAAAthB,UAAA8lB,mBAAA,SAAmBjhB,EAAUnE,GAC3BE,KAAK6N,UAAU5J,OAETkhB,EAAWnlB,KAAKihB,UAAUlT,SAAS9J,GAAKkD,MAC9C,GAAgB,IAAZge,GAA8B,MAAZA,EACpBnlB,KAAKolB,eAAiB,OACjB,KACC1P,EAAY5V,EAAKmE,IAAIhD,OAAM,SAAWgR,GAE1C,OAAOA,EAAEhO,IAAI6L,SAASqV,KAExBnlB,KAAKolB,eAAiB,GACtBplB,KAAKolB,eAAiB1P,IAK1BgL,GAAAthB,UAAAimB,mBAAA,SAAmBphB,GACjBjE,KAAKslB,oBAAsBrhB,EAAI+Q,MAGjC0L,GAAAthB,UAAAmmB,iBAAA,SAAiBthB,GACfjE,KAAKwlB,uBAAuBvhB,EAAI+Q,MAAQ,MAE1C0L,GAAAthB,UAAAqmB,mBAAA,SAAmBxhB,EAAUnD,GAC3Bd,KAAKwlB,uBAAuBvhB,EAAI+Q,MAAMM,OAAOxU,EAAO,GACA,GAAhDd,KAAKwlB,uBAAuBvhB,EAAI+Q,MAAMtU,SACxCV,KAAKwlB,uBAAuBvhB,EAAI+Q,MAAQ,OAG5C0L,GAAAthB,UAAA4lB,qBAAA,SAAqB/gB,EAAU0F,GAKP,MAAlBA,EAAMqZ,SACRhjB,KAAKwlB,uBAAuB7b,EAAMqL,MAAQ/Q,EAAIyL,KAEC,MAA3C1P,KAAKwlB,uBAAuB7b,EAAMqL,QACpChV,KAAKwlB,uBAAuB7b,EAAMqL,MAAQ,IAE5ChV,KAAKwlB,uBAAuB7b,EAAMqL,MAAM1U,KAAK2D,EAAIyL,MAGR,MAAvC1P,KAAKihB,UAAUlT,SAASpE,EAAMqL,QAChChV,KAAKihB,UAAUlT,SAASpE,EAAMqL,MAAMsM,WAAW,MAC/CthB,KAAK6N,UAAUlE,EAAMqL,QAIzB0L,GAAAthB,UAAA6lB,kBAAA,SAAkBtb,EAAYjK,GAE5B,GADAa,QAAQC,IAAI,iBAAkBmJ,EAAOjK,EAAMiK,EAAMjJ,QACrC,UAARhB,GAAkC,MAAdiK,EAAMqL,KAC5B,IAAK,IAAMoP,KAAKpkB,KAAK4gB,YAAYnE,OAC3Bzc,KAAK4gB,YAAYnE,OAAO2H,GAAGpP,MAAQrL,EAAMqL,OAC3ChV,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS2K,GAAI,GAC5CpkB,KAAKihB,UAAUyE,cAAc/b,EAAMqL,MACnCzU,QAAQC,IAAI,UAAWmJ,EAAY,KAAG,IAAKya,EAAGza,IAKpD,GAAY,UAARjK,GAAkC,MAAdiK,EAAMqL,MAA+B,EAAfrL,EAAMjJ,OAElD,IAAK,IAAM0jB,KADX7jB,QAAQC,IAAImJ,EAAMjJ,OAAQ,MACVV,KAAK4gB,YAAYnE,OAC/B,IAAK,IAAMkJ,KAAKhc,EACV3J,KAAK4gB,YAAYnE,OAAO2H,GAAGpP,MAAQrL,EAAMgc,KAC3C3lB,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS2K,GAAI,GAC5CpkB,KAAKihB,UAAUyE,cAAc/b,EAAMgc,IACnCplB,QAAQC,IAAI,yBAA0BmJ,EAAMgc,GAAI,OAAQvB,EAAGza,IAMnE,GAAY,OAARjK,EAEF,GAAmB,MAAfiK,EAAMic,MACR,IAAK,IAAMxB,KAAKpkB,KAAK4gB,YAAYnE,OAC3Bzc,KAAK4gB,YAAYnE,OAAO2H,GAAGpP,MAAQrL,EAAMic,QAC3C5lB,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS2K,GAAK,EAAG,EAAGza,GACnD3J,KAAKkhB,WAAW,SAKpB,GAAsB,iBAAlB,EAEF,IAAK,IAAM1T,KAAK7D,EACd,IAAK,IAAMya,KAAKpkB,KAAK4gB,YAAYnE,OACf,MAAZ9S,EAAM6D,IAA+B,MAAjB7D,EAAM6D,GAAGwH,MAAgBhV,KAAK4gB,YAAYnE,OAAO2H,GAAGpP,MAAQrL,EAAM6D,GAAGoY,QAC3F5lB,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS2K,GAAK,EAAG,EAAGza,EAAM6D,IACzDxN,KAAKkhB,WAAW,KAa9BR,GAAAthB,UAAAymB,cAAA,WACE7lB,KAAKihB,UAAU6E,QACf9lB,KAAKijB,UAAY,GACjBjjB,KAAKwlB,uBAAyB,GAC9BxlB,KAAKslB,oBAAsB,IAK7B5E,GAAAthB,UAAA2mB,YAAA,SAAYpc,EAAY7I,GAKtB,GAJAP,QAAQC,IAAImJ,EAAO,SAAU7I,EAAO,UACO,MAAvCd,KAAKihB,UAAUlT,SAASpE,EAAMqL,OAChChV,KAAKgmB,kBAAkB9lB,KAAK,CAAEyJ,MAAKA,EAAEwb,SAAUnlB,KAAKihB,UAAUlT,SAASpE,EAAMqL,MAAM7N,MAAO8e,QAASjmB,KAAKihB,UAAU9Z,QAE7F,MAAnBwC,EAAMuc,WAA8C,EAAzBvc,EAAMuc,UAAUxlB,OAAY,KACrDylB,EAAU,EACd,IAAK,IAAM7V,KAAK3G,EAAMuc,UAEpB,GAAIvc,EAAMuc,UAAU5V,GAAG8V,QAAQ/R,YAAcrU,KAAKihB,UAAUlT,SAASpE,EAAMqL,MAAM7N,MAAMkN,WAErF8R,IAGAnmB,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS3Y,EAAQ2Y,SAAS0M,IAAM,EAAGxc,EAAMuc,UAAU5V,GAAG3G,OACrF3J,KAAKkhB,WAAW,QAGhB,IAAK,IAAMkD,KAAKpkB,KAAK4gB,YAAYnE,OAC3Bzc,KAAK4gB,YAAYnE,OAAO2H,GAAGpP,MAAQrL,EAAMuc,UAAU5V,GAAG3G,MAAMqL,OAC9DhV,KAAK4gB,YAAYnE,OAAOnH,OAAOmE,SAAS2K,GAAI,GAC5CpkB,KAAKihB,UAAUyE,cAAc/b,EAAMuc,UAAU5V,GAAG3G,MAAMqL,SAYlE0L,GAAAthB,UAAA8hB,WAAA,SAAWmF,GAAX,IAAA1gB,EAAA3F,gBAaasQ,GACT,GAA2D,MAAvDgW,EAAKrF,UAAUlT,SAASuY,EAAK1F,YAAYnE,OAAOnM,IAAa,KACzDiW,EAAqB,GACrBC,EAAyB,GAM/B,GALwC,MAApCF,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAC7Bof,EAAcjmB,KAAKgmB,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,OAE9Cof,EAAcjmB,KAAK,IAEkB,QAAnCgmB,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,KAG7B,GAFA4mB,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAQsR,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAElC,MAAvCmf,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAA2D,GAAvCsD,EAAK1F,YAAYnE,OAAOnM,GAAG0S,SAAkB,CAC9F,IAAK,IAAMyD,KAAMH,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAEE,MAAvDsR,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAMyR,KAElDH,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAMyR,GAAInD,SAAW,GAIZ,MAAnDgD,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,QAC5CsR,EAAK5B,UAAU4B,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAQsR,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAMtU,aAI7C,MAAnD4lB,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,QAC5CsR,EAAKrD,UAAUqD,EAAK1F,YAAYnE,OAAOnM,GAAG0E,MAAMsO,SAAW,GAKjE,GAAuC,YAAnCgD,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,MAA6D,MAAvC4mB,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAA2D,GAAvCsD,EAAK1F,YAAYnE,OAAOnM,GAAG0S,SAC7H,GAAwC,MAApCsD,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAAiBof,EAAcjmB,KAAK,SACjE,GAAsC,MAAlCgmB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAa,KACpCyiB,EAAc,GACpB,IAAK,IAAMnlB,KAAK+kB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAED,MAApCqiB,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,OAAiBmf,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAAM2I,SAASwW,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAI1C,GAAGmO,KAC1HgX,EAAOpmB,MAAK,GACLomB,EAAOpmB,MAAK,GAGvBimB,EAAcjmB,KAAKomB,GAMzB,GAA8C,MAA1CJ,EAAK1F,YAAYnE,OAAOnM,GAAGqW,aAAuE,EAAhDL,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYjmB,OAC3F,IAAK,IAAM8M,KAAK8Y,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAEgB,MAArDL,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAG6I,UAC5CiQ,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAG6I,QAAU,gBAEA,YAAlDiQ,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWC,UAEkB,SAAlDR,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CN,EAAKrF,UAAU8F,cAAcT,EAAKU,gBAEkB,gBAAlDV,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CN,EAAKrF,UAAU8F,cAAcT,EAAKW,cAEkB,WAAlDX,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWK,QAAQZ,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGrG,QAEhC,aAAlDmf,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWM,UAAUb,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGrG,QAElC,OAAlDmf,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWO,IAAId,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGrG,QAE5B,OAAlDmf,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWQ,IAAIf,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGrG,QAE5B,aAAlDmf,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGoZ,MAC5CJ,EAAkBlmB,KAAKumB,MAAAA,WAAWS,UAAUhB,EAAK1F,YAAYnE,OAAOnM,GAAGqW,YAAYnZ,GAAGrG,QAgB5F,GAPuC,SAAnCmf,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,MAAuD,MAApC4mB,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,OAC3EqI,WAAU,WACRqG,SAASxD,cAAc,YAAc1M,EAAKib,YAAYnE,OAAOnM,GAAG0E,KAAO,IAAMrP,EAAKib,YAAYnE,OAAOnM,GAAGnJ,OAAOmL,UAAUC,IAAI,sBAE5H,KAGkC,YAAnC+T,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,MAA6D,MAAvC4mB,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAA2D,GAAvCsD,EAAK1F,YAAYnE,OAAOnM,GAAG0S,SAAkB,KAC3IuE,GAAc,EAIlB,IAAK,IAAMC,KAAKlB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAEvCsjB,IADsC,MAApCjB,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,QAAiBmf,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAAM2I,SAASwW,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAIujB,GAAG9X,MAI5H4W,EAAKrF,UAAUwG,WAAWnB,EAAK1F,YAAYnE,OAAOnM,GAAG0E,KAAO,KAAOwS,EAAG,IAAI3hB,MAAAA,YAAY0hB,EAAQf,SAiBhGF,EAAKrF,UAAUwG,WAAWnB,EAAK1F,YAAYnE,OAAOnM,GAAG0E,KAAM,IAAInP,MAAAA,YAAY,CAAEsB,MAAOof,EAAc,GAAImB,SAAUpB,EAAK1F,YAAYnE,OAAOnM,GAAGoX,UAAYlB,IAIzJ,GAAuC,gBAAnCF,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,MAAiE,MAAvC4mB,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAA2D,GAAvCsD,EAAK1F,YAAYnE,OAAOnM,GAAG0S,SACjI,IAAK,IAAM2E,KAAMrB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAEF,MAApCqiB,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,OAA8D,iBAArCmf,EAAK1F,YAAYnE,OAAOnM,GAAQ,QAAsG,GAArFgW,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,MAAMmI,QAAQgX,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAI0jB,GAAIjY,MAEnL4W,EAAKtB,qBAAqBsB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAI0jB,GAAKrB,EAAK1F,YAAYnE,OAAOnM,IAIrD,gBAAnCgW,EAAK1F,YAAYnE,OAAOnM,GAAG5Q,MAAkE,MAAvC4mB,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAA2D,GAAvCsD,EAAK1F,YAAYnE,OAAOnM,GAAG0S,UAG1F,MAApCsD,EAAK1F,YAAYnE,OAAOnM,GAAGnJ,OAE7Bmf,EAAKtB,qBAAqBsB,EAAK1F,YAAYnE,OAAOnM,GAAGrM,IAAI,GAAIqiB,EAAK1F,YAAYnE,OAAOnM,UAvJpF,IAAA+V,IAAAA,EAAA,GASS,GAAdA,IACFrmB,KAAKihB,UAAYjhB,KAAK4nB,YAAYC,MAAM,gBAG1C,IAAK,IAAMvX,KAAKtQ,KAAK4gB,YAAYnE,SAAtBnM,GAwJXd,WAAU,WAER7J,EAAKmiB,UAAW,EACqB,MAAjCniB,EAAKib,YAAYmH,eACnBpiB,EAAKib,YAAYmH,cAAe,IAGjC,KAILrH,GAAAthB,UAAA4oB,kBAAA,WAAA,IAAAriB,EAAA3F,KACEA,KAAKihB,UAAUtf,IAAI,YAAYwM,aAAajF,UAAS,SAClD+e,GACiB,KAAZA,GACFtiB,EAAKsb,UAAUtf,IAAI,QAAQolB,cAAc,CAACF,MAAAA,WAAWC,SAAUD,MAAAA,WAAWS,UAAU,KACpF3hB,EAAKuiB,WAAa,6CAElBviB,EAAKsb,UAAUtf,IAAI,QAAQolB,cAAcF,MAAAA,WAAWC,UAEtDnhB,EAAKsb,UAAUtf,IAAI,QAAQwmB,4BAMjCzH,GAAAthB,UAAAgpB,UAAA,SAAUlV,EAAWuJ,GACnBlc,QAAQC,IAAI0S,EAAMuJ,GAClB5G,SAASwS,iBAAiB,eAAevV,QAAO,SAACN,GAExCA,EAGFF,UAAU+C,OAAO,uBAGxBQ,SAASxD,cAAc,YAAcoK,EAAOzH,KAAO,IAAM9B,EAAKxD,KAAK4C,UAAUC,IAAI,qBACjFvS,KAAKihB,UAAUlT,SAAS0O,EAAOzH,MAAMsM,WAAWpO,EAAKxD,MAEvDgR,GAAAthB,UAAA4nB,eAAA,SAAea,OACPS,EAAOT,EAAM9Z,SAASwa,SAASphB,MAC/BqhB,EAAcX,EAAM9Z,SAAS0a,gBAAgBthB,MACnD,OAAmB,MAAfqhB,GAAsC,IAAfA,GACzBX,EAAM9Z,SAAS0a,gBAAgBC,UAAU,CAAE5B,UAAU,IAC9C,CAAEA,UAAU,IAEjBwB,GAAQE,GACVX,EAAM9Z,SAAS0a,gBAAgBC,UAAU,CAAEC,OAAO,IAC3C,CAAEA,OAAO,SAFlB,GAOFjI,GAAAthB,UAAAwpB,cAAA,SAAcC,OACNC,EAAkBD,EAAQ1hB,MAEhC,OADsB,8CACC4hB,KAAKD,IAAoBA,EAAmB,CAAEE,cAAc,GAAS,MAE9FtI,GAAAthB,UAAA6nB,aAAA,SAAaY,GAEX,IAAK,IAAMtmB,KAAKsmB,EACd,GAAqB,gBAAjBA,EAAMtmB,GAAG7B,MAAkD,MAAxBmoB,EAAMtmB,GAAGolB,aAAkD,MAA3BkB,EAAMtmB,GAAGolB,YAAY,IAA8C,gBAAhCkB,EAAMtmB,GAAGolB,YAAY,GAAGC,MAAwE,MAA9C5mB,KAAKwlB,uBAAuBqC,EAAMtmB,GAAGyT,MAG/L,OADAhV,KAAKihB,UAAUlT,SAAS8Z,EAAM7S,MAAM0T,UAAU,CAAEzB,cAAc,IACvD,CAAEA,cAAc,IAsB7BvG,GAAAthB,UAAA6pB,gBAAA,SAAgBJ,OAERK,EAAK,CAAC,kBACZ,OAAO,IAAIC,KAAAA,WAAU,SAACC,GACpB5Z,WAAU,eACFhJ,GAAyC,IAA/B0iB,EAAG5Z,QAAQuZ,EAAQ1hB,OAAiB,CAAEkiB,cAAc,GAAS,KAC7ED,EAAS5T,KAAKhP,GACd4iB,EAASE,YACR,QAIP5I,GAAAthB,UAAAmqB,SAAA,SAASzpB,GAEP,OAAOE,KAAKihB,UAAUtf,IAAI,SAAS6nB,SAAS,YAAc,oBACxDxpB,KAAKihB,UAAUtf,IAAI,SAAS6nB,SAAS,WAAa,2BAChDxpB,KAAKihB,UAAUtf,IAAI,SAAS6nB,SAAS,gBAAkB,sCAAwC,IAGrG9I,GAAAthB,UAAAqqB,iBAAA,WACE,OAAOzpB,KAAKihB,UAAUtf,IAAI,YAAY6nB,SAAS,YAAc,qFAC3DxpB,KAAKihB,UAAUtf,IAAI,YAAY6nB,SAAS,gBAAkB,sFAAwF,IAGtJ9I,GAAAthB,UAAAiU,SAAA,SAAS/Q,GAAT,IAAAqD,EAAA3F,KACEA,KAAKsC,KAAOA,MACNonB,EAAmB,GACzB,IAAK,IAAMpb,KAAKtO,KAAKihB,UAAUlT,SAAU,CACvC/N,KAAKihB,UAAUlT,SAASO,GAAGiF,oBAIrBhS,EAAI+M,EAAEqV,MAAM,MAElB,IAAK,IAAMrP,KAAKtU,KAAK4gB,YAAYnE,OAAQ,CAqBvC,GApBuC,QAAnCzc,KAAK4gB,YAAYnE,OAAOnI,GAAG5U,MAAyD,MAAvCM,KAAK4gB,YAAYnE,OAAOnI,GAAG0O,UAAuE,MAAnDhjB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,OACjF,MAAnDhV,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,OAA6E,GAA5DhV,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMsO,YAQvGqG,EAAa,IACbvoB,eAAiBpB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAM5T,eACvEuoB,EAAM3U,KAAOhV,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMA,KAC7D2U,EAAMC,KAAO5pB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAM4U,KAC7DD,EAAMjqB,KAAOM,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMtV,KAC7DiqB,EAAM5pB,KAAOC,KAAK4gB,YAAYnE,OAAOnI,GAAGvU,KACxC4pB,EAAM9F,OAAS7jB,KAAK4gB,YAAYnE,OAAOnI,GAAGuP,OAC1C8F,EAAME,QAAU7pB,KAAK4gB,YAAYnE,OAAOnI,GAAGuV,QAC3C7pB,KAAKihB,UAAUlT,SAAS/N,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMsM,WAAWqI,IAGjC,QAAnC3pB,KAAK4gB,YAAYnE,OAAOnI,GAAG5U,MAAyD,MAAvCM,KAAK4gB,YAAYnE,OAAOnI,GAAG0O,UAA2D,GAAvChjB,KAAK4gB,YAAYnE,OAAOnI,GAAG0O,SAAkB,KACrI8G,EAAgB,GACtB,IAAK,IAAMzH,KAAKriB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAO,KASvD2U,EARkD,MAAtD3pB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,IAA6E,GAA/DriB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,GAAGiB,YAQ7GqG,EAAa,IACbvoB,eAAiBpB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,GAAGjhB,eAC1EuoB,EAAM3U,KAAOhV,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,GAAGrN,KAChE2U,EAAMC,KAAO5pB,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,GAAGuH,KAChED,EAAMjqB,KAAOM,KAAKijB,UAAUjjB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMqN,GAAG3iB,KAChEiqB,EAAM5pB,KAAOC,KAAK4gB,YAAYnE,OAAOnI,GAAGvU,KACxC4pB,EAAM9F,OAAS7jB,KAAK4gB,YAAYnE,OAAOnI,GAAGuP,OAC1C8F,EAAME,QAAU7pB,KAAK4gB,YAAYnE,OAAOnI,GAAGuV,QAC3CC,EAASxpB,KAAKqpB,IAGhB3pB,KAAKihB,UAAUlT,SAAS/N,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAMsM,WAAWwI,IAkBxE,GAfuC,gBAAnC9pB,KAAK4gB,YAAYnE,OAAOnI,GAAG5U,OACM,MAA/BM,KAAKwlB,wBAAkG,MAAhExlB,KAAKwlB,uBAAuBxlB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,OAA2D,MAA1ChV,KAAK4gB,YAAYnE,OAAOnI,GAAGqS,YAE5I3mB,KAAKihB,UAAUlT,SAAS/N,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAM0T,UAAU,CAAE5B,SAAU,OAI/E9mB,KAAKihB,UAAUlT,SAAS/N,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAM0T,UAAU,CAAE5B,UAAU,IAI7ExY,GAAKtO,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAA0B,MAAlB0U,EAAYpb,KACtDob,EAAYpb,GAAKtO,KAAKwlB,uBAAuBxlB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,QAG7D,EAAXzT,EAAEb,QAAca,EAAE,IAAMvB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAQhV,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAQ1G,GAAwC,YAAnCtO,KAAK4gB,YAAYnE,OAAOnI,GAAG5U,MAA6D,MAAvCM,KAAK4gB,YAAYnE,OAAOnI,GAAG0O,UAEzI,GAApChjB,KAAKihB,UAAUlT,SAASO,GAAGnH,MAC7B,IAAK,IAAMsU,KAAKzb,KAAK4gB,YAAYnE,OAAOnI,GAAGrQ,IACrCjE,KAAK4gB,YAAYnE,OAAOnI,GAAGrQ,IAAIwX,GAAG/L,KAAOnO,EAAE,KACO,MAAhDmoB,EAAY1pB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,QACzC0U,EAAY1pB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAQ,IAEjD0U,EAAY1pB,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAAM1U,KAAKiB,EAAE,KAOxD+M,GAAKtO,KAAK4gB,YAAYnE,OAAOnI,GAAGU,MAA0B,MAAlB0U,EAAYpb,KACtDob,EAAYpb,GAAKtO,KAAKihB,UAAUlT,SAASO,GAAGnH,QAUlD,GAAInH,KAAKihB,UAAU8I,MAGjB,GAAiC,MAA7B/pB,KAAK4gB,YAAY5e,UAAoBhC,KAAK4gB,YAAYoJ,OAAQ,CAChEhqB,KAAKmI,SAAU,MACT9E,EAAYrD,KAAK4gB,YAAYoJ,OAAShqB,KAAK4gB,YAAY5e,SACvDO,EAAc,GACpBA,EAAOzC,KAAOE,KAAKihB,UAAU9Z,MAC7BnH,KAAKiF,YAAY7B,WAAWC,EAAMrD,KAAK4gB,YAAY9T,SAAUvK,GAAQ2G,UAAS,SAACpH,OACzE0E,EAEiB,YADrBA,EAAS1E,GACEiX,SACTpT,EAAKqgB,kBAAkB9lB,KAAK,CAAEyJ,MAAO,aAAcwb,SAAU3e,EAAOuS,OAAQkN,QAASzf,IACrFb,EAAKsb,UAAU6E,QACfngB,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc3E,EAAKib,YAAYqJ,kBAGJ,MAAjCtkB,EAAKib,YAAYsJ,cAAyD,IAAjCvkB,EAAKib,YAAYsJ,cAAuD,KAAjCvkB,EAAKib,YAAYsJ,aACnGvkB,EAAKN,OAAOyS,SAAS,CAACnS,EAAKib,YAAYsJ,eAEvCvkB,EAAKwC,SAAU,GAGE,SAAjB3B,EAAOuS,SACTpT,EAAKqgB,kBAAkB9lB,KAAK,CAAEyJ,MAAO,aAAcwb,SAAU3e,EAAOuS,OAAQkN,QAASzf,IACrFb,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM0G,MAKX,SAAE7D,GAEDgD,EAAKF,UAAU0E,kBAAkBC,kBAAmB,CAClDC,SAAU,IACVvK,KAAM,CAAEwK,aAAc,uCAExB3E,EAAKqgB,kBAAkB9lB,KAAK,CAAEyJ,MAAO,wBAAyBwb,SAAU,cAAec,QAAStgB,EAAKsb,UAAU9Z,QAC/GxB,EAAKwC,SAAU,SAIjBnI,KAAKgmB,kBAAkB9lB,KAAK,CAAEyJ,MAAO,aAAcwb,SAAU,kBAAmBc,QAASjmB,KAAKihB,UAAU9Z,aAI1GnH,KAAKmqB,+BAKDzJ,GAAAthB,UAAA+qB,4BAAR,eACQC,EAAmCpqB,KAAKsiB,WAAWlQ,cAAcC,cACrE,oBAGFqH,OAAO2Q,OAAO,CACZhT,IAAKrX,KAAKsqB,aAAaF,GACvBhT,KAAM,EACNmT,SAAU,YAIN7J,GAAAthB,UAAAkrB,aAAR,SAAqBE,GAEnB,OAAOA,EAAUC,wBAAwBpT,IAAMqC,OAAOgR,QADlC,IAItBhK,GAAAthB,UAAAurB,gBAAA,SAAgBxhB,GACdnJ,KAAK4qB,kBAAoBzhB,EACzB5I,QAAQC,IAAI,QAAS2I,IAEvBuX,GAAAthB,UAAAyrB,aAAA,SAAa1hB,GACXnJ,KAAK8qB,aAAe3hB,EAAM4hB,OAC1BxqB,QAAQC,IAAI,oBAAqB2I,IAEnCuX,GAAAthB,UAAA4rB,YAAA,aAGAtK,GAAAthB,UAAA6rB,aAAA,aAGAvK,GAAAthB,UAAA8rB,gBAAA,kCA1pCDnN,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,eACVC,SAAA,2ttCAZOG,MAAAA,mBAEAjf,kBAGoBsf,SAAAA,mBAEpBJ,OAAAA,cAR2DK,GAAAA,iDAiBjEE,GAAAA,oCAKAA,GAAAA,gCAKAA,GAAAA,iCA0CAD,GAAAA,UAomCH+B,IAnoCE,SAAAA,GAAoBkH,EAAiC3iB,EAAiCQ,EAAgCJ,EAAwBid,GAA1HtiB,KAAA4nB,YAAAA,EAAiC5nB,KAAAiF,YAAAA,EAAiCjF,KAAAyF,UAAAA,EAAgCzF,KAAAqF,OAAAA,EAAwBrF,KAAAsiB,WAAAA,EAHvItiB,KAAAkiB,UAAgB,EAChBliB,KAAAohB,YAAmB,GAY1BphB,KAAAkoB,WAAa,yBACbloB,KAAAsC,KAAY,GACZtC,KAAA8nB,UAAW,EACX9nB,KAAAmI,SAAU,EACVnI,KAAAghB,qBAAsB,EACtBhhB,KAAA4gB,YAAmB,GACnB5gB,KAAA8gB,wBAA+B,GAC/B9gB,KAAAolB,eAAsB,GACtBplB,KAAAwlB,uBAA8B,GAC9BxlB,KAAAijB,UAAiB,GACjBjjB,KAAA0kB,UAAiB,GACjB1kB,KAAAslB,oBAA2B,GAC3BtlB,KAAAujB,aAAoB,GACpBvjB,KAAA0hB,mBAA6B,EAI7B1hB,KAAAiH,MAAsB,UACtBjH,KAAAkH,KAAY,gBACZlH,KAAAmH,MAAQ,GACRnH,KAAAoH,YAAc,GACJpH,KAAAgmB,kBAAoB,IAAIrhB,GAAAA,aAIlC3E,KAAA4qB,kBAAyB,GACzB5qB,KAAA8qB,aAAoB,gDCtBrBK,GAAAA,SAAQlsB,KAAA,CAAC,CACNmsB,QAAS,CACLC,KAAAA,WACAC,QAAAA,iBACAC,MAAAA,eACAC,KAAAA,cACAC,SAAAA,eACAC,SAAAA,sBACAC,SAAAA,eACAC,SAAAA,qBACAC,SAAAA,gBACAC,SAAAA,sBACAC,SAAAA,cACAC,SAAAA,kBACAC,SAAAA,eACAC,SAAAA,iBACAC,SAAAA,oBACAC,SAAAA,gBACAC,SAAAA,iBACAC,SAAAA,mBACAC,SAAAA,kBACAC,SAAAA,cACAC,SAAAA,eACAC,SAAAA,cACAC,SAAAA,cACAC,SAAAA,oBACAC,SAAAA,mBACAC,SAAAA,qBACAC,SAAAA,yBACAC,SAAAA,eACAC,SAAAA,gBACAC,SAAAA,gBACAC,SAAAA,iBACAC,SAAAA,gBACAC,SAAAA,qBACAC,SAAAA,kBACAC,SAAAA,cACAC,SAAAA,eACAC,SAAAA,cACAC,SAAAA,iBACAC,SAAAA,iBACAC,SAAAA,cACAC,OAAAA,aACAC,UAAAA,qBAIyBC,IA/CjC,SAAAA,MCpDA,IAAAC,wBAWEzjB,OAAAC,eACIwjB,GAAA5uB,UAAA,UAAO,KADX,SACY4B,GACVhB,KAAKgB,GAAK,GAAQ,gBAClBhB,KAAKgB,GAAKhB,KAAKwF,UAAUkX,+BAA+B,iCAAmC1b,EAAK,gDAKlGgtB,GAAA5uB,UAAA6O,SAAA,kCAhBD8P,GAAAA,UAAS9e,KAAA,CAAC,CACT+e,SAAU,oBACVC,SAAA,oOAJOO,gBAAAA,kDAUNI,GAAAA,SAWHoP,IALE,SAAAA,GAAmBxoB,GAAAxF,KAAAwF,UAAAA,ECjBrB,IAAAyoB,gBAOEA,GAAA7uB,UAAA8uB,UAAA,SAAU/mB,EAAY6N,EAAW/Q,GAY/B,MAA6B,UAAzB+Q,EAAK2T,MAAM,YAAqD,YAA3B3T,EAAK2T,MAAM,aAI3C1kB,EAHM,IAAMA,wBAlBxBkqB,GAAAA,KAAIlvB,KAAA,CAAC,CACJ+V,KAAM,iBAwBRiZ,IAzBA,SAAAA,MCFA,IAAAG,oCAkBCjD,GAAAA,SAAQlsB,KAAA,CAAC,CACNovB,aAAc,CAACrpB,iBAAkBoR,cAAe6F,YAAa+R,uBAAwBrT,YAAajJ,UAAWtH,kBAAmBsW,kBAAmBuN,gBACnJK,QAAS,CACLC,OAAAA,aAEAR,mBACAS,MAAAA,YAAaC,MAAAA,oBACbC,OAAAA,aACAC,UAAAA,aAAcC,YAAAA,eACdC,gBAAAA,oBAIJC,QAAS,CAAEC,GAAAA,wBACX3D,QAAS,CAACpmB,iBAAkB0b,mBAE5BsO,UAAW,CAAC7vB,YACZ8vB,gBAAiB,CAAC7Y,cAAe6F,YAAatB,YAAajJ,UAAWtH,uBAG1EgkB,IApBA,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListingService {\n\n  constructor() { }\n}\n","// import {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\n// import { switchMap, map, takeWhile } from 'rxjs/operators';\n// import { HttpClient, HttpHeaders} from '@angular/common/http';\n// import { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\n\n\n// @Injectable()\n// export class ApiService {\n//   public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n//   files: UploadFile[];\n//   uploadInput: EventEmitter<UploadInput>;\n//   humanizeBytes: Function;\n//   dragOver: boolean;\n//   options: UploaderOptions;\n//   @ViewChild('fileInput1') uploaderInput: ElementRef;\n//   /*@Input()\n//   set domain_for_fileupload(domain_for_fileupload: any) {\n//     this.domain_for_fileupload_val = domain_for_fileupload;\n//     console.log('this.skipval');\n//     console.log(this.domain_for_fileupload_val);\n//   }*/\n//   public lengthis;\n//   public percentageis;\n//   public inprogress;\n//   public progress:any=[];\n//   public uploadtype;\n//   public uploaderror:any='';\n//   // public uploadOutputval:any;\n//   fileservername:any=[];\n//   /*@Input()\n//   set uploadOutput(uploadOutput: any){\n//     this.uploadOutputval = uploadOutput;\n//     console.log('this.uploadOutput');\n//     console.log(this.uploadOutput);\n//   }*/\n//   constructor(private _http: HttpClient,\n//               private _authHttp: HttpClient,\n//               ) {\n//     this.options = { concurrency: 10, maxUploads: 10 };\n//     this.files = []; // local uploading files array\n//     this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n//     this.humanizeBytes = humanizeBytes;\n//     //console.log('this.domain');\n//     //console.log(this.domain);\n//   }\n//   onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n//     // this.uploaderInput.nativeElement.value = '';\n//     if (uploadOutput.type === 'allAddedToQueue') {\n//       const event: UploadInput = {\n//         type: 'uploadAll',\n//         url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n//         method: 'POST',\n//         data: { path: uploadpath }\n//       };\n//       this.uploadInput.emit(event);\n//     } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n//       if (uploadOutput.file.response != '') {\n//         this.files = [];\n//         this.files.push(uploadOutput.file);\n//         console.log('this.files*********');\n//         console.log(this.files);\n//         this.lengthis = this.files.length;\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       }\n//     } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n//       const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n//       this.files[index] = uploadOutput.file;\n//       this.lengthis = this.files.length;\n//       if(this.files[0]!=null && this.files[0].progress!=null)\n//         this.percentageis = this.files[0].progress.data.percentage;\n//       console.log('this.files==================');\n//       console.log(this.files);\n//     } else if (uploadOutput.type === 'removed') {\n//       this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n//     } else if (uploadOutput.type === 'dragOver') {\n//       this.dragOver = true;\n//     } else if (uploadOutput.type === 'dragOut') {\n//       this.dragOver = false;\n//     } else if (uploadOutput.type === 'drop') {\n//       this.dragOver = false;\n//     }\n//     console.log('files');\n//     console.log(this.files);\n//     if(this.files[0]!=null && this.files[0].progress!=null) {\n//       if(this.progress[arrayvalue]==null)this.progress[arrayvalue]=0;\n//       this.inprogress=true;\n//       console.log('file upload progressing');\n//       console.log(this.files[0].progress.data.percentage);\n//       this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n//       if(this.progress[arrayvalue]==100) {\n//         this.progress[arrayvalue]=null;\n//         this.inprogress=null;\n//       }\n//       console.log('this.uploadtype in api service');\n//       console.log(uploadtypec);\n//     }\n//     if (uploadtypec=='single'){\n//       // this.fileservername = [];\n//       if(this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue]=[];\n//       this.fileservername[arrayvalue]=[];\n//       if(this.files[0].response!=null) this.fileservername[arrayvalue].push(this.files[0].response);\n//     }\n//     if (uploadtypec == 'multiple') {\n//       console.log('this.files[0].response');\n//       // console.log(this.files[0].response);\n//       console.log(this.files.length);\n//       console.log(this.files);\n//       if (this.fileservername[arrayvalue] == null) this.fileservername[arrayvalue] = [];\n//       // if(this.files[0].response!=null){\n//       if(this.files.length==1) {\n//         if(this.files[0] && this.files[0].response!=null && this.files[0].response.error_code==null ) {\n//           this.fileservername[arrayvalue].push(this.files[0].response);\n//           this.files = [];\n//           this.uploaderror='';\n//         }\n//         if(this.files[0] !=null && this.files[0].response!=null && this.files[0].response.error_code!=null){\n//           this.uploaderror='error occured on uploading !!!';\n//         }\n//       }\n//       if(this.files.length>1)\n//       {\n//         console.log('sdfdsf==== in multiple length ');\n//         for(let b in this.files){\n//           if(this.files[b].response!=null && this.files[b].response.error_code==null) {\n//             this.fileservername[arrayvalue].push(this.files[b].response);\n//           }\n//         }\n//         this.files=[];\n//       }\n//       //}\n//     }\n//     console.log('this.fileservername');\n//     console.log(this.fileservername);\n//     console.log(this.uploaderror);\n//     //this.uploaderservice.filenamevalc1=this.fileservername;\n//     //UploaderComponent.filenamevalc1=87;\n//     //console.log(classval);\n\n//   }\n//   isTokenExpired() {\n\n//     // const helper = new JwtHelperService();\n//     // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n//     // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n//     // console.log('refresh_token',localStorage.getItem('refresh_token'))\n//     // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n//     // console.log('id_token isExpired:',isIdTokenExpired)\n//     // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n//   }\n\n//   getclientip() {\n\n//     console.log('endpoint');\n\n//     // this.isTokenExpired()\n//     var result = this._http.get(\"http://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\n\n//     return result;\n//   }\n\n\n\n//   getEndpoint(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   getData(endpoint: any) {\n\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': ''\n//       })\n//     };\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     console.log('');\n\n//     // this.isTokenExpired()\n//     var result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(map(res => res));\n\n//     return result;\n//   }\n\n//   // getData end\n\n//   postData(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json',\n//         'access-token': data.token\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     console.log('httpOptions');\n//     console.log(httpOptions);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postDatawithoutToken(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   postlogin(endpoint:any, data) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type':  'application/json'\n//       })\n//     };\n//     console.log('');\n//     console.log('endpoint');\n//     console.log(endpoint);\n//     var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   } // postData end\n\n\n\n\n//   postSearch( link,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link in postSearch\");\n//     console.log(link);\n//     console.log(source);\n//     var result = this._http.post(link, source, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n// postSearch1( link,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': source.token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"link\");\n//     console.log(link);\n//     var result = this._http.post(link, source).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n\n\n//   putData(endpoint:any, data, id:any) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'Authorization': ''\n//       })\n//     };\n//     console.log('');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     var result = this._http.put(this.getEndpointUrl(endpoint)+'/'+id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n//   deteOneData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,id:data._id}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatus(endpoint:any, data,token,source) {\n//       console.log(endpoint);\n//       console.log(data);\n//       console.log(token);\n//       console.log(source);\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:data}\n//     var result = this._http.post(endpoint,dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//   deteManyData(endpoint:any, data,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,ids:data}\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n//     togglestatusmany(endpoint:any, data,val,token,source) {\n//     const httpOptions = {\n//       headers: new HttpHeaders({\n//         'Content-Type': 'application/json',\n//         'access-token': token\n//       })\n//     };\n//     console.log('------ ');\n//     console.log(\"endpoint\");\n//     console.log(endpoint);\n//     console.log(data);\n//     let dataval:any;\n//     dataval={source:source,data:{ids:data,val:val}};\n//     var result = this._http.post(endpoint+'many',dataval, httpOptions).pipe(map(res => res));\n//     return result;\n//   }\n\n\n\n//   private getEndpointUrl(endpoint: string) {\n//       return '' + endpoint;\n//   }\n\n// }\n\n\n\n\n\n\n/********************* Added By Himadri using Lamda start *************************/\n\n\nimport {ElementRef, EventEmitter, Injectable, Input, ViewChild} from '@angular/core';\nimport {switchMap, map, takeWhile, catchError} from 'rxjs/operators';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { UploadOutput, UploadInput, UploadFile, humanizeBytes, UploaderOptions, UploadStatus } from 'ngx-uploader';\nimport { CookieService } from 'ngx-cookie-service';\nimport {throwError} from 'rxjs';\n\n\n@Injectable()\nexport class ApiService {\n  public domain_for_fileupload_val: any = 'http://developmentapi.audiodeadline.com:7031/uploads' + 'uploads' ;\n  files: UploadFile[];\n  uploadInput: EventEmitter<UploadInput>;\n  humanizeBytes: Function;\n  dragOver: boolean;\n  options: UploaderOptions;\n  @ViewChild('fileInput1') uploaderInput: ElementRef;\n  /*@Input()\n  set domain_for_fileupload(domain_for_fileupload: any) {\n    this.domain_for_fileupload_val = domain_for_fileupload;\n    console.log('this.skipval');\n    console.log(this.domain_for_fileupload_val);\n  }*/\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public secretkey: any = 'na';\n  // public uploadOutputval:any;\n  fileservername: any = [];\n\n  /*@Input()\n  set uploadOutput(uploadOutput: any){\n    this.uploadOutputval = uploadOutput;\n    console.log('this.uploadOutput');\n    console.log(this.uploadOutput);\n  }*/\n  constructor(private _http: HttpClient,\n              private _authHttp: HttpClient,\n              private cookieService: CookieService\n\n  ) {\n    this.options = { concurrency: 10, maxUploads: 10 };\n    this.files = []; // local uploading files array\n    this.uploadInput = new EventEmitter<UploadInput>(); // input events, we use this to emit data to ngx-uploader\n    this.humanizeBytes = humanizeBytes;\n    if (this.cookieService.check('secretkey')) {\n      this.secretkey = this.cookieService.get('secretkey');\n    }\n    // console.log('this.domain');\n    // console.log(this.domain);\n  }\n\n  onUploadOutput(uploadOutput: UploadOutput, arrayvalue: any, uploadtypec: any, uploadpath: any): void {\n    // this.uploaderInput.nativeElement.value = '';\n    if (uploadOutput.type === 'allAddedToQueue') {\n      const event: UploadInput = {\n        type: 'uploadAll',\n        url: 'http://developmentapi.audiodeadline.com:7031/uploads',\n        method: 'POST',\n        data: { path: uploadpath }\n      };\n      this.uploadInput.emit(event);\n    } else if (uploadOutput.type === 'addedToQueue' && typeof uploadOutput.file !== 'undefined') {\n      if (uploadOutput.file.response != '') {\n        this.files = [];\n        this.files.push(uploadOutput.file);\n        console.log('this.files*********');\n        console.log(this.files);\n        this.lengthis = this.files.length;\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n    } else if (uploadOutput.type === 'uploading' && typeof uploadOutput.file !== 'undefined') {\n      const index = this.files.findIndex(file => typeof uploadOutput.file !== 'undefined' && file.id === uploadOutput.file.id);\n      this.files[index] = uploadOutput.file;\n      this.lengthis = this.files.length;\n      if (this.files[0] != null && this.files[0].progress != null) {\n        this.percentageis = this.files[0].progress.data.percentage;\n      }\n      console.log('this.files==================');\n      console.log(this.files);\n    } else if (uploadOutput.type === 'removed') {\n      this.files = this.files.filter((file: UploadFile) => file !== uploadOutput.file);\n    } else if (uploadOutput.type === 'dragOver') {\n      this.dragOver = true;\n    } else if (uploadOutput.type === 'dragOut') {\n      this.dragOver = false;\n    } else if (uploadOutput.type === 'drop') {\n      this.dragOver = false;\n    }\n    console.log('files');\n    console.log(this.files);\n    if (this.files[0] != null && this.files[0].progress != null) {\n      if (this.progress[arrayvalue] == null) {this.progress[arrayvalue] = 0; }\n      this.inprogress = true;\n      console.log('file upload progressing');\n      console.log(this.files[0].progress.data.percentage);\n      this.progress[arrayvalue] = (this.files[0].progress.data.percentage);\n      if (this.progress[arrayvalue] == 100) {\n        this.progress[arrayvalue] = null;\n        this.inprogress = null;\n      }\n      console.log('this.uploadtype in api service');\n      console.log(uploadtypec);\n    }\n    if (uploadtypec == 'single') {\n      // this.fileservername = [];\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      this.fileservername[arrayvalue] = [];\n      if (this.files[0].response != null) { this.fileservername[arrayvalue].push(this.files[0].response); }\n    }\n    if (uploadtypec == 'multiple') {\n      console.log('this.files[0].response');\n      // console.log(this.files[0].response);\n      console.log(this.files.length);\n      console.log(this.files);\n      if (this.fileservername[arrayvalue] == null) { this.fileservername[arrayvalue] = []; }\n      // if(this.files[0].response!=null){\n      if (this.files.length == 1) {\n        if (this.files[0] && this.files[0].response != null && this.files[0].response.error_code == null ) {\n          this.fileservername[arrayvalue].push(this.files[0].response);\n          this.files = [];\n          this.uploaderror = '';\n        }\n        if (this.files[0] != null && this.files[0].response != null && this.files[0].response.error_code != null) {\n          this.uploaderror = 'error occured on uploading !!!';\n        }\n      }\n      if (this.files.length > 1) {\n        console.log('sdfdsf==== in multiple length ');\n        for (const b in this.files) {\n          if (this.files[b].response != null && this.files[b].response.error_code == null) {\n            this.fileservername[arrayvalue].push(this.files[b].response);\n          }\n        }\n        this.files = [];\n      }\n      // }\n    }\n    console.log('this.fileservername');\n    console.log(this.fileservername);\n    console.log(this.uploaderror);\n    // this.uploaderservice.filenamevalc1=this.fileservername;\n    // UploaderComponent.filenamevalc1=87;\n    // console.log(classval);\n\n  }\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n\n\n\n  }\n\n  getclientip() {\n\n    console.log('endpoint');\n\n    // this.isTokenExpired()\n    const result = this._http.get('http://ipinfo.io/?format=json&token=9797c42b93078a').pipe(map(res => res));\n\n    return result;\n  }\n\n\n\n  getEndpoint(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + endpoint.source, {}, httpOptions).pipe(map(res => res));\n\n    return result;\n  }\n\n  getData(endpoint: any) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    console.log('');\n\n    // this.isTokenExpired()\n    const result = this._http.post('' + 'datalist', endpoint, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n\n    return result;\n  }\n\n  // getData end\n\n  postData(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        Authorization: data.token\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    console.log('httpOptions');\n    console.log(httpOptions);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postDatawithoutToken(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  postlogin(endpoint: any, data) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  } // postData end\n\n\n\n\n  postSearch( link, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"link in postSearch\");\n    console.log(link);\n    console.log(source);*/\n    source.secretkey = this.secretkey;\n    const result = this._http.post(link, source, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n  postSearch1( link, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: source.token\n      })\n    };\n    console.log('------ ');\n    console.log('link');\n    console.log(link);\n    const result = this._http.post(link, source).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n\n\n  putData(endpoint: any, data, id: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: ''\n      })\n    };\n    console.log('');\n    console.log('endpoint');\n    console.log(endpoint);\n    const result = this._http.put(this.getEndpointUrl(endpoint) + '/' + id, JSON.stringify(data), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n  deteOneData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /* console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);\n    console.log(token);*/\n    let dataval: any;\n    dataval = {source, id: data._id};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatus(endpoint: any, data, token, source) {\n    /*console.log(endpoint);\n      console.log(data);\n      console.log(token);\n      console.log(source);*/\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint, dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  deteManyData(endpoint: any, data, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, ids: data};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n  togglestatusmany(endpoint: any, data, val, token, source) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: token\n      })\n    };\n    /*console.log('------ ');\n    console.log(\"endpoint\");\n    console.log(endpoint);\n    console.log(data);*/\n    let dataval: any;\n    dataval = {source, data: {ids: data, val}};\n    dataval.secretkey = this.secretkey;\n    const result = this._http.post(endpoint + 'many', dataval, httpOptions).pipe(catchError((err) => {\n      console.log('error caught in service');\n      console.error(err);\n\n      // Handle the error here\n\n      return throwError(err);    // Rethrow it back to component\n    }), map(res => res));\n    return result;\n  }\n\n\n\n  private getEndpointUrl(endpoint: string) {\n    return '' + endpoint;\n  }\n\n}\n\n\n\n/********************* Added By Himadri using Lamda end *************************/\n","import {\n  Component, OnInit, ViewChild, Input, Inject,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ViewContainerRef, SimpleChange, OnDestroy, Output, EventEmitter, AfterViewChecked, ElementRef\n} from '@angular/core';\nimport { MatSort, MatTableDataSource, MatPaginator } from '@angular/material';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { ApiService } from './api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, Event } from '@angular/router';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, map, debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\ndeclare var $: any;\nimport * as momentImported from 'moment';\nimport { ThemePalette } from '@angular/material/core';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\n\n// import {ProgressBarMode} from '@angular/material/progress-bar';\n// import  {BtnComponent} from './../../../../src/app/btn/btn.component'\nconst moment = momentImported;\nexport interface DialogData {\n  alldata: any;\n}\n@Component({\n  selector: 'lib-listing',\n  templateUrl: './listing.module.html',\n  styleUrls: ['./listing.module.css']\n})\nexport class ListingComponent implements OnInit, OnDestroy {\n\n  myControl = new FormControl();\n\n\n  datasourceval: any;\n  search_settingsval: any;\n  click_to_add_ananother_pageval: any;\n  grab_linkval: any;\n  date_search_sourceval: any;\n  date_search_endpointval: any;\n  urlval: any;\n  searchendpointval: any;\n  public searchListval: any;\n  rescount: number = 0;\n  pdf_link_val: any;\n  statusarrval: any;\n  skipval: any;\n  errormg: any;\n  jwttokenval: any;\n  detail_datatypeval: any;\n  detail_skip_arrayval: any;\n  deleteendpointval: any;\n  editrouteval: any;\n  apiurlval: any;\n  updateendpointval: any;\n  modify_header_arrayval: any;\n  date_search_source_countval: any;\n  datacollectionval: any;\n  selection: any;\n  sourcedataval: any;\n  emailarrayval: any;\n  columns: any = [];\n  autosearchinput: any = [];\n  currentautosearcharr: any = [];\n  olddata: any = [];\n  tsearch: any = [];\n  tableflag: any = 0;\n  autosearch: any = [];\n  public x: any;\n  public libdataval: any = {};\n  public limitcondval: any = {};\n  public custombuttonval: any;\n  public result: any = {};\n  public sortdataval: any = {};\n  public sh: any = false;\n  public art: any = false;\n  public aud2: any = false;\n  public aud: any = false;\n  public updatetableval: any = false;\n  loaderrow: any = null;\n  currentautocompleteitem: any;\n  public customButtonFlagVal: any = {};\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n\n  /* this variable for artist xp preview */\n  previewFlug: any = false;\n  selectsearch: any = [];\n\n  @Output() onLiblistingChange = new EventEmitter<any>();\n\n  @Output() onLiblistingButtonChange = new EventEmitter<any>();\n\n  searchstrsarr: any = [];\n  oldlimitrange: any = [];\n\n\n  @Input()\n  set search_settings(search_settings: any) {\n    this.search_settingsval = search_settings;\n    /*for (let i= 0; i<= this.search_settingsval.search.length; i++) {\n      console.log(this.search_settingsval.search[i].label);\n    }*/\n\n    /*  console.log(this.search_settingsval.selectsearch);\n      console.log(this.search_settingsval.selectsearch[0].label);\n      console.log(this.search_settingsval.selectsearch[0].values);\n      console.log(this.search_settingsval.datesearch);*/\n  }\n\n  @Input()\n  set click_to_add_ananother_page(click_to_add_ananother_page: any) {\n    this.click_to_add_ananother_pageval = click_to_add_ananother_page;\n  }\n  @Input()\n  set limitcond(limitcondval: any) {\n    this.limitcondval = limitcondval;\n    this.oldlimitrange.push(limitcondval);\n    // console.log('limitcondval',this.limitcondval);\n  }\n  @Input()\n  set date_search_source_count(date_search_source_countval: any) {\n    this.date_search_source_countval = date_search_source_countval;\n    if (this.date_search_source_countval == 0) { this.limitcondval.pagecount = 1; }\n    // console.log('date_search_source_count',this.date_search_source_countval);\n  }\n\n  @Input()\n  set grab_link(grab_link: any) {\n    this.grab_linkval = grab_link;\n    // console.log(this.grab_linkval);\n  }\n  @Input()\n  set custombutton(custombutton: any) {\n    this.custombuttonval = custombutton;\n  }\n\n  @Input()\n  set date_search_source(date_search_source: any) {\n    this.date_search_sourceval = date_search_source;\n  }\n  @Input()\n  set sortdata(sortdataval: any) {\n    this.sortdataval = sortdataval;\n    console.log(this.sortdataval, 'sortdataval');\n  }\n\n  @Input()\n  set date_search_endpoint(date_search_endpoint: any) {\n    this.date_search_endpointval = date_search_endpoint;\n  }\n  @Input()\n  set url(url: any) {\n    this.urlval = url;\n  }\n  @Input()\n  set searchendpoint(searchendpoint: any) {\n    this.searchendpointval = searchendpoint;\n  }\n  @Input()\n  set pdf_link(pdf_link: any) {\n    this.pdf_link_val = pdf_link;\n  }\n  @Input()\n  set searchList(searchList: any) {\n    this.searchListval = searchList;\n  }\n  @Input()\n  set libdata(libdataval: any) {\n    this.libdataval = [];\n    this.libdataval = libdataval;\n    // console.log('libdataval',this.libdataval);\n  }\n\n  @Input()\n  set datasource(datasource: any) {\n    this.datasourceval = [];\n    this.datasourceval = datasource;\n  }\n  @Input()\n  set datacollection(datacollectionval: any) {\n    this.datacollectionval = datacollectionval;\n  }\n\n  @Input()\n  set skip(skip: any) {\n    this.skipval = skip;\n  }\n  @Input()\n  set detail_datatype(detail_datatype: any) {\n    this.detail_datatypeval = detail_datatype;\n  }\n  @Input()\n  set detail_skip_array(detail_skip_array: any) {\n    this.detail_skip_arrayval = detail_skip_array;\n  }\n\n  @Input()\n  set sourcedata(sourcedata: any) {\n    this.sourcedataval = sourcedata;\n  }\n\n  @Input()\n  set modify_header_array(modify_header_array: any) {\n    this.modify_header_arrayval = modify_header_array;\n  }\n\n  @Input()\n  set deleteendpoint(deleteendpointval: any) {\n    this.deleteendpointval = deleteendpointval;\n  }\n\n  @Input()\n  set updateendpoint(updateendpoint: any) {\n    this.updateendpointval = updateendpoint;\n  }\n  @Input()\n  set apiurl(apiurl: any) {\n    this.apiurlval = apiurl;\n  }\n\n  @Input()\n  set updatetable(updatetable: any) {\n    this.updatetableval = updatetable;\n\n  }\n\n  @Input()\n  set jwttoken(jwttoken: any) {\n    if (jwttoken != null) { this.jwttokenval = jwttoken; } else { this.jwttokenval = ''; }\n    // console.log(this.jwttokenval,'token')\n  }\n\n  @Input()\n  set statusarr(statusarr: any) {\n    this.statusarrval = statusarr;\n  }\n\n  @Input()\n  set emailarray(emailarray: any) {\n    this.emailarrayval = emailarray;\n  }\n\n  @Input()\n  set editroute(editroute: any) {\n    this.editrouteval = editroute;\n  }\n\n\n  /* artistxp preview start */\n  @Input()\n  set preview_artistxp(flug: any) {\n    this.previewFlug = true;\n  }\n  /* artistxp preview end */\n\n  @Input()\n  set customlistenbutton(val: any) {\n    this.customButtonFlagVal = val\n    console.log(this.customButtonFlagVal, 'customButtonFlagVal')\n  }\n\n\n  stateGroups: string[];\n\n  stateGroup: Observable<string[]>;\n\n  displayedColumns: string[] = [];\n  datacolumns: string[] = [];\n  displayedColumnsheader: string[] = [];\n  formarray: any = [];\n  start_date: any;\n  dateSearch_condition: any = {};\n  selectSearch_condition: any = {};\n  autoSearch_condition: any = {};\n  textSearch_condition: any = {};\n  end_date: any;\n  public i: any;\n  loading: any = false;\n  public preresult: any = {};\n  // dataSource = new MatTableDataSource(this.datasourceval);\n  dataSource = new MatTableDataSource;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  // options: FormGroup;\n  myForm: any;\n  // myForm:any;\n  modelChanged = new Subject<any>();\n  modelChangedserver = new Subject<any>();\n  pagechanged = new Subject<any>();\n  subscriptions: Subscription[] = [];\n  subscriptioncount = 0;\n  tableFooterColumns: string[] = [];\n  testvalue: any = \"s1\";\n  // searchResult$: Observable<SearchResult[]>;\n\n  constructor(public _apiService: ApiService, public dialog: MatDialog,\n    public bottomSheet: MatBottomSheet,\n    public fb: FormBuilder,\n    private router: Router,\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef,\n    public _http: HttpClient,\n    public sanitizer: DomSanitizer,\n    private _snackBar: MatSnackBar,\n    private _elementRef: ElementRef\n  ) {\n    this.stateGroups = this.searchListval;\n    this.router.events.subscribe((event: Event) => {\n      switch (true) {\n        case event instanceof NavigationStart: {\n          this.loading = true;\n          break;\n        }\n        case event instanceof NavigationEnd:\n        case event instanceof NavigationCancel:\n        case event instanceof NavigationError: {\n          this.loading = false;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChanged\n      .pipe(\n        debounceTime(500))\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce ', this.autosearchinput, this.currentautocompleteitem);\n        this.filterautoval(this.currentautocompleteitem);\n      });\n\n    this.subscriptions[this.subscriptioncount++] = this.modelChangedserver\n      .pipe(\n        debounceTime(500),\n        // distinctUntilChanged() \n      )\n      .subscribe(() => {\n        // this.searchResult$ = this.api.search(this.model);\n        // console.log('after debounce  server', this.autosearchinput, this.currentautocompleteitem);\n        if (this.autosearchinput[this.currentautocompleteitem.field] != null && this.autosearchinput[this.currentautocompleteitem.field] != '') {\n          // this.filterautoval(this.currentautocompleteitem);\n\n          const link = this.apiurlval + '' + this.currentautocompleteitem.serversearchdata.endpoint;\n\n          let source: any;\n\n          source = {\n            search_str: this.autosearchinput[this.currentautocompleteitem.field],\n            sort: {\n              field: this.sortdataval.field,\n              type: this.sortdataval.type\n            }\n          };\n\n          // console.log('con...',conditionobj,this.end_date);\n          // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n          // return;\n          this.date_search_source_countval = 0;\n          this.loading = true;\n          this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n            let result: any = {};\n            // console.log(res, 'result');\n            this.loading = false;\n            // return;\n            result = res;\n            // this.loading = false;\n            if (result != null && result.results != null && result.results.res != null) this.rescount = result.results.res.length;\n            if (result.res != null && result.res.length > 0) {\n              // this.dataSource = new MatTableDataSource(result.results.res);\n              this.currentautosearcharr = result.res;\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 2000,\n                data: { errormessage: 'New Search of data loaded ' }\n              });\n            } else {\n              this.currentautosearcharr = [];\n\n              this._snackBar.openFromComponent(SnackbarComponent, {\n                duration: 6000,\n                data: { errormessage: 'No such search record found !!' }\n              });\n\n            }\n\n            this.loading = false;\n            // this.dataSource.paginator = this.paginator;\n            // this.dataSource.sort = this.sort;\n          });\n\n        }\n\n      });\n\n\n\n\n    /* this.myForm = this.fb.group({\n       email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n       password: ['', Validators.required]\n     });*/\n  }\n  /*@Directive({\n    selector: '[Listing]'\n  })*/\n\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange ..',changes);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'updatetable') {\n        // console.log('updatetable');\n        if (changes[v].previousValue != null) {\n          this.selection.clear();\n          this.allSearch();\n        }\n      }\n    }\n  }\n\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.myForm.controls[val].markAsUntouched();\n  }\n  ngOnInit() {\n\n    // if (this.search_settingsval != null && this.search_settingsval.search != null && this.search_settingsval.search != '') {\n\n    //   let source: any;\n    //   let condition: any = {};\n    //   source = {\n    //     source: this.date_search_sourceval,\n    //     condition: condition\n    //   };\n    //   let link = this.apiurlval + '' + this.date_search_endpointval;\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     this.result = res;\n    //     this.preresult = this.result.res;\n    //   });\n\n    // }\n\n    // not needed ,\n\n    // this._service.success(this.columns[0].date,'dndnnd',this.options);\n    /* this.stateGroupOptions = this.myControl.valueChanges\n         .pipe(\n             startWith(''),\n             map(value => this._filterGroup(value))\n         );*/\n\n    this.stateGroup = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n\n    /*const factory = this.resolver.resolveComponentFactory(\n        componentMapper[this.field.type]\n    );\n    this.componentRef = this.container.createComponent(factory);\n    this.componentRef.instance.field = this.field;\n    this.componentRef.instance.group = this.group;\n*/\n\n    this.x = this.datasourceval;\n    const x = this.x;\n    if (this.datasourceval) this.rescount = this.datasourceval.length;\n\n    let temp = [];\n    const keys = x[0];\n    temp = Object.keys(keys);    /*by Object.keys() we can find the fieldnames(or keys) in an object, i.e, in temp object field names are saved*/\n\n    const coldef_list = [];\n    const header_list = [];\n    for (let i = 0; i < temp.length; i++) {\n      coldef_list.push(temp[i].replace(/\\s/g, '_'));      /*to replace spaces in field name by \"_\", we use \"replace(/\\s/g, \"_\")\"*/\n      header_list.push(temp[i]);\n    }\n    // coldef_list.push('Actions');\n    // header_list.push('Actions')\n    // console.log('coldef_list',coldef_list);\n    // console.log('header_list',header_list);\n    this.columns = [];\n\n    for (let i = 0; i < coldef_list.length; i++) {\n      const ff = `row.${coldef_list[i]}`;\n      const tt = { columnDef: `${coldef_list[i]}`, header: `${header_list[i]}`, cell: (row) => eval(ff), objlength: header_list.length };\n      // console.log('tt',tt);\n      // console.log('tt.columnDef');\n      // console.log(tt.columnDef);\n      for (const b in this.modify_header_arrayval) {\n        if (b == tt.header) { tt.header = this.modify_header_arrayval[b]; }\n      }\n\n      if (this.skipval.indexOf(tt.columnDef) == -1) {\n        this.columns.push(tt);\n      }\n    }\n    let displayedcols = [];\n    this.tableflag = 1;\n    setTimeout(() => {\n      this.tableflag = 0;\n    }, 100);\n\n    displayedcols = this.columns.map(x => x.columnDef);\n    if (this.libdataval.footersettings != null) {\n      this.tableFooterColumns = this.libdataval.footersettings.map(x => x.key)\n    }\n    else this.tableFooterColumns = [];\n\n    let customcols: any = [];\n    // console.log('displayedcols',displayedcols);\n    if (this.libdataval != null && this.libdataval.tableheaders != null) {\n      customcols = this.libdataval.tableheaders;\n    }\n    if (customcols != null && customcols.length > 0) {\n      let ccolval: string = '';\n      for (const v in customcols) {\n        if (displayedcols.includes(customcols[v]) == false) {\n          for (const b in this.modify_header_arrayval) {\n            if (b == customcols[v]) { ccolval = this.modify_header_arrayval[b]; }\n          }\n          this.columns.push({ columnDef: customcols[v], header: ccolval, cell: 'NA' });\n        }\n      }\n      displayedcols = customcols;\n    }\n\n\n    // console.log('customcols',customcols,displayedcols,this.columns);\n    if (this.libdataval.hideaction == null || this.libdataval.hideaction == false) {\n      displayedcols.push(this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname);\n      this.columns.push({ columnDef: this.libdataval.actioncolname == null ? 'Actions' : this.libdataval.actioncolname, header: 'Actions', cell: 'NA' });\n    }\n    if (this.libdataval.hidecounter == null || this.libdataval.hidecounter == false) {\n      displayedcols.unshift('#');\n      this.columns.push({ columnDef: '#', header: '#', cell: 'NA' });\n    }\n    // console.log(this.columns, 'cols');\n\n    this.displayedColumns = [];\n    this.displayedColumns = displayedcols;\n    // this.displayedColumns.unshift('#');        /*adds select column in table by unshift function*/\n    if (this.libdataval.hidemultipleselectbutton != true) {\n      this.displayedColumns.unshift('select');\n      this.columns.push({ columnDef: 'select', header: 'select', cell: 'NA' });       /*adds select column in table by unshift function*/\n    }\n    let tempcolarr = [];\n    let tempcolarr2 = [];\n    this.columns.reverse();\n    for (let n in this.columns) {\n      if (tempcolarr.indexOf(this.columns[n].columnDef) == -1)\n        tempcolarr2.push(this.columns[n]);\n      tempcolarr.push(this.columns[n].columnDef);\n\n    }\n    this.columns = tempcolarr2;\n    // this.columns = Array.from(new Set(this.columns.map((item: any) => item.columnDef)));\n\n    // this.columns.map(item => item.columnDef)\n    //   .filter((value, index, self) => self.indexOf(value) === index);\n    // unique col names \n    this.displayedColumns = Array.from(new Set(this.displayedColumns));\n    // console.log(this.columns, 'cols filter', this.displayedColumns);\n    const data_list = [];\n    for (let i = 0; i < this.x.length; i++) {\n      data_list.push(this.createData(x[i]));\n    }\n    this.olddata = data_list;\n    this.dataSource = new MatTableDataSource([]);\n    this.dataSource = new MatTableDataSource(data_list);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n\n    // load search predefinded data\n    setTimeout(() => {\n\n      // this.selectsearch['status'] = '0';\n      // console.log('selectsearch', this.selectsearch);\n      if (this.search_settingsval.selectsearch != null) {\n        // console.log('s1', this.search_settingsval.selectsearch);\n        for (const sl in this.search_settingsval.selectsearch) {\n          if (this.search_settingsval.selectsearch[sl].value != null) {\n            this.selectsearch[this.search_settingsval.selectsearch[sl].field] =\n              this.search_settingsval.selectsearch[sl].value;\n            // console.log('s', this.search_settingsval.selectsearch, '++++++', this.selectsearch);\n          }\n        }\n      }\n\n      if (this.search_settingsval.textsearch != null) {\n        // console.log('t1', this.search_settingsval.textsearch);\n        for (const sl in this.search_settingsval.textsearch) {\n          if (this.search_settingsval.textsearch[sl].value != null) {\n            this.tsearch[this.search_settingsval.textsearch[sl].field] =\n              this.search_settingsval.textsearch[sl].value;\n            // console.log('t', this.search_settingsval.textsearch);\n          }\n        }\n      }\n    }, 1000);\n  }\n\n  // Custom Filter new\n  CustomButtonListen(val:any) {\n   \n    this.onLiblistingButtonChange.emit(\n      {\n        limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,searchdata:this.search_settingsval,buttondata:val\n      }\n    )\n    // var data:any={\n    //   limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected,search:this.search_settingsval,buttonVal:val\n    // }\n    // console.log(data,'data++++===',val)\n  }\n\n  /**image view modal */\n  img_modal_view(img: any) {\n    // console.warn(\"img_modal_view\",img)\n    const dialogRef = this.dialog.open(ImageView, {\n      // panelClass: 'custom-modalbox-image-preview',\n      panelClass: ['custom-modalbox', 'custom-modalbox-image-preview'],\n      height: 'auto',\n      data: { alldata: img }\n    });\n  }\n\n  ngAfterContentInit() {\n    // console.log('ngAfterContentInit() ...');\n  }\n  ngAfterViewInit() {\n\n    // console.log('ngAfterViewInit called ... ');\n    setTimeout(() => {\n      if (this.libdataval != null && this.libdataval.cssoverridesoncelltorow != null) {\n        for (const e in this.libdataval.cssoverridesoncelltorow) {\n\n          const cred = this.upTo(this._elementRef.nativeElement.querySelector('.' + this.libdataval.cssoverridesoncelltorow[e].key), 'tr');\n          if (cred != null) cred.classList.add(this.libdataval.cssoverridesoncelltorow[e].val);\n          // const cred = this._elementRef.nativeElement.querySelector('.cred').parent().parent().parent().parent().addClass('credtr');\n          // console.log(cred, 'cred', e);\n        }\n      }\n\n    }, 2000);\n\n\n  }\n\n  upTo(el, tagName) {\n    tagName = tagName.toLowerCase();\n\n    while (el && el.parentNode) {\n      el = el.parentNode;\n      if (el.tagName && el.tagName.toLowerCase() == tagName) {\n        return el;\n      }\n    }\n\n    // Many DOM methods return null if they don't \n    // find the element they are searching for\n    // It would be OK to omit the following and just\n    // return undefined\n    return null;\n  }\n  ngAfterContentChecked() {\n\n    // console.log('ngAfterContentChecked called ...');\n\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  clickmultipleselectoption(vals) {\n    this.onLiblistingChange.emit({ action: 'multipleselectoptionclick', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected, btndata: vals });\n\n  }\n\n  onSubmit() {\n    let x: any;\n    this.errormg = '';\n    const data = this.myForm.value;\n    for (x in this.myForm.controls) {\n      this.myForm.controls[x].markAsTouched();\n    }\n  }\n  dateSearch(val: any, item: any) {\n    this.searchstrsarr.push({ val: this.tsearch[val], label: item.label, key: val });\n    // console.log(\"start date\");\n    // console.log(this.start_date);\n    // console.log(this.end_date);\n    // let sd = moment(this.start_date).unix();\n    // let ed = moment(this.end_date).unix();\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    if (moment(this.end_date).unix() != null && moment(this.start_date).unix() != null) {\n\n\n\n      this.dateSearch_condition = {};\n      this.dateSearch_condition = condition;\n\n      if (this.end_date != null && this.start_date != null) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime(),\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.start_date != null && (this.end_date == null || this.end_date.length == 0)) {\n        condition[val] = {\n          $gte: new Date(this.start_date).getTime(),\n        };\n      }\n      if (this.end_date != null && (this.start_date == null || this.start_date.length == 0)) {\n        condition[val] = {\n          $lte: new Date(this.end_date).getTime()\n        };\n      }\n      for (const i in this.tsearch) {\n        // console.log('this.tsearch', this.tsearch);\n        if (this.tsearch[i] != null && this.tsearch[i] != '') {\n          textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n        }\n      }\n\n      const autosearch: any = {};\n      // this.autosearch;\n      for (const b in this.autosearch) {\n        for (const m in this.autosearch[b]) {\n          const tv: any = {};\n          tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n          if (autosearch.$or == null) { autosearch.$or = []; }\n          // console.log(autosearch.$and,'autosearch.$or 1')\n          autosearch.$or.push(tv);\n        }\n      }\n\n      const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n      source = {\n        condition: {\n          limit: this.limitcondval.limit,\n          skip: 0\n        },\n        sort: {\n          field: this.sortdataval.field,\n          type: this.sortdataval.type\n        },\n        searchcondition: conditionobj,\n      };\n\n      // console.log('date search con...', conditionobj, this.end_date, this.start_date);\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      /*this._http.post(link, {source:this.date_search_sourceval,\n        condition: {\n          'created_at': {\n            $lte: new Date(this.end_date).getTime(),\n            $gte: new Date(this.start_date).getTime(),\n          }\n        },token: this.jwttokenval,\n      }).subscribe( res =>{\n        let result: any ={};\n        result = res;\n        console.log(\"ok\");\n        console.log(res);\n        console.log(result.res);\n        let newdata = result.res;\n        this.dataSource = new MatTableDataSource(result.res);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      })*/\n    } else {\n      console.log('error');\n    }\n  }\n\n\n\n  selectSearch(value: any, type: any, statusval: any) {\n\n\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // let source: any;\n    // let condition: any = {};\n    this.searchstrsarr[type.field] = ({ val: statusval.name, label: type.label, key: type.field });\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    // if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toLowerCase(), this.tsearch[value].toUpperCase()] }) condition[value + '_regex'] = val;\n    // this.textSearch_condition = {};\n    // this.textSearch_condition = condition;\n    // //console.warn(this.tsearch);\n    // let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    // source = {\n    //   source: this.date_search_sourceval,\n    //   condition: conditionobj\n    // };\n\n\n\n\n\n\n    // console.log(this.tsearch, 'czxcxczxc', this.search_settingsval.selectsearch, this.selectsearch, value, type);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    let condition: any;\n    condition = {};\n    condition[type.field] = value;\n    // this.selectSearch_condition = {};\n    this.selectSearch_condition[type.field] = value;\n    // console.log('selectSearch ', this.selectSearch_condition);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n  // for managing pagination\n\n  paging(val: any) {\n    // const lval: any = this.limitcondval;\n    console.log(this.limitcondval, 'lim val');\n    if (this.limitcondval.pagecount == null) this.limitcondval.pagecount = 1;\n    if (this.limitcondval.limit == null) this.limitcondval.limit = 10;\n    if (this.limitcondval.limit != null && this.limitcondval.limit > 100) {\n      this.limitcondval.limit = 100;\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'You can see maximum 100 records at once !' }\n      });\n    }\n\n    let maxpagecount: number = Number(this.date_search_source_countval / (this.limitcondval.limit));\n    maxpagecount = ~~(maxpagecount);\n    // console.log('this.oldlimitrange', this.oldlimitrange, this.limitcondval, this.date_search_source_countval, maxpagecount);\n    // this.oldlimitrange.push({\n    //   skip: this.limitcondval.skip,\n    //   limit: this.limitcondval.limit,\n    //   pagecount: this.limitcondval.pagecount\n    // });\n    if (val == 1) {\n      this.limitcondval.skip = (this.limitcondval.pagecount) * this.limitcondval.limit;\n      this.limitcondval.pagecount++;\n    }\n    if (val == -1 && this.limitcondval.skip < this.limitcondval.limit) {\n      return;\n    }\n    if (val == -1 && this.limitcondval.skip >= this.limitcondval.limit) {\n      // console.log('in skip block');\n      this.limitcondval.skip = (this.limitcondval.pagecount - 2) * this.limitcondval.limit;\n      this.limitcondval.pagecount--;\n    }\n    if (val > 1) {\n      if (this.limitcondval.pagecount == 1) { this.limitcondval.skip = 0; } else { this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit; }\n      // this.limitcondval.pagecount--;\n    }\n    if (this.limitcondval.pagecount > (maxpagecount + 1)) {\n      this.limitcondval.pagecount = maxpagecount + 1;\n      this.limitcondval.skip = (this.limitcondval.pagecount - 1) * this.limitcondval.limit;\n    }\n\n    // console.log(val,'ss',this.datacollectionval,this.limitcondval);\n    const textSearch: any = {};\n\n\n    for (const i in this.tsearch) {\n      if (this.tsearch[i].toString().toLowerCase() != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$or 2')\n\n        autosearch.$or.push(tv);\n      }\n    }\n\n    const conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    const source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: this.limitcondval.skip\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    /*let data:any={\n      \"condition\":{\n        limit:this.limitcondval.limit,\n        skip:this.limitcondval.skip\n      }\n\n    }*/\n    this.loading = true;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      this.result = res;\n      // console.log(this.result,'res');\n      if (this.result.results.res != null && this.result.results.res.length > 0) {\n        this.onLiblistingChange.emit({ action: 'paging', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n        this.dataSource = new MatTableDataSource(this.result.results.res);\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 2000,\n          data: { errormessage: 'New range of data loaded' }\n        });\n\n        // this.oldlimitrange.skip = this.limitcondval.skip;\n        // this.oldlimitrange.limit = this.limitcondval.limit;\n        // this.oldlimitrange.pagecount = this.limitcondval.pagecount;\n        // console.log('this.oldlimitrange after ', this.oldlimitrange);\n      } else {\n        // console.log('o len', this.oldlimitrange.length, this.oldlimitrange);\n        // this.oldlimitrange = this.oldlimitrange.reverse();\n        // this.oldlimitrange = this.oldlimitrange.slice(0, this.oldlimitrange.length - 2); \n        // this.oldlimitrange.splice(this.oldlimitrange.length - 1, 1);\n        // this.oldlimitrange.splice(0, 1);\n        // this.refreshdata();\n        // this.limitcondval = this.oldlimitrange[this.oldlimitrange.length - 1];\n        // console.log(this.limitcondval, this.oldlimitrange, 'lavl n old ');\n        // this.limitcondval.skip = this.oldlimitrange.skip;\n        // this.limitcondval.limit = this.oldlimitrange.limit;\n        // this.limitcondval.pagecount = this.oldlimitrange.pagecount;\n        // if (val == 1) {\n        //   this.limitcondval.pagecount--;\n        //   this.limitcondval.skip -= this.limitcondval.limit;\n        // }\n        // if (val == -1) {\n        //   this.limitcondval.pagecount++;\n        //   this.limitcondval.skip += this.limitcondval.limit;\n        // }\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'No Data Found in this range !!' }\n        });\n      }\n      this.loading = false;\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    this.selection.clear();\n  }\n\n  addautosearchdata(val: any) {\n    // console.log('v',val);\n\n  }\n  remove(val: any, i: any, field: any) {\n\n    if (this.autosearch[field] != null) { this.autosearch[field].splice(i, 1); }\n  }\n  autocompletechangedetected(item) {\n    this.currentautocompleteitem = item;\n    this.currentautosearcharr = [];\n    // console.log('autocompletechangedetected', this.currentautocompleteitem);\n    if (this.currentautocompleteitem.serversearchdata == null)\n      this.modelChanged.next();\n    else {\n      // console.log('in else block of autocompletechangedetected');\n      this.modelChangedserver.next();\n    }\n\n  }\n  filterautoval(data: any) {\n    // console.log('filterautoval', data, this.autosearchinput[data.field]);\n    const autoselval = this.autosearchinput[data.field];\n    this.currentautosearcharr = [];\n    if (this.autosearchinput[data.field] != null && this.autosearchinput[data.field] != '') {\n      const filterval = data.values.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.name.toString().toLowerCase().includes(autoselval.toLowerCase());\n      });\n      this.currentautosearcharr = filterval;\n    }\n  }\n  resetautocomp(val: any) {\n    const el: any = document.querySelector('#autocompletesearch' + val.field);\n    el.value = '';\n  }\n  autosearchfunction(value: any, data: any, item: any) {\n    // this.autosearchinput[value] = '';\n    // console.log(this.autosearchinput, 'asi', data, value);\n    this.searchstrsarr.push({ val: this.autosearchinput[value], label: item.label, key: value });\n    if (this.autosearch[value] == null) {\n      this.autosearch[value] = [];\n    }\n    this.autosearch[value].push(data);\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    this.autosearchinput[value] = null;\n    this.currentautosearcharr = [];\n    const el: any = document.querySelector('#autocompletesearch' + value);\n    el.value = '';\n    // console.log(value, 'selected auto', this.autosearchinput[value], this.autosearchinput[value]);\n    // reset auto search data !\n    // console.log(value, 'selected auto', this.autosearchinput[value]);\n    // console.log(value,data,'ss',this.autosearch);\n    /*let val: any = this.autosearch[value];\n    let source: any;\n    let condition: any = {};\n    if (this.autosearch[value] !=null && this.autosearch[value].length > 0 && { $or: [this.autosearch[value].toLowerCase(), this.autosearch[value].toUpperCase(), this.autosearch[value]] }) condition[value + '_regex'] = val;\n    this.autoSearch_condition = {};\n    this.autoSearch_condition = condition;\n    let conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };*/\n    // let link = this.apiurlval + '' + this.date_search_endpointval;\n    // this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //   this.result = res;\n    //   this.dataSource = new MatTableDataSource(this.result.res);\n    //   this.dataSource.paginator = this.paginator;\n    //   this.dataSource.sort = this.sort;\n\n    // });\n  }\n  textsearchfunction(value: any, item: any) {\n    if (this.tsearch[value] == '') {\n      const index = this.searchstrsarr.indexOf(this.searchstrsarr[value]);\n      console.log(index, 'index');\n      delete this.searchstrsarr[value];\n      // if (index > -1) {\n      // this.searchstrsarr.splice(value, 1);\n      // }\n    } else\n      this.searchstrsarr[value] = ({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log('textsearchfunction', value, item, this.searchstrsarr);\n    const link = this.apiurlval + '' + this.date_search_endpointval;\n    let source: any;\n    const condition: any = {};\n    let val = '';\n    if (this.tsearch != null && this.tsearch[value] != null) {\n      val = this.tsearch[value].toString().toLowerCase();\n    }\n\n    if (this.tsearch[value] != null && this.tsearch[value].length > 1 && { $or: [this.tsearch[value].toString().toLowerCase(), this.tsearch[value].toUpperCase()] }) { condition[value + '_regex'] = val; }\n    this.textSearch_condition = {};\n    this.textSearch_condition = condition;\n    // console.warn(this.tsearch);\n    const conditionobj = Object.assign({}, this.textSearch_condition, this.dateSearch_condition, this.autoSearch_condition, this.selectSearch_condition);\n    source = {\n      source: this.date_search_sourceval,\n      condition: conditionobj\n    };\n    // add loader\n    // this.loading = true;\n    // if (value != null) {\n    //   this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n    //     let result: any = {};\n    //     result = res;\n    //     //close loader\n    //     this.loading = false;\n    //     let newdata = result.res;\n    //     this.dataSource = new MatTableDataSource(result.res);\n    //     this.dataSource.paginator = this.paginator;\n    //     this.dataSource.sort = this.sort;\n    //   });\n    // } else {\n    //   console.log('oops');\n    // }\n    // console.log(\"error\");\n  }\n\n  refreshdata() {\n    console.log('++++')\n    this.autosearch = [];\n    this.tsearch = [];\n    this.selectsearch = [];\n    this.start_date = null;\n    this.limitcondval.skip = 0;\n    this.end_date = null;\n    this.selectSearch_condition = {};\n    this.dateSearch_condition = {};\n    this.allSearch();\n    this.selection.clear();\n  }\n  refreshalldata(val: any) {\n    this.dataSource = new MatTableDataSource(this.olddata);\n    this.selection = new SelectionModel(true, []);\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n\n    if (val.filteredData != null && val.filteredData.length < this.olddata.length) {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: 'Refresh successfully!!', isconfirmation: false }\n      });\n    } else {\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        // panelClass: 'custom-modalbox',\n        panelClass: ['custom-modalbox', 'refreshdata'],\n        data: { message: ' Updated!!', isconfirmation: false }\n      });\n    }\n\n  }\n\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toString().toLowerCase();\n\n    return this.searchListval.filter(option => option.toString().toLowerCase().includes(filterValue));\n  }\n\n  getstatus(val: any) {\n    // console.log('val');\n    // console.log(val);\n    for (const b in this.statusarrval) {\n      if (this.statusarrval[b].val == val) {\n        return this.statusarrval[b].name;\n      }\n      // console.log(this.statusarrval[b].name);\n    }\n    return 'N/A';\n  }\n  pdfFlag(val: any) {\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date == null) {\n      // console.log('shatter blok');\n      this.sh = true;\n      this.aud = false;\n    }\n    if (val.shatterblok_agreement_date != null && val.audiodeadline_agreement_date != null) {\n      this.sh = true;\n      this.aud = true;\n    }\n    if (val.shatterblok_agreement_date == null && val.audiodeadline_agreement_date == null) {\n      this.sh = false;\n      this.aud = false;\n    }\n  }\n  grapurl(val: any) {\n    //  for all row checking\n    // console.log(val)\n    if (val != null) {\n      this.art = true;\n      this.aud2 = true;\n    }\n    if (val == null) {\n      this.art = false;\n      this.aud2 = false;\n    }\n    // console.log(this.sh);\n    // console.log(this.aud);\n  }\n\n  copyText(row: any, val: string) {\n\n    const fullurl = val + '' + row;\n    const selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    selBox.value = fullurl;\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n\n    this._snackBar.openFromComponent(SnackbarComponent, {\n      duration: 6000,\n      data: { errormessage: 'Copied Successfully !! ' }\n    });\n  }\n\n  openinternallink(val: any) {\n    this.router.navigate([val.route]);\n  }\n\n\n  openinternallinkwithparam(val: any, data: any) {\n    const rdata: any = [];\n    rdata.push(val.route);\n    for (const v in val.param) {\n      rdata.push(data[val.param[v]]);\n    }\n    // console.log('radat', rdata);\n    this.router.navigate(rdata);\n  }\n\n  opencustombuttonactionlocaldata(val: any, data: any) {\n    // console.log('opencustombuttonactionlocaldata',val,data);\n    const dataarr = [];\n    // dataarr.push(['name','debasis']);\n    // dataarr.push(['desc','test']);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    for (const v in val.datafields) {\n      const temparr = [];\n      temparr.push(val.datafields[v]);\n      if (val.datafields[v] != 'image' && val.datafields[v] != 'video') {\n        // console.log('ss',val.datafields[v]);\n        if (data[val.datafields[v]] != null && typeof (data[val.datafields[v]]) != 'object') {\n          // console.log('df', data[val.datafields[v]].toString());\n          if (data[val.datafields[v]] != null && data[val.datafields[v]].toString().includes('iframe')) {\n            // console.log('in safe', data[val.datafields[v]]);\n            temparr.push(this.sanitizer.bypassSecurityTrustHtml(data[val.datafields[v]]));\n          } else {\n            temparr.push((data[val.datafields[v]]));\n          }\n        } else {\n          // console.log('ss22',val.datafields[v]);\n          // else\n          temparr.push(data[val.datafields[v]]);\n        }\n      }\n      if (val.datafields[v] == 'image') { temparr.push('<img mat-card-image src=' + data[val.datafields[v]] + ' > <br/>'); }\n      if (val.datafields[v] == 'video') {\n        if (data[val.datafields[v]] != null && data[val.datafields[v]] != '') {\n          let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + data[val.datafields[v]] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n          temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n          temparr.push(temphtml);\n          // console.log('thtml', temphtml, data[val.datafields], data[val.datafields[v]]);\n        } else {\n          temparr.push('N/A');\n        }\n      }\n\n      // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n      dataarr.push(temparr);\n    }\n    // console.log('local data m', dataarr);\n    let res: any = dataarr;\n\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n\n    // console.log('dataarr',dataarr);\n    if (val.refreshdata != null && val.refreshdata == true) {\n      this.allSearch();\n    }\n    res.message = val.headermessage;\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      panelClass: ['custom-modalbox-apidata', 'modal-localdata'],\n      data: { isconfirmation: false, data: res }\n    });\n  }\n  opencustombuttonactionapidata(val: any, data: any) {\n    // console.log('opencustombuttonactionapidata',val,data);\n    this.loading = true;\n    const link: any = this.apiurlval + val.endpoint;\n    const source: any = {};\n    source[val.param] = data._id;\n    if (val.otherparam != null) {\n      for (const n in val.otherparam) {\n        source[val.otherparam[n]] = data[val.otherparam[n]];\n\n      }\n    }\n    this.loaderrow = data._id;\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n\n        // console.log('res',result);\n        let resdata: any = {};\n        this.loaderrow = null;\n        this.loading = false;\n        if (result.res[0] != null) {\n          resdata = result.res[0];\n        } else {\n          resdata = result.res;\n        }\n        const temprdata: any = {};\n        console.log('resdata>>>', resdata);\n        if (val.datafields != null) {\n          for (const b1 in val.datafields) {\n            console.log('val.datafields', val.datafields[b1]);\n            // for (let b2 in dataarr) {\n            // console.log('b2',b2,data[b2],dataarr[b2][0]);\n            // if (dataarr[b2][0] == val.datafields[b1]) resdataformodal[b1] = [dataarr[b2][0], dataarr[b2][1]];\n            temprdata[val.datafields[b1]] = resdata[val.datafields[b1]];\n          }\n          // }\n          resdata = temprdata;\n\n\n        }\n\n        let dataarr = [];\n        // dataarr.push(['name','debasis']);\n        // dataarr.push(['desc','test']);\n        for (const v in resdata) {\n          const temparr = [];\n          temparr.push(v);\n          if (v != 'image' && v != 'video') {\n            if (resdata[v] != null && typeof (resdata[v]) != 'object') {\n              // console.log('resv', resdata[v]);\n              if (resdata[v].toString().includes('iframe')) {\n                temparr.push(this.sanitizer.bypassSecurityTrustHtml(resdata[v]));\n              } else { temparr.push(resdata[v]); }\n            } else { temparr.push(resdata[v]); }\n          }\n          if (v == 'image') { temparr.push('<img mat-card-image src=' + resdata[v] + ' > <br/>'); }\n          if (v == 'video') {\n            let temphtml: any = ('<iframe width=560 height=315 src=https://www.youtube.com/embed/' + resdata[v] + ' frameborder=0 allow=accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture allowfullscreen></iframe> <br/>');\n            temphtml = this.sanitizer.bypassSecurityTrustHtml(temphtml);\n            temparr.push(temphtml);\n          }\n          // if(val.datafields[v]=='video') temparr.push(\"<img mat-card-image src=\" + data[val.datafields[v]] + \" > <br/>\")\n          dataarr.push(temparr);\n\n        }\n        if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n          const resdata: any = [];\n          for (const b in dataarr) {\n            for (const c in this.libdataval.detailview_override) {\n              // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n              if (this.libdataval.detailview_override[c].key == dataarr[b][0]) {\n                // console.log('h', c, this.libdataval.detailview_override[c]);\n                resdata[b] = [this.libdataval.detailview_override[c].val, dataarr[b][1], dataarr[b][0]];\n              }\n            }\n            if (resdata[b] == null) { resdata[b] = dataarr[b]; }\n\n          }\n          // console.log('c',res,resdata);\n          dataarr = resdata;\n\n        }\n        // console.log('c api data ', resdata);\n        // let resdataformodal: any = {};\n\n        // console.log('resdataformodal', dataarr, dataarr);\n        if (val.refreshdata != null && val.refreshdata == true) {\n          this.allSearch();\n        }\n        dataarr['message'] = val.headermessage;\n        const dialogRef = this.dialog.open(Confirmdialog, {\n          height: 'auto',\n          panelClass: ['custom-modalbox', 'api-data'],\n          data: { isconfirmation: false, data: dataarr }\n        });\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n    return;\n\n  }\n  openextlinkwithparam(val: any, data: any) {\n    // console.log('val',val,data);\n    let qtext: any = '';\n    let fulllink: any = '';\n    fulllink = val.link;\n    if (val.paramtype == null) {\n      for (const v in val.param) {\n        qtext = val.param[v].q + '=' + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n        if (parseInt(v) == 0) { fulllink = fulllink + '?' + qtext; }\n        if (parseInt(v) != 0) { fulllink = fulllink + '&' + qtext; }\n      }\n      // val.link=fulllink;\n    }\n    if (val.paramtype != null && val.paramtype == 'angular') {\n      for (const v in val.param) {\n        // qtext = val.param[v].q + \"=\" + encodeURI(data[val.param[v].key]);\n        // console.log('qtext',qtext);\n\n        fulllink = fulllink + '/' + encodeURI(data[val.param[v]]);\n      }\n      // val.link=fulllink;\n\n    }\n    setTimeout(() => {\n      // console.log(\"Hello from setTimeout\");\n      // console.log('link',fulllink,data,qtext);\n    }, 10);\n\n    window.open(fulllink, '_blank');\n  }\n  clickurl(val: any, url: any) {\n    const link = url + '' + val._id + '' + this.pdf_link_val;\n    window.open(link, '_blank');\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  checkedlist() {\n    // this.selection.isSelected(row);\n    setTimeout(() => {\n      const seldata: any = this.selection.selected.map(x => x._id)\n      console.log('checkedlist', this.dataSource.data.length, this.selection.selected.length, this.selection.selected, seldata);\n      this.onLiblistingChange.emit({ action: 'multipleselectionchange', limitdata: this.limitcondval, sortdata: this.sortdataval, selecteddata: this.selection.selected });\n    }, 100);\n\n\n  }\n  isAllSelected() {\n    // console.log('isAllSelected');\n    if (this.selection != null && this.selection.select) {\n      // console.log('isAllSelected', this.dataSource.data.length, this.selection.selected.length, this.selection.selected);\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    this.checkedlist();\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: any): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n\n  createData(point: any) {\n    const data = {};\n    Object.keys(point).forEach(function (key) {\n      data[key.replace(/\\s/g, '_')] = point[key];\n    });\n    return data;\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toString().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  /*applyFilter1(filterValue: string, val: any) {\n    console.log(filterValue);\n    console.log(val.value);\n    let value= new MatTableDataSource(val.value);\n\n    value.filter = filterValue.trim().toLowerCase();\n    console.log(value);\n    /!* this.dataSource.filterPredicate = function(data, filter: string): boolean {\n      // return data.name.toLowerCase().includes(filter);\n    };\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }*!/\n  }*/\n\n  styleCell(col_name, row) {\n\n    /*\n     if (col_name['columnDef']=='progress' && row['progress']=='100'){\n     return {'color' : 'red'}\n     } else {\n     return {}\n     }\n     */\n\n\n    return {};\n  }\n  /**show video modal on click of thamnail function by sourav */\n  fetchvideo(videodata: any) {\n    // console.warn('videodata',videodata);\n    const dialogRef = this.dialog.open(VideoPlayer, {\n      panelClass: ['custom-modalbox-videoplayer-preview', 'video-modal'],\n      height: 'auto',\n      data: { previewData: videodata }\n    });\n  }\n  opennotes(val: any) {\n    this.loading = true;\n    this.loaderrow = val._id;\n    this._apiService.postSearch(this.apiurlval + this.libdataval.notes.listendpoint, this.jwttokenval, { id: val._id }).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result.res, 'list notes');\n      this.loading = false;\n      this.loaderrow = null;\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n      // this.data.notesval = '';\n      // console.log('notes', val);\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        height: 'auto',\n        panelClass: ['custom-modalbox', 'notes-modal'],\n        data: {\n          isconfirmation: false,\n          notes: true, apiurl: this.apiurlval,\n          notedata: this.libdataval.notes, rowdata: val,\n          jwttokenval: this.jwttokenval,\n          listdata: result.res,\n          _snackBar: this._snackBar\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.allSearch();\n      });\n    });\n\n  }\n\n  viewdata(data1: any) {\n    let data: any;\n    data = data1;\n    const data2: any = [];\n\n    for (const key in data) {\n      const flagk: any = '';\n      if (data.hasOwnProperty(key)) {\n        if (typeof (data[key]) == 'boolean') {\n          if (data[key] == true) { data[key] = 'Yes'; }\n          if (data[key] == false) { data[key] = 'No'; }\n        }\n        if (key == 'image') {\n          data[key + ':'] = '<img mat-card-image src=' + data[key] + '><br/>';\n\n        }\n\n        if (typeof (data[key]) == 'object') {\n\n        }\n\n\n        if (typeof (data[key]) == 'object') {\n          const tempdata: any = [];\n          for (const k in data[key]) {\n            for (const p in this.detail_datatypeval) {\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value == 'image') {\n\n                // let imgval:any=this.detail_datatypeval[p].fileurl+data[key][k];\n                // console.log('imgval');\n                // console.log('imgval');\n                // console.log(imgval);=\"+\n                // console.log(data[key][k].replace(/'/g, ''));\n                tempdata.push('<img mat-card-image src=' + data[key][k] + '><br/>');\n                // tempdata.push(\"<span>\"+data[key][k]+\"</span><br/>\")\n\n\n              }\n              if (this.detail_datatypeval[p].key == key && this.detail_datatypeval[p].value != 'image') {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                tempdata.push('<span>' + data[key][k] + '</span><br/>');\n\n\n\n\n              }\n              if (this.detail_datatypeval[p].key != key) {\n                // tempdata.push(\"<img mat-card-image src=\"+data[key][k]+\"><br/>\")\n                if (typeof (data[key][k]) == 'object') {\n                  for (const objk in data[key][k]) {\n                    tempdata.push('<span>' + objk + ' : ' + data[key][k][objk] + '</span><br/>');\n                  }\n\n                }\n\n\n              }\n            }\n\n          }\n          data[key + ':'] = tempdata;\n        }\n      }\n    }\n\n    for (const n in data) {\n      if (data[n] != null && data[n] != '') {\n        data2[n] = data[n];\n      }\n    }\n\n    for (const v in this.detail_skip_arrayval) {\n      // data2[this.detail_skip_arrayval[v]]='';\n      delete data2[this.detail_skip_arrayval[v]];\n    }\n    let res = Object.entries(data2);\n    // console.log('view data',res);\n    if (this.libdataval.detailview_override != null && this.libdataval.detailview_override.length > 0) {\n      const resdata: any = [];\n      for (const b in res) {\n        for (const c in this.libdataval.detailview_override) {\n          // console.log('hww',c,this.libdataval.detailview_override[c].key,res[b],res[b][0],res[b][1]);\n          if (this.libdataval.detailview_override[c].key == res[b][0]) {\n            // console.log('h', c, this.libdataval.detailview_override[c]);\n            resdata[b] = [this.libdataval.detailview_override[c].val, res[b][1], res[b][0]];\n          }\n        }\n        if (resdata[b] == null) { resdata[b] = res[b]; }\n\n      }\n      // console.log('c',res,resdata);\n      res = resdata;\n      // console.log('c',res,resdata);\n    }\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      height: 'auto',\n      autoFocus: false,\n      maxHeight: '1000vh',\n      panelClass: ['custom-modalbox', 'detail-view'],\n      data: { isconfirmation: false, data: res }\n    });\n\n  }\n  managestatus(data: any) {\n    const bs = this.bottomSheet.open(BottomSheet, { panelClass: 'custom-bottomsheet', data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n      if (result != null) {\n        data.status = result.val;\n        data.id = data._id;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatus(this.apiurlval + this.libdataval.updateendpoint, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (this.olddata[c]._id == data._id) {\n                this.olddata[c].status = data.status;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n            this.onLiblistingChange.emit({ action: 'statusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'manage-status'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  // for tree view in modal\n  custombuttonlistner(row: any, custombutton: any) {\n    // console.log('custombuttonlistner', row, custombutton);\n    this.onLiblistingChange.emit({\n      action: 'custombuttonclick', limitdata: this.limitcondval, sortdata: this.sortdataval, custombuttonclick: {\n        data: row, btninfo: custombutton\n      }\n    });\n  }\n  custombuttonfunc(data: any) {\n    // console.log('data');\n    // console.log(data);    // row data\n    // console.log(this.custombuttonval);    // object from where the library has been used\n    let unsafeurl: any = this.custombuttonval.url;   // iframe url\n    for (const b in this.custombuttonval.fields) {\n      unsafeurl = unsafeurl + '/' + data[this.custombuttonval.fields[b]];\n    }\n    unsafeurl = this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);   // for sanitizing the url for security, otherwise it won't be able to show the page in iframe, hence modal\n\n    const dialogRef = this.dialog.open(Confirmdialog, {       // for opening the modal\n      height: 'auto',\n      panelClass: 'custom-data-modal',\n      data: { isconfirmation: false, data: [{ data, customdata: unsafeurl }] }\n    });\n\n\n  }\n\n\n\n  managestatusmultiple() {\n\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n    // console.log('data');\n    // console.log(data);\n    const bs = this.bottomSheet.open(BottomSheet, { data: { items: this.statusarrval } });\n\n    this.subscriptions[this.subscriptioncount++] = bs.afterDismissed().subscribe(result => {\n\n      if (result != null) {\n        // data.status = result.val;\n        // data.id = data._id;\n        const newstatus: any = result.val;\n        this.subscriptions[this.subscriptioncount++] = this._apiService.togglestatusmany(this.apiurlval + this.libdataval.updateendpointmany, ids, result.val, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in this.olddata) {\n              // this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n              if (ids.indexOf(this.olddata[c]._id) > -1) {\n                this.olddata[c].status = newstatus;\n              }\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            // this.allSearch();\n\n            this.onLiblistingChange.emit({ action: 'multiplestatusupdate', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'toogle-many'],\n              data: { message: 'Status updated successfully!!', isconfirmation: false }\n            });\n\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  deletemultiple() {\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-multiple'],\n      data: {\n        message: 'Are you sure you want to delete these records? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n    const ids: any = [];\n    let c: any;\n    for (c in this.selection.selected) {\n\n      ids.push(this.selection.selected[c]._id);\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteManyData(this.apiurlval + this.libdataval.deleteendpointmany, ids, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            for (const c in ids) {\n              this.olddata = this.olddata.filter(olddata => olddata._id != ids[c]);\n            }\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'multipledelete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-multiple'],\n              data: { message: 'Record(s)  deleted successfully !!', isconfirmation: false }\n            });\n\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n  }\n  deletedata(data: any) {\n    // console.log(data);\n    // alert(5);\n    // this._apiService.deteOneData(this.apiurlval+this.deleteendpointval,data,this.jwttokenval);\n    // console.log('data 889 ---');\n    // console.log(data);\n    // console.log('jwttokenval');\n    // console.log(this.jwttokenval);\n\n\n    const dialogRef = this.dialog.open(Confirmdialog, {\n      panelClass: ['custom-modalbox', 'delete-single'],\n      height: 'auto',\n      data: {\n        message: 'Are you sure you want to delete this record? This process can not be undone.',\n        type: 'confirm'\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 'yes') {\n        this.subscriptions[this.subscriptioncount++] = this._apiService.deteOneData(this.apiurlval + this.deleteendpointval, data, this.jwttokenval, this.sourcedataval).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.olddata = this.olddata.filter(olddata => olddata._id != data._id);\n            this.dataSource = new MatTableDataSource(this.olddata);\n            this.selection = new SelectionModel(true, []);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.allSearch();\n            this.onLiblistingChange.emit({ action: 'delete', limitdata: this.limitcondval, sortdata: this.sortdataval });\n            const dialogRef = this.dialog.open(Confirmdialog, {\n              panelClass: ['custom-modalbox', 'delete-single'],\n              data: { message: 'Record  deleted successfully !!', isconfirmation: false }\n            });\n          }\n          if (result.status == 'error') {\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n        });\n\n      }\n      // this.animal = result;\n    });\n\n  }\n\n  editdata(data: any) {\n    this.router.navigate([this.editrouteval, data._id]);\n  }\n\n\n  sorttable(field: any, type: any) {\n    console.log(field, type)\n    this.sortdataval.field = field;\n    this.sortdataval.type = type;\n    this.allSearch();\n  }\n\n\n  \n  allSearch() {\n    // console.log(\"hit\");\n\n    const link = this.apiurlval + '' + this.datacollectionval;\n    const link1 = this.apiurlval + '' + this.datacollectionval + '-count';\n    let source: any;\n    let condition: any;\n    const textSearch: any = {};\n    condition = {};\n    // this.searchstrsarr.push({ val: this.tsearch[value], label: item.label, key: value });\n    // console.log(this.searchstrsarr, 'this.searchstrsarr');\n\n    // console.log(this.search_settingsval.search, 'search_settingsval.search');\n    for (const i in this.tsearch) {\n      // console.log('all search this.tsearch', this.tsearch[i]);\n      if (this.tsearch[i] != null && this.tsearch[i].toString().toLowerCase() != '') {\n        textSearch[i] = { $regex: this.tsearch[i].toString().toLowerCase() };\n      }\n    }\n\n    const autosearch: any = {};\n    // this.autosearch;\n    for (const b in this.autosearch) {\n      for (const m in this.autosearch[b]) {\n        const tv: any = {};\n        tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        // tv[b] = this.autosearch[b][m].val.toString().toLowerCase();\n        if (autosearch.$or == null) { autosearch.$or = []; }\n        // console.log(autosearch.$and,'autosearch.$and 3')\n\n        autosearch.$or.push(tv);\n      }\n    }\n    console.log('autos', autosearch);\n\n    this.limitcondval.pagecount = 1;\n    this.limitcondval.skip = 0;\n    this.oldlimitrange = this.limitcondval;\n\n    let conditionobj: object = {};\n\n    conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition, this.libdataval.basecondition);\n    // conditionobj = Object.assign({}, textSearch, this.dateSearch_condition, autosearch, this.selectSearch_condition);\n    // conditionobj = conditionobj & this.libdataval.basecondition;\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n    // for (let b in conditionobj) {\n    //   // if(conditionobj[b])\n    //   for (let c in this.libdataval.basecondition) {\n    //     if (c == b) {\n    //       // conditionobj[b]={};\n    //       let totalcond: any;\n    //       if (typeof (conditionobj[b]) != 'object')\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], { $eq: conditionobj[b] });\n    //       else\n    //         totalcond = Object.assign({}, this.libdataval.basecondition[c], conditionobj[b]);\n\n    //       console.log('in if blk', c, b, conditionobj[b], this.libdataval.basecondition[c], totalcond);\n    //       conditionobj[b] = totalcond;\n    //     } else {\n    //       conditionobj[c] = this.libdataval.basecondition[c];\n\n    //     }\n\n    //   }\n    // }\n    // console.log('this.libdataval.basecondition', this.selectSearch_condition, 'conditionobj', conditionobj, 'this.libdataval.basecondition', this.libdataval.basecondition);\n    // conditionobj = conditionobj.concat(this.libdata.basecondition);\n\n    source = {\n      condition: {\n        limit: this.limitcondval.limit,\n        skip: 0\n      },\n      sort: {\n        field: this.sortdataval.field,\n        type: this.sortdataval.type\n      },\n      searchcondition: conditionobj,\n    };\n\n    // console.log('con...', conditionobj, 'ed', this.end_date, 'l', Object.keys(conditionobj).length);\n    if (Object.keys(conditionobj).length < 0) {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'No Search criteria selected !! ' }\n      });\n      return;\n\n    } else {\n      // console.warn('cond',condition,this.dateSearch_condition,conditionobj,this.tsearch,textSearch);\n      // return;\n      this.date_search_source_countval = 0;\n      this.loading = true;\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        if (result.results.res != null && result.results.res.length > 0) {\n          this.onLiblistingChange.emit({ action: 'search', limitdata: this.limitcondval, searchcondition: conditionobj, sortdata: this.sortdataval });\n          this.dataSource = new MatTableDataSource(result.results.res);\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 2000,\n            data: { errormessage: 'New Search of data loaded' }\n          });\n        } else {\n          // this.rescount = 0; \n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'No such search record found !!' }\n          });\n\n        }\n\n        this.loading = false;\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n\n      this.subscriptions[this.subscriptioncount++] = this._apiService.postSearch(link1, this.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        this.date_search_source_countval = (result.count);\n        if (result.count == 0) { this.tableflag = 1; } else { this.tableflag = 0; }\n        // console.log('count',result);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n      });\n    }\n\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n\n\n\n\n  /* artistxp preview button click function start */\n  artistxpPreview(singleData: any) {\n    const link = 'http://developmentapi.audiodeadline.com:3090/' + 'datalist';\n    /******* not completed ******/\n    const data: any = { source: 'blockchainuser_view', condition: { posts_id_object: singleData._id }, token: this.jwttokenval };\n    /******** not completed *****/\n    this.subscriptions[this.subscriptioncount++] = this._apiService.postData(link, data).subscribe(response => {\n      const restlt: any = response;\n      /* open dialog */\n      const dialogRef = this.dialog.open(Confirmdialog, {\n        panelClass: ['custom-modalbox', 'delete-axp'],\n        height: 'auto',\n        data: { preview: true, previewData: restlt }\n      });\n    });\n  }\n  /* artistxp preview button click function end */\n\n\n\n}\n\n\n@Component({\n  selector: 'confirmdialog',\n  templateUrl: 'confirm-dialog.html',\n})\nexport class Confirmdialog {\n\n  constructor(\n    public _apiService: ApiService,\n    // public notesval:any=null,\n    public dialogRef: MatDialogRef<Confirmdialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public sanitizer: DomSanitizer) {\n    // console.log('lib data in modal ', this.data, this.data, this.data.rowdata, this.data.rowdata.blogtitle);\n    this.data.color = 'primary';\n    this.data.mode = 'indeterminate';\n    this.data.loadervalue = 50;\n    this.data.bufferValue = 76;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  deletenote(index: any) {\n    // console.log('log', this.data);\n    // if (this.data.notesval != null && this.data.notesval != '') {\n    const source: any = {\n\n      id: this.data.rowdata._id,\n      index\n      // note: this.data.notesval,\n      // user: this.data.notedata.user,\n    };\n    this.data.loading1 = index;\n    this._apiService.postSearch(this.data.apiurl + this.data.notedata.deleteendpoint, this.data.jwttokenval, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      // console.log(result, 'add notes');\n      if (result.status == 'success') {\n        // this.data.listdata.push({ userid: this.data.notedata.currentuserfullname, note: this.data.notesval, created_date: Date.now() });\n        // this.data.notesval = '';\n        this.data.listdata.splice(index, 1);\n        this.data.loading1 = null;\n      }\n      // console.log('count',result);\n      // this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n\n    });\n    // }\n  }\n  addnotes() {\n    // console.log('log', this.data);\n    if (this.data.notesval != null && this.data.notesval != '') {\n      const source: any = {\n\n        id: this.data.rowdata._id,\n        note: this.data.notesval,\n        user: this.data.notedata.user,\n      };\n      this.data.loading = true;\n      this._apiService.postSearch(this.data.apiurl + this.data.notedata.addendpoint, this.data.jwttokenval, source).subscribe(res => {\n        let result: any = {};\n        result = res;\n        // console.log(result, 'add notes');\n        if (result.status == 'success') {\n          if (this.data.listdata == null) { this.data.listdata = []; }\n          this.data.listdata.unshift({ _id: this.data.rowdata._id, notes: { userid: this.data.notedata.user, note: this.data.notesval, user: this.data.notedata.currentuserfullname, created_date: Date.now() } });\n          this.data.notesval = '';\n          this.data.loading = null;\n        }\n        // console.log('count',this.data.listdata);\n        // this.dataSource.paginator = this.paginator;\n        // this.dataSource.sort = this.sort;\n\n      });\n    } else {\n      // console.log('blank notes');\n      this.data._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 2000,\n        data: { errormessage: 'Notes can\\'t be blank !! ' }\n      });\n    }\n  }\n\n  gettypeof(val: any) {\n    return typeof (val);\n  }\n  sanitizeUrl(unsafeurl: any, data: any, rowdata: any) {\n    for (const b in data) {\n      unsafeurl = unsafeurl + '/' + rowdata[data[b]];\n\n    }\n    return this.sanitizer.bypassSecurityTrustResourceUrl(unsafeurl);\n  }\n\n}\n\n\n\n\n@Component({\n  selector: 'bottom-sheet',\n  templateUrl: 'bottom-sheet.html',\n})\nexport class BottomSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheet>, @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {\n    // console.warn(\"bottom-sheet\",data);\n  }\n\n  openLink(val: any): void {\n    this.bottomSheetRef.dismiss(val);\n  }\n}\n\n/**listing video player */\n@Component({\n  selector: 'videoplayer',\n  templateUrl: 'videoplayer.html',\n})\nexport class VideoPlayer {\n\n  constructor(\n    public dialogRef: MatDialogRef<VideoPlayer>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('videoplayerModal',data.previewData.video);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n/**listing Image View */\n@Component({\n  selector: 'image',\n  templateUrl: 'img_modal_view.html',\n})\nexport class ImageView {\n\n  // public data:any;\n  constructor(\n    public dialogRef: MatDialogRef<ImageView>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    // console.warn('ImageViewModal', data);\n  }\n  addnotes() {\n    // console.log('log', this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`\n    .example-pizza-party {\n      color: hotpink;\n    }\n  `],\n})\nexport class SnackbarComponent {\n  constructor(\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\n  ) {\n    // console.log('snack',this.data);\n  }\n}\n","import { Component, OnInit, ViewChild, Input, Inject, SimpleChange, ElementRef, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { ApiService } from '../api.service';\nimport { Confirmdialog, SnackbarComponent } from '../listing.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { ThemePalette } from '@angular/material/core';\nimport { Router } from '@angular/router';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\n// import {MatSnackBar} from \"@angular/material/snack-bar\";\n@Component({\n  selector: 'lib-showform',\n  templateUrl: './showform.component.html',\n  styleUrls: ['./showform.component.css']\n})\nexport class ShowformComponent implements OnInit {\n  @Input()\n  set formdata(formdata: any) {\n    this.formdataval = formdata;\n    // console.log(this.formdataval);\n  }\n  @Input()\n  set formfieldrefreshdata(formfieldrefreshdata: any) {\n    this.formfieldrefreshdataval = formfieldrefreshdata;\n    // console.log(this.formfieldrefreshdataval);\n  }\n  @Input()\n  set formfieldrefresh(formfieldrefresh: any) {\n    this.formfieldrefreshval = formfieldrefresh;\n    // console.log(this.formfieldrefreshval);\n  }\n\n  // public minDate = new Date(2020, 8, 24);\n  // public maxDate = new Date(2020, 8, 31);\n  public dateflag: any = false;\n  public PasswordVal: any = '';\n\n  constructor(private formBuilder: FormBuilder, public _apiService: ApiService, private _snackBar: MatSnackBar, private router: Router, private elementRef: ElementRef,) {\n\n    // console.log(this.minDate, 'today===>', this.maxDate)\n\n  }\n\n  get name() {\n    return this.formGroup.get('name') as FormControl;\n  }\n  formGroup: FormGroup;\n  titleAlert = 'This field is required';\n  post: any = '';\n  showform = false;\n  loading = false;\n  formfieldrefreshval = false;\n  formdataval: any = {};\n  formfieldrefreshdataval: any = {};\n  filerfielddata: any = [];\n  autocompletefiledvalue: any = [];\n  filearray: any = [];\n  filecount: any = [];\n  currentautocomplete: any = '';\n  fieldloading: any = '';\n  isPasswordVisible: Boolean = true;\n\n  /*for progress bar*/\n\n  color: ThemePalette = 'primary';\n  mode: any = 'indeterminate';\n  value = 50;\n  bufferValue = 75;\n  @Output() onFormFieldChange = new EventEmitter<any>();\n\n\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n\n  ngOnInit() {\n    this.createForm(0);\n\n\n    // this.setChangeValidate()\n  }\n\n\n  //Generate Password button\n  GeneratePassword(val) {\n    this.PasswordVal = '';\n    this.PasswordVal = this.makeid(10);\n\n    setTimeout(() => {\n      val.value = this.PasswordVal;\n      this.formGroup.controls[val.name].patchValue(this.PasswordVal);\n    }, 200);\n\n    // console.log(this.PasswordVal, 'PasswordVal++++')\n\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     this.formdataval.fields[g].value = this.PasswordVal;\n    //     // this.formGroup.controls['password'].patchValue(this.PasswordVal)\n    //     this.formfieldrefreshdata = { field: 'password', value: this.PasswordVal };\n\n    // console.log(this.PasswordVal, 'PasswordVal')\n    //   }\n    // }\n\n  }\n\n  //copy Password button\n  copyGeneratePassword(val) {\n\n    var passwordFieldData: any = '';\n\n    passwordFieldData = val.value;\n\n    // for (const g in this.formdataval.fields) {\n    //   if (this.formdataval.fields[g].passwordflag == true) {\n    //     // console.log(this.formdataval.fields[g].passwordflag, '++++==', this.formdataval.fields[g])\n    //     passwordFieldData = this.formdataval.fields[g].value;\n    //     // console.log(passwordFieldData, 'PasswordVal', this.formdataval.fields[g])\n    //   }\n    // }\n    // console.log(passwordFieldData, '??')\n\n    if (passwordFieldData != null && passwordFieldData != '') {\n      const el = document.createElement('textarea');\n      el.value = passwordFieldData;\n      document.body.appendChild(el);\n      el.select();\n      document.execCommand('copy');\n      document.body.removeChild(el);\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Copy To Clipboard' }\n      });\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //preview Password button\n\n  previewGeneratePassword(val) {\n\n    if (val.value != null && val.value != '') {\n      // console.log(val, '++++++++++++')\n      switch (val.type) {\n        case 'password':\n          val.type = 'text';\n          this.isPasswordVisible = false;\n          break;\n        case 'text':\n          val.type = 'password';\n          this.isPasswordVisible = true;\n\n          break;\n      }\n    } else {\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 3000,\n        data: { errormessage: 'Please Generate Password..!' }\n      });\n    }\n  }\n\n\n  //generate ran password\n  makeid(length) {\n    var result = 'P';\n    length = length + 1;\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  }\n\n  // open calendar into date field\n  openCalendar() {\n    this.dateflag = true;\n    // console.log(this.dateflag, 'dateflag')\n  }\n\n  navtocancel() {\n    if (this.formdataval.cancelroute != null) {\n      this.router.navigate([this.formdataval.cancelroute]);\n    }\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      // console.log('in after view init trigger');\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file') {\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('drop', this.handleDrop.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragenter', this.cancel.bind(this));\n          this.elementRef.nativeElement.querySelector('#drop' + this.formdataval.fields[g].name).addEventListener('dragover', this.cancel.bind(this));\n\n        }\n      }\n\n    }, 1000);\n  }\n\n  triggerevents(val: any) {\n    // console.log('in triggerevents', val);\n    setTimeout(() => {\n      // console.log('val loadeed trigger', val);\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('drop', this.handleDrop.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragenter', this.cancel.bind(this));\n      this.elementRef.nativeElement.querySelector('#drop' + val.name).addEventListener('dragdragover', this.cancel.bind(this));\n    }, 1000);\n\n  }\n\n  cancel(e) {\n    // console.log('cancel',e);\n    e.preventDefault();\n    return false;\n  }\n  handleDrop(e) {\n    // let apiBaseURL=\"\"\n    // this.imageChangedEvent = e;\n    const list = document.getElementById('list');\n    const apiBaseURL = 'https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev';\n    e.preventDefault();\n    // console.log('handleDrop', e);\n    const dt = e.dataTransfer;\n    const files = dt.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      // console.log(files, 'files', e.target.id);\n      // console.log('farr', this.filearray);\n      for (const g in this.formdataval.fields) {\n        if (this.formdataval.fields[g].type == 'file' && this.formdataval.fields[g].name == e.target.id.replace('drop', '')) {\n          console.log('file details', this.formdataval.fields[g]);\n          if (this.formdataval.fields[g].multiple == null) {\n            // this.deletefile(va)\n            if (this.filearray[e.target.id.replace('drop', '')] != null) {\n              for (const n in this.formdataval.fields) {\n                if (this.formdataval.fields[n].name == e.target.id.replace('drop', '')) {\n                  this.deletefile(this.formdataval.fields[n], 1);\n                  setTimeout(() => {\n                    this.filearray[e.target.id.replace('drop', '')] = files[i];\n                  }, 0);\n                }\n              }\n            } else {\n              this.filearray[e.target.id.replace('drop', '')] = files[i];\n            }\n          } else {\n            if (this.filearray[e.target.id.replace('drop', '')] == null) {\n              this.filearray[e.target.id.replace('drop', '')] = [];\n            }\n            this.filearray[e.target.id.replace('drop', '')].push(files[i]);\n            // console.log('files[0]', files[0]);\n          }\n\n        }\n      }\n      // console.log('this.filearray', this.filearray);\n\n      // var reader = new FileReader();\n      // reader.addEventListener('loadend', function(e){\n      //   fetch(apiBaseURL+\"/requestUploadURL\", {\n      //     method: \"POST\",\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //     },\n      //     body: JSON.stringify({\n      //       name: file.name,\n      //       type: file.type\n      //     })\n      //   })\n      //   .then(function(response){\n      //     return response.json();\n      //   })\n      //   .then(function(json){\n      //     return fetch(json.uploadURL, {\n      //       method: \"PUT\",\n      //       body: new Blob([reader.result], {type: file.type})\n      //     })\n      //   })\n      //   .then(function(){\n      //     var uploadedFileNode = document.createElement('div');\n      //     uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n      //     list.appendChild(uploadedFileNode);\n      //   });\n      // });\n      // reader.readAsArrayBuffer(file);\n    }\n    return false;\n  }\n  // uploadfile(val: any) {\n  //   //let apiBaseURL = \"https://tge24bc2ne.execute-api.us-east-1.amazonaws.com/dev\";\n  //   let h:any=this.bucketupload(val);\n  //   console.log('upppp',h);\n\n\n  // }\n\n  uploadfile(val: any) {\n    // console.log('upppp', val);\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name];\n    // console.log('file val', val);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type, 'file.type');\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  uploadall(val: any) {\n    // this.filearray[val.name].uploadall = 1;\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      // console.log('---', val, 'v---', 'this.filearray[val.name]', this.filearray[val.name][y], this.filearray[val.name][y].uploaded);\n      if (this.filearray[val.name][y].bucket == null) this.uploadfilemultiple(val, this.filearray[val.name][y], y);\n\n    }\n\n  }\n  deletefilemultipleall(val: any) {\n    for (const y in this.filearray[val.name]) {\n      const c: any = parseInt(y) * 500;\n      this.deletefilemultiple(val, this.filearray[val.name][y], y);\n    }\n    setTimeout(() => {\n      this.filearray[val.name] = null;\n    }, 2000);\n\n  }\n  uploadfilemultiple(val: any, f: any, indexf: any) {\n    const reader = new FileReader();\n    const file: any = this.filearray[val.name][indexf];\n    // console.log(file,'file');\n    // console.log(val,'val');\n    // console.log(f,'f');\n    if (this.filecount[val.name] == null) { this.filecount[val.name] = 0; }\n    this.filecount[val.name]++;\n    // console.log('file val in m 2', val, f, indexf, 'if',file);\n    file.uploaded = 2; // show progressbar\n    let temploader: any = this.fieldloading[val.name];\n    temploader = val.name;\n    // reader.addEventListener('loadend', function (e) {\n    reader.onloadend = (e) => {\n      fetch(val.apiurl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: val.prefix + file.name.split(\" \").join(\"\"),\n          type: file.type,\n          path: val.path,\n          bucket: val.bucket\n        })\n      })\n        .then(function (response) {\n          // console.log('buck', response);\n          return response.json();\n        })\n        .then(function (json) {\n          return fetch(json.uploadURL, {\n            method: 'PUT',\n            body: new Blob([reader.result], { type: file.type })\n          });\n        })\n        .then(function () {\n          // return 'success';\n          file.uploaded = 1;\n          file.fileservername = val.prefix + file.name.split(\" \").join(\"\");\n          // console.log(file.type,'file.type')\n          // temploader = null;\n          // var uploadedFileNode = document.createElement('div');\n          // uploadedFileNode.innerHTML = '<a href=\"//s3.amazonaws.com/slsupload/'+ file.name +'\">'+ file.name +'</a>';\n          // list.appendChild(uploadedFileNode);\n        });\n      // });\n    };\n    // console.log('file type', file, typeof (file));\n    const ftype: any = typeof (file);\n    // if (ftype == \"Blob\") \n    reader.readAsArrayBuffer(file);\n  }\n  deletefile(val: any, flag: any = '') {\n    // console.log('this.filearray',this.filearray);\n    // console.log('val',val);\n    // console.log(val.name);\n    const source: any = {};\n    const file: any = this.filearray[val.name];\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success' && flag == '') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        this.filearray[val.name] = null;\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n  deletefilemultiple(val: any, field: any = '', index: any) {\n    const source: any = {};\n    const file: any = this.filearray[val.name][index];\n    this.filecount[val.name]--;\n    source.file = val.prefix + file.name;\n    source.path = val.path;\n    source.bucket = val.bucket;\n    this._apiService.postSearch(val.apideleteurl, this.formdataval.jwttoken, source).subscribe(res => {\n      let result: any = {};\n      result = res;\n      if (result.status == 'success') {\n        // this.formGroup.reset();\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: { errormessage: 'Deleted !!' }\n        });\n        if (this.filearray[val.name] != null) this.filearray[val.name].splice(index, 1);\n      }\n      if (result.status == 'error') {\n        this._snackBar.openFromComponent(SnackbarComponent, {\n          duration: 6000,\n          data: result\n        });\n      }\n\n    }, error => {\n      // console.log('Oooops!');\n      this._snackBar.openFromComponent(SnackbarComponent, {\n        duration: 6000,\n        data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n      });\n      this.loading = false;\n    });\n  }\n\n\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n\n    // console.log('ngonchange in form !!!', changes, 'frv', this.formfieldrefreshdataval);\n    for (const v in changes) {\n      // console.log(v,changes[v],'vv');\n      if (v == 'formfieldrefreshdata') {\n        setTimeout(() => {\n          // console.log('fff in set tt');\n          if (this.formfieldrefreshdataval != null) {\n            // console.log(this.formfieldrefreshdataval, 'm');\n            // console.log(this.formfieldrefreshdataval.field);\n            // console.log(this.formfieldrefreshdataval.value);\n            if (this.formGroup != null && this.formfieldrefreshdataval.field != null && this.formGroup.controls[this.formfieldrefreshdataval.field] != null) {\n              this.formGroup.controls[this.formfieldrefreshdataval.field].patchValue(this.formfieldrefreshdataval.value);\n            } if (this.formfieldrefreshdataval.field == null && this.formfieldrefreshdataval.formvaldata != null && typeof (this.formfieldrefreshdataval.formvaldata) == 'object') {\n              for (const formkey in this.formfieldrefreshdataval.formvaldata) {\n                // console.log('this.formfieldrefreshdataval.data[formkey]', this.formfieldrefreshdataval.formvaldata[formkey]);\n                if (this.formGroup.controls[formkey] != null) { this.formGroup.controls[formkey].patchValue(this.formfieldrefreshdataval.formvaldata[formkey]); }\n                for (const formdatavalkey in this.formdataval.fields) {\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'autocomplete' && (this.formdataval.fields[formdatavalkey].multiple == null || this.formdataval.fields[formdatavalkey].multiple == false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val single', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey] == (this.formdataval.fields[formdatavalkey].val[autoselval].key)) {\n                        this.setautocompletevalue(this.formdataval.fields[formdatavalkey].val[autoselval], this.formdataval.fields[formdatavalkey]);\n                      }\n\n                    }\n\n                  }\n                  // enf of if\n\n                  if (this.formdataval.fields[formdatavalkey].name == formkey && this.formdataval.fields[formdatavalkey].type == 'checkbox' && (this.formdataval.fields[formdatavalkey].multiple != null && this.formdataval.fields[formdatavalkey].multiple != false)) {\n                    for (const autoselval in this.formdataval.fields[formdatavalkey].val) {\n                      // console.log('this.formdataval.fields[formdatavalkey].val check box multiple ', this.formdataval.fields[formdatavalkey].val, autoselval);\n                      // console.log('formkey +  + autoselval', formkey + '__' + autoselval);\n                      if (this.formfieldrefreshdataval.formvaldata[formkey].indexOf(this.formdataval.fields[formdatavalkey].val[autoselval].key) != -1) {\n\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(true); }\n                      } else {\n                        if (this.formGroup.controls[formkey + '__' + autoselval] != null) { this.formGroup.controls[formkey + '__' + autoselval].patchValue(false); }\n\n                      }\n\n                    }\n\n                  }\n                  // end of if\n\n\n                }\n              }\n\n\n            }\n            if (this.formfieldrefreshdataval.field == 'showfieldloader') {\n              this.fieldloading = this.formfieldrefreshdataval.value;\n            }\n            if (this.formfieldrefreshdataval.field == 'addfromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'add');\n            }\n            if (this.formfieldrefreshdataval.field == 'removefromcontrol') {\n              this.managefromcontrol(this.formfieldrefreshdataval.value, 'remove');\n            }\n\n          }\n        }, 0);\n      }\n    }\n  }\n\n  inputblur(val: any) {\n    // console.log('on blur .....');\n    this.formGroup.controls[val].markAsUntouched();\n  }\n\n  filterautocomplete(val: any, data: any) {\n    this.inputblur(val);\n    // console.log('cc', this.formGroup.controls[val].value, data.val);\n    const fieldval = this.formGroup.controls[val].value;\n    if (fieldval == '' || fieldval == null) {\n      this.filerfielddata = [];\n    } else {\n      const filterval = data.val.filter(function (e) {\n        // console.log('e', e, fieldval)\n        return e.val.includes(fieldval);\n      });\n      this.filerfielddata = [];\n      this.filerfielddata = filterval;\n      // console.log('fil', filterval);\n    }\n\n  }\n  reloadautocomplete(val: any) {\n    this.currentautocomplete = val.name;\n  }\n\n  removechipsingle(val: any) {\n    this.autocompletefiledvalue[val.name] = null;\n  }\n  removechipmultiple(val: any, index: any) {\n    this.autocompletefiledvalue[val.name].splice(index, 1);\n    if (this.autocompletefiledvalue[val.name].length == 0) {\n      this.autocompletefiledvalue[val.name] = null;\n    }\n  }\n  setautocompletevalue(val: any, field: any) {\n    // console.log('ff auto complete set ', val, field);\n\n\n\n    if (field.multiple == null) {\n      this.autocompletefiledvalue[field.name] = val.key;\n    } else {\n      if (this.autocompletefiledvalue[field.name] == null) {\n        this.autocompletefiledvalue[field.name] = [];\n      }\n      this.autocompletefiledvalue[field.name].push(val.key);\n\n    }\n    if (this.formGroup.controls[field.name] != null) {\n      this.formGroup.controls[field.name].patchValue(null);\n      this.inputblur(field.name);\n    }\n\n  }\n  managefromcontrol(field: any, type: any) {\n    console.log('manage control', field, type, field.length);\n    if (type == 'remove' && field.name != null) {\n      for (const y in this.formdataval.fields) {\n        if (this.formdataval.fields[y].name == field.name) {\n          this.formdataval.fields.splice(parseInt(y), 1);\n          this.formGroup.removeControl(field.name);\n          console.log('removed', field['name'], 'c', y, field);\n        }\n      }\n    }\n\n    if (type == 'remove' && field.name == null && field.length > 1) {\n      console.log(field.length, 'fl');\n      for (const y in this.formdataval.fields) {\n        for (const z in field) {\n          if (this.formdataval.fields[y].name == field[z]) {\n            this.formdataval.fields.splice(parseInt(y), 1);\n            this.formGroup.removeControl(field[z]);\n            console.log('removed in array form ', field[z], 'c ar', y, field);\n          }\n        }\n      }\n    }\n\n    if (type == 'add') {\n      // console.log('in add form');\n      if (field.after != null) {\n        for (const y in this.formdataval.fields) {\n          if (this.formdataval.fields[y].name == field.after) {\n            this.formdataval.fields.splice(parseInt(y) + 1, 0, field);\n            this.createForm(1);\n            // console.log('added ..', field['name'], 'c', y);\n          }\n        }\n      } else {\n        if (typeof (field) == 'object') {\n          // console.log('in array form  add');\n          for (const v in field) {\n            for (const y in this.formdataval.fields) {\n              if (field[v] != null && field[v].name != null && this.formdataval.fields[y].name == field[v].after) {\n                this.formdataval.fields.splice(parseInt(y) + 1, 0, field[v]);\n                this.createForm(1);\n                // console.log('array field added ..', field[v]['name'], 'c', y);\n              }\n            }\n\n          }\n        }\n      }\n\n    }\n\n  }\n\n  resetformdata() {\n    this.formGroup.reset();\n    this.filearray = [];\n    this.autocompletefiledvalue = [];\n    this.currentautocomplete = '';\n\n  }\n\n  \n  checkchange(field: any, index: any) {\n    console.log(field, 'change', index, 'index2');\n    if (this.formGroup.controls[field.name] != null) {\n      this.onFormFieldChange.emit({ field, fieldval: this.formGroup.controls[field.name].value, fromval: this.formGroup.value });\n    }\n    if (field.dependent != null && field.dependent.length > 0) {\n      let vc: any = 0;\n      for (const n in field.dependent) {\n\n        if (field.dependent[n].condval.toString() == this.formGroup.controls[field.name].value.toString()) {\n          // let temvalidationrulet: any = [];\n          vc++;\n          // this.formGroup.addControl(field.dependent[n].field.name, new FormControl(field.dependent[n].field.value, temvalidationrulet));\n          // console.log('nnnnn', '--', parseInt(index + 1 + parseInt(vc)), '--', vc + index + 1, index, vc, field.dependent[n].field['name']);\n          this.formdataval.fields.splice(parseInt(index + parseInt(vc)), 0, field.dependent[n].field);\n          this.createForm(1);\n\n        } else {\n          for (const y in this.formdataval.fields) {\n            if (this.formdataval.fields[y].name == field.dependent[n].field.name) {\n              this.formdataval.fields.splice(parseInt(y), 1);\n              this.formGroup.removeControl(field.dependent[n].field.name);\n              // console.log('removed', field.dependent[n].field['name'], 'c', y);\n            }\n          }\n\n        }\n      }\n    }\n  }\n\n\n\n  createForm(initialize: any = 0) {\n    /*this.formGroup = this.formBuilder.group({\n      'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkInUseEmail],\n      'fullname': [null, Validators.required],\n     // 'password': [null, [Validators.required, this.checkPassword]],\n      //'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n      //'validate': ''\n    });*/\n    // let demoArray:any=[];\n    if (initialize == 0) {\n      this.formGroup = this.formBuilder.group({});\n    }\n    // console.log(this.formGroup, 'fg')\n    for (const n in this.formdataval.fields) {\n      if (this.formGroup.controls[this.formdataval.fields[n]] == null) {\n        const temcontrolarr: any = [];\n        const temvalidationrule: any = [];\n        if (this.formdataval.fields[n].value != null) {\n          temcontrolarr.push(this.formdataval.fields[n].value);\n        } else {\n          temcontrolarr.push('');\n        }\n        if (this.formdataval.fields[n].type == 'file') {\n          this.filearray[this.formdataval.fields[n].name] = this.formdataval.fields[n].value;\n          // console.log('db', this.filearray[this.formdataval.fields[n].name], this.formdataval.fields[n].name);\n          if (this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n            for (const fa in this.filearray[this.formdataval.fields[n].name]) {\n              // console.log('fv', fa);\n              if (this.filearray[this.formdataval.fields[n].name][fa] != null) {\n                // console.log('fr', this.filearray[this.formdataval.fields[n].name][fa]);\n                this.filearray[this.formdataval.fields[n].name][fa].uploaded = 1;\n              }\n\n            }\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filecount[this.formdataval.fields[n].name] = this.filearray[this.formdataval.fields[n].name].length;\n            }\n\n          } else {\n            if (this.filearray[this.formdataval.fields[n].name] != null) {\n              this.filearray[this.formdataval.fields[n].name].uploaded = 1;\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          if (this.formdataval.fields[n].value == null) { temcontrolarr.push([]); } else {\n            if (this.formdataval.fields[n].val != null) {\n              const tcharr: any = [];\n              for (const b in this.formdataval.fields[n].val) {\n                // console.log('b', b, this.formdataval.fields[n].val[b]);\n                if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[b].key)) {\n                  tcharr.push(true);\n                } else { tcharr.push(false); }\n              }\n              // push the val\n              temcontrolarr.push(tcharr);\n              // console.log('tch', tcharr);\n            }\n          }\n        }\n\n        if (this.formdataval.fields[n].validations != null && this.formdataval.fields[n].validations.length > 0) {\n          for (const v in this.formdataval.fields[n].validations) {\n            // setTimeout( ()=>{\n            if (this.formdataval.fields[n].validations[v].message == null) {\n              this.formdataval.fields[n].validations[v].message = 'Not Valid !!';\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'required') {\n              temvalidationrule.push(Validators.required);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'match') {\n              this.formGroup.setValidators(this.checkPasswords);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'autorequired') {\n              this.formGroup.setValidators(this.autorequired);\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'pattern') {\n              temvalidationrule.push(Validators.pattern(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'maxLength') {\n              temvalidationrule.push(Validators.maxLength(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'min') {\n              temvalidationrule.push(Validators.min(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'max') {\n              temvalidationrule.push(Validators.max(this.formdataval.fields[n].validations[v].value));\n            }\n            if (this.formdataval.fields[n].validations[v].rule == 'minLength') {\n              temvalidationrule.push(Validators.minLength(this.formdataval.fields[n].validations[v].value));\n            }\n            // },0);\n          }\n        }\n\n        // document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n        // demoArray[this.formdataval.fields[n].name]=new FormControl('');\n\n        if (this.formdataval.fields[n].type == 'image' && this.formdataval.fields[n].value != null) {\n          setTimeout(() => {\n            document.querySelector('.imgwrap_' + this.formdataval.fields[n].name + '_' + this.formdataval.fields[n].value).classList.add('imagechoiceactive');\n\n          }, 4000);\n\n        }\n        if (this.formdataval.fields[n].type == 'checkbox' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          let tchvar: any = false;\n          // let\n          // console.log('vv ??? ', this.formdataval.fields[n].value, this.formdataval.fields[n].name, this.formdataval.fields[n].multiple);\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormArray([]));\n          for (const j in this.formdataval.fields[n].val) {\n            if (this.formdataval.fields[n].value != null && this.formdataval.fields[n].value.includes(this.formdataval.fields[n].val[j].key)) {\n              tchvar = true;\n            } else { tchvar = false; }\n            // console.log('n', n, j, tchvar);\n            this.formGroup.addControl(this.formdataval.fields[n].name + '__' + j, new FormControl(tchvar, temvalidationrule));\n            // if()\n            /*const control = new FormControl(tchvar); // if first item set to true, else false\n       (this.formGroup.controls[this.formdataval.fields[n].name] as FormArray).push(control);*/\n            // this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n            // this.formBuilder.control(tchvar)\n            // ]));\n          }\n\n          /*this.formGroup.addControl(this.formdataval.fields[n].name,this.formBuilder.array([\n        this.formBuilder.control(false),\n        this.formBuilder.control(true),\n        this.formBuilder.control(true),\n        this.formBuilder.control(false),\n      ]));*/\n          // this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl(temcontrolarr[0], temvalidationrule));\n        } else {\n          this.formGroup.addControl(this.formdataval.fields[n].name, new FormControl({ value: temcontrolarr[0], disabled: this.formdataval.fields[n].disabled }, temvalidationrule));\n        }\n\n\n        if (this.formdataval.fields[n].type == 'autocomplete' && this.formdataval.fields[n].multiple != null && this.formdataval.fields[n].multiple == true) {\n          for (const at in this.formdataval.fields[n].val) {\n            // console.log('at ...', this.formdataval.fields[n].val[at], at, this.formdataval.fields[n].value, this.formdataval.fields[n].val[at].key);\n            if (this.formdataval.fields[n].value != null && typeof (this.formdataval.fields[n].value) == 'object' && this.formdataval.fields[n].value.indexOf(this.formdataval.fields[n].val[at].key) != -1) {\n              // console.log(this.formdataval.fields[n].val[at].key, 'multi autocomplete triggered  !! ');\n              this.setautocompletevalue(this.formdataval.fields[n].val[at], this.formdataval.fields[n]);\n            }\n          }\n        }\n        if (this.formdataval.fields[n].type == 'autocomplete' && (this.formdataval.fields[n].multiple == null || this.formdataval.fields[n].multiple == false)) {\n          // console.log('single auto complete trigger block', this.formdataval.fields[n]);\n\n          if (this.formdataval.fields[n].value != null) {\n            // console.log('set auto complete single triggered', this.formdataval.fields[n]);\n            this.setautocompletevalue(this.formdataval.fields[n].val[0], this.formdataval.fields[n]);\n\n          }\n\n        }\n\n\n\n        // 'newControl', new FormControl('', Validators.required)\n      }\n    }\n    // =this.checkPasswords(this.formGroup);\n    // this.formGroup = this.formBuilder.group(demoArray);\n\n    setTimeout(() => {\n      // console.log(this.formGroup,'fg',demoArray);\n      this.showform = true;\n      if (this.formdataval.submitactive == null) {\n        this.formdataval.submitactive = true;\n      }\n      // console.log('grp', this.formGroup.controls);\n    }, 10);\n\n  }\n\n  setChangeValidate() {\n    this.formGroup.get('validate').valueChanges.subscribe(\n      (validate) => {\n        if (validate == '1') {\n          this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n          this.titleAlert = 'You need to specify at least 3 characters';\n        } else {\n          this.formGroup.get('name').setValidators(Validators.required);\n        }\n        this.formGroup.get('name').updateValueAndValidity();\n      }\n    );\n  }\n\n\n  chooseimg(vals: any, fields: any) {\n    console.log(vals, fields);\n    document.querySelectorAll('.imgwrapper').forEach(el => {\n      let elem: any;\n      elem = el;\n      // elem.style.transition = \"opacity 0.5s linear 0s\";\n      // elem.style.opacity = 0.5;\n      elem.classList.remove('imagechoiceactive');\n    });\n    // console.log('imgwrap_' + fields.name + '_' + vals.key);\n    document.querySelector('.imgwrap_' + fields.name + '_' + vals.key).classList.add('imagechoiceactive');\n    this.formGroup.controls[fields.name].patchValue(vals.key);\n  }\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    const pass = group.controls.password.value;\n    const confirmPass = group.controls.confirmpassword.value;\n    if (confirmPass == null || confirmPass == '') {\n      group.controls.confirmpassword.setErrors({ required: true });\n      return { required: true };\n    }\n    if (pass != confirmPass) {\n      group.controls.confirmpassword.setErrors({ match: true });\n      return { match: true };\n    }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n  checkPassword(control) {\n    const enteredPassword = control.value;\n    const passwordCheck = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/;\n    return (!passwordCheck.test(enteredPassword) && enteredPassword) ? { requirements: true } : null;\n  }\n  autorequired(group: any) { // here we have the 'passwords' group\n\n    for (const b in group) {\n      if (group[b].type == 'autocomplete' && group[b].validations != null && group[b].validations[0] != null && group[b].validations[0].rule == 'autorequired' && this.autocompletefiledvalue[group[b].name] == null) {\n\n        this.formGroup.controls[group.name].setErrors({ autorequired: true });\n        return { autorequired: true };\n      }\n    }\n    // console.log('bgrrr',group,group.name);\n    // if(this.formGroup.controls[group.name] !=null && group.validations!=null && group.validations[0]!=null && group.validations[0].rule=='autorequired' && this.autocompletefiledvalue[group.name]==null){\n\n\n\n    // let pass = group.controls.password.value;\n    // let confirmPass = group.controls.confirmpassword.value;\n    // if(confirmPass==null || confirmPass==''){\n    //   group.controls.confirmpassword.setErrors({required:true});\n    //   return { required: true };\n    // }\n    // if(pass!=confirmPass){\n    //   group.controls.confirmpassword.setErrors({'match':true});\n    //   return {match:true};\n    // }\n\n    // return pass === confirmPass ? null : { notSame: true }\n  }\n\n  checkInUseEmail(control) {\n    // mimic http database access\n    const db = ['tony@gmail.com'];\n    return new Observable(observer => {\n      setTimeout(() => {\n        const result = (db.indexOf(control.value) !== -1) ? { alreadyInUse: true } : null;\n        observer.next(result);\n        observer.complete();\n      }, 4000);\n    });\n  }\n\n  getError(data: any) {\n    // console.log('getError', data);\n    return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n      this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n        this.formGroup.get('email').hasError('alreadyInUse') ? 'This emailaddress is already in use' : '';\n  }\n\n  getErrorPassword() {\n    return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n      this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n  }\n\n  onSubmit(post) {\n    this.post = post;\n    const tempformval: any = {};\n    for (const x in this.formGroup.controls) {\n      this.formGroup.controls[x].markAsTouched();\n      // console.log(this.formGroup.controls[x].errors, x, 'err');\n      // if(this.formGroup.controls[x].valid){\n      // console.log('x',x);\n      const b = x.split('__');\n      // console.log('b',b,b.length,b[0]);\n      for (const m in this.formdataval.fields) {\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple == null && this.filearray[this.formdataval.fields[m].name] != null) {\n          if (this.filearray[this.formdataval.fields[m].name] != null && this.filearray[this.formdataval.fields[m].name].uploaded == 1) {\n            // fileservername: \"Test-1589216992392My Saved Schema.json\"\n            // lastModified: 1589174477504\n            // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n            // name: \"My Saved Schema.json\"\n            // size: 135096\n            // type: \"application/json\"\n            // uploaded: 1\n            const tfile: any = {};\n            tfile.fileservername = this.filearray[this.formdataval.fields[m].name].fileservername;\n            tfile.name = this.filearray[this.formdataval.fields[m].name].name;\n            tfile.size = this.filearray[this.formdataval.fields[m].name].size;\n            tfile.type = this.filearray[this.formdataval.fields[m].name].type;\n            tfile.path = this.formdataval.fields[m].path;\n            tfile.bucket = this.formdataval.fields[m].bucket;\n            tfile.baseurl = this.formdataval.fields[m].baseurl;\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfile);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'file' && this.formdataval.fields[m].multiple != null && this.formdataval.fields[m].multiple == true) {\n          const tfilearr: any = [];\n          for (const g in this.filearray[this.formdataval.fields[m].name]) {\n            if (this.filearray[this.formdataval.fields[m].name][g] != null && this.filearray[this.formdataval.fields[m].name][g].uploaded == 1) {\n              // fileservername: \"Test-1589216992392My Saved Schema.json\"\n              // lastModified: 1589174477504\n              // lastModifiedDate: Mon May 11 2020 10: 51: 17 GMT + 0530(India Standard Time) { }\n              // name: \"My Saved Schema.json\"\n              // size: 135096\n              // type: \"application/json\"\n              // uploaded: 1\n              const tfile: any = {};\n              tfile.fileservername = this.filearray[this.formdataval.fields[m].name][g].fileservername;\n              tfile.name = this.filearray[this.formdataval.fields[m].name][g].name;\n              tfile.size = this.filearray[this.formdataval.fields[m].name][g].size;\n              tfile.type = this.filearray[this.formdataval.fields[m].name][g].type;\n              tfile.path = this.formdataval.fields[m].path;\n              tfile.bucket = this.formdataval.fields[m].bucket;\n              tfile.baseurl = this.formdataval.fields[m].baseurl;\n              tfilearr.push(tfile);\n\n            }\n            this.formGroup.controls[this.formdataval.fields[m].name].patchValue(tfilearr);\n          }\n        }\n        if (this.formdataval.fields[m].type == 'autocomplete') {\n          if (this.autocompletefiledvalue != null && this.autocompletefiledvalue[this.formdataval.fields[m].name] != null && this.formdataval.fields[m].validations != null) {\n            // console.log('autoerror', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: null });\n            // console.log('autoerror after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n          } else {\n            // console.log('autoerror set', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n            this.formGroup.controls[this.formdataval.fields[m].name].setErrors({ required: true });\n            // console.log('autoerror set after ', this.formGroup.controls[this.formdataval.fields[m].name].errors);\n\n          }\n          if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n            tempformval[x] = this.autocompletefiledvalue[this.formdataval.fields[m].name];\n          }\n        }\n        if (b.length > 1 && b[0] == this.formdataval.fields[m].name && this.formdataval.fields[m].name != x && this.formdataval.fields[m].type == 'checkbox' && this.formdataval.fields[m].multiple != null) {\n          // console.log('aaaaff...');\n          if (this.formGroup.controls[x].value == true) {\n            for (const k in this.formdataval.fields[m].val) {\n              if (this.formdataval.fields[m].val[k].key == b[1]) {\n                if (tempformval[this.formdataval.fields[m].name] == null) {\n                  tempformval[this.formdataval.fields[m].name] = [];\n                }\n                tempformval[this.formdataval.fields[m].name].push(b[1]);\n                // console.log('gv', b[1]);\n              }\n            }\n          }\n        }\n        // else{\n        if (x == this.formdataval.fields[m].name && tempformval[x] == null) {\n          tempformval[x] = this.formGroup.controls[x].value;\n        }\n        //  }\n      }\n      // console.log(this.formGroup.controls[x].errors, x, 'err22');\n\n      // }\n    }\n    // console.log(post, 'post', this.formGroup.valid, this.formdataval, this.formdataval.apiUrl, 'ffff', tempformval);\n\n    if (this.formGroup.valid) {\n\n\n      if (this.formdataval.endpoint != null || this.formdataval.apiUrl) {\n        this.loading = true;\n        const link: any = this.formdataval.apiUrl + this.formdataval.endpoint;\n        const source: any = {};\n        source.data = this.formGroup.value;\n        this._apiService.postSearch(link, this.formdataval.jwttoken, source).subscribe(res => {\n          let result: any = {};\n          result = res;\n          if (result.status == 'success') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this.formGroup.reset();\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: { errormessage: this.formdataval.successmessage }\n            });\n            // console.log(result, 'red', this.formdataval.redirectpath);\n            if (this.formdataval.redirectpath != null && this.formdataval.redirectpath != '' && this.formdataval.redirectpath != '/') {\n              this.router.navigate([this.formdataval.redirectpath]);\n            } else {\n              this.loading = false;\n            }\n          }\n          if (result.status == 'error') {\n            this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: result.status, fromval: result });\n            this._snackBar.openFromComponent(SnackbarComponent, {\n              duration: 6000,\n              data: result\n            });\n          }\n\n\n        }, error => {\n          // console.log('Oooops!');\n          this._snackBar.openFromComponent(SnackbarComponent, {\n            duration: 6000,\n            data: { errormessage: 'Something Went Wrong ,Try Again!!' }\n          });\n          this.onFormFieldChange.emit({ field: 'fromsubmitservererror', fieldval: 'servererror', fromval: this.formGroup.value });\n          this.loading = false; //disable loader \n        });\n      } else {\n\n        this.onFormFieldChange.emit({ field: 'fromsubmit', fieldval: 'validationerror', fromval: this.formGroup.value });\n\n      }\n    } else {\n      this.scrollToFirstInvalidControl();\n    }\n\n  }\n\n  private scrollToFirstInvalidControl() {\n    const firstInvalidControl: HTMLElement = this.elementRef.nativeElement.querySelector(\n      \"form .ng-invalid\"\n    );\n\n    window.scroll({\n      top: this.getTopOffset(firstInvalidControl),\n      left: 0,\n      behavior: \"smooth\"\n    });\n  }\n\n  private getTopOffset(controlEl: HTMLElement): number {\n    const labelOffset = 50;\n    return controlEl.getBoundingClientRect().top + window.scrollY - labelOffset;\n  } private el: ElementRef\n\n  fileChangeEvent(event: any): void {\n    this.imageChangedEvent = event;\n    console.log('event', event);\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    console.log('this.croppedImage', event);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n\n}\n","/**\n * Created by debasiskar on 01/04/19.\n */\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { MatMomentDateModule } from \"@angular/material-moment-adapter\";\nimport {\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    // MatMomentDateModule,\n} from '@angular/material';\n\n@NgModule({\n    exports: [\n        A11yModule,\n        CdkStepperModule,\n        CdkTableModule,\n        CdkTreeModule,\n        DragDropModule,\n        MatAutocompleteModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatDividerModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatTreeModule,\n        PortalModule,\n        ScrollingModule,\n        // MatMomentDateModule,\n    ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id: any;\n\n  @Input()          // setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/' + id + '?autoplay=1');\n    // console.warn(this.id);\n  }\n  constructor(public sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'CustomPipe'\n})\nexport class CustomdataPipe implements PipeTransform {\n\n  transform(value: any, name: any, val: any): any {\n    // let newStr = `${before} ${value} ${after}`;\n    // console.log(value,name,val,'pipe++++++++++====')\n\n    // if (name == 'description_html') {\n    //   // console.log(val.length, 'desc====')\n    //   var str = val.substring(0, 200) +'....';\n    //   return str;\n    // } else {\n    //   return val\n    // }\n\n    if (name.match(/dollar/g) == 'dollar' || name.match(/currency/g) == 'currency' ) {\n      var dollar = '$' + val;\n      return dollar;\n    } else {\n      return val\n    }\n  }\n\n}\n","import {NgModule, Component, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\nimport {ListingComponent, Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent} from './listing.component';\nimport {DemoMaterialModule} from './materialmodules';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ApiService } from './api.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { MomentModule } from 'ngx-moment';\nimport {RouterModule} from '@angular/router';\nimport {YoutubeplayerComponent} from './youtubeplayer/youtubeplayer.component';\nimport { ShowformComponent } from './showform/showform.component';\nimport { CKEditorModule } from 'ng2-ckeditor';\n// import { MatFileUploadModule } from 'angular-material-fileupload';\nimport { ImageCropperModule } from 'ngx-image-cropper';\nimport { CustomdataPipe } from './customdata.pipe';\n\n\n@NgModule({\n    declarations: [ListingComponent, Confirmdialog, BottomSheet, YoutubeplayerComponent, VideoPlayer, ImageView, SnackbarComponent, ShowformComponent, CustomdataPipe],\n    imports: [\n        CommonModule,\n        // BrowserModule, BrowserAnimationsModule,\n        DemoMaterialModule,\n        FormsModule, ReactiveFormsModule,\n        RouterModule,\n        MomentModule, CKEditorModule,\n        ImageCropperModule\n\n\n    ],\n    schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n    exports: [ListingComponent, ShowformComponent\n    ],\n    providers: [ApiService],\n    entryComponents: [Confirmdialog, BottomSheet, VideoPlayer, ImageView, SnackbarComponent],\n})\nexport class ListingModule {\n}\n"]}